import{betterFetch as q}from"@better-fetch/fetch";import{APIError as W}from"better-call";import{decodeJwt as Q,decodeProtectedHeader as X,importJWK as Z,jwtVerify as Y}from"jose";var w=(e,i="ms")=>new Date(Date.now()+(i==="sec"?e*1e3:e));import{createHash as N}from"@better-auth/utils/hash";import{base64Url as j}from"@better-auth/utils/base64";async function U(e){let i=await N("SHA-256").digest(e);return j.encode(new Uint8Array(i),{padding:!1})}function y(e){return{tokenType:e.token_type,accessToken:e.access_token,refreshToken:e.refresh_token,accessTokenExpiresAt:e.expires_in?w(e.expires_in,"sec"):void 0,scopes:e?.scope?typeof e.scope=="string"?e.scope.split(" "):e.scope:[],idToken:e.id_token}}async function u({id:e,options:i,authorizationEndpoint:r,state:t,codeVerifier:o,scopes:n,claims:a,redirectURI:s,duration:l}){let c=new URL(r);if(c.searchParams.set("response_type","code"),c.searchParams.set("client_id",i.clientId),c.searchParams.set("state",t),c.searchParams.set("scope",n.join(" ")),c.searchParams.set("redirect_uri",i.redirectURI||s),o){let m=await U(o);c.searchParams.set("code_challenge_method","S256"),c.searchParams.set("code_challenge",m)}if(a){let m=a.reduce((f,G)=>(f[G]=null,f),{});c.searchParams.set("claims",JSON.stringify({id_token:{email:null,email_verified:null,...m}}))}return l&&c.searchParams.set("duration",l),c}import{betterFetch as M}from"@better-fetch/fetch";import{jwtVerify as Oe}from"jose";async function d({code:e,codeVerifier:i,redirectURI:r,options:t,tokenEndpoint:o,authentication:n}){let a=new URLSearchParams,s={"content-type":"application/x-www-form-urlencoded",accept:"application/json","user-agent":"better-auth"};if(a.set("grant_type","authorization_code"),a.set("code",e),i&&a.set("code_verifier",i),a.set("redirect_uri",r),n==="basic"){let f=btoa(`${t.clientId}:${t.clientSecret}`);s.authorization=`Basic ${f}`}else a.set("client_id",t.clientId),a.set("client_secret",t.clientSecret);let{data:l,error:c}=await M(o,{method:"POST",body:a,headers:s});if(c)throw c;return y(l)}import{z as fr}from"zod";import{APIError as hr}from"better-call";var _=Object.create(null),b=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?_:globalThis),P=new Proxy(_,{get(e,i){return b()[i]??_[i]},has(e,i){let r=b();return i in r||i in _},set(e,i,r){let t=b(!0);return t[i]=r,!0},deleteProperty(e,i){if(!i)return!1;let r=b(!0);return delete r[i],!0},ownKeys(){let e=b(!0);return Object.keys(e)}});function F(e){return e?e!=="false":!1}var H=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var Ee=H==="test"||F(P.TEST);var g=class extends Error{constructor(i,r){super(i),this.name="BetterAuthError",this.message=i,this.cause=r,this.stack=""}};import{createHash as Ze}from"@better-auth/utils/hash";import{xchacha20poly1305 as er}from"@noble/ciphers/chacha";import{bytesToHex as tr,hexToBytes as ir,utf8ToBytes as or}from"@noble/ciphers/utils";import{managedNonce as ar}from"@noble/ciphers/webcrypto";import{scryptAsync as Me}from"@noble/hashes/scrypt";import{getRandomValues as He}from"uncrypto";import{hex as Je}from"@better-auth/utils/hex";import{createRandomStringGenerator as K}from"@better-auth/utils/random";var J=K("a-z","0-9","A-Z","-_");var A=e=>{let i="https://appleid.apple.com/auth/token";return{id:"apple",name:"Apple",createAuthorizationURL({state:r,scopes:t,redirectURI:o}){let n=t||["email","name"];return e.scope&&n.push(...e.scope),new URL(`https://appleid.apple.com/auth/authorize?client_id=${e.clientId}&response_type=code&redirect_uri=${e.redirectURI||o}&scope=${n.join(" ")}&state=${r}&response_mode=form_post`)},validateAuthorizationCode:async({code:r,codeVerifier:t,redirectURI:o})=>d({code:r,codeVerifier:t,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:i}),async verifyIdToken(r,t){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(r,t);let o=X(r),{kid:n,alg:a}=o;if(!n||!a)return!1;let s=await ee(n),{payload:l}=await Y(r,s,{algorithms:[a],issuer:"https://appleid.apple.com",audience:e.appBundleIdentifier||e.clientId,maxTokenAge:"1h"});return["email_verified","is_private_email"].forEach(c=>{l[c]!==void 0&&(l[c]=!!l[c])}),t&&l.nonce!==t?!1:!!l},async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);if(!r.idToken)return null;let t=Q(r.idToken);if(!t)return null;let o=t.user?`${t.user.name.firstName} ${t.user.name.lastName}`:t.email,n=await e.mapProfileToUser?.(t);return{user:{id:t.sub,name:o,emailVerified:!1,email:t.email,...n},data:t}}}},ee=async e=>{let i="https://appleid.apple.com",r="/auth/keys",{data:t}=await q(`${i}${r}`);if(!t?.keys)throw new W("BAD_REQUEST",{message:"Keys not found"});let o=t.keys.find(n=>n.kid===e);if(!o)throw new Error(`JWK with kid ${e} not found`);return await Z(o,o.alg)};import{betterFetch as re}from"@better-fetch/fetch";var R=e=>({id:"discord",name:"Discord",createAuthorizationURL({state:i,scopes:r,redirectURI:t}){let o=r||["identify","email"];return e.scope&&o.push(...e.scope),new URL(`https://discord.com/api/oauth2/authorize?scope=${o.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||t)}&state=${i}&prompt=${e.prompt||"none"}`)},validateAuthorizationCode:async({code:i,redirectURI:r})=>d({code:i,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://discord.com/api/oauth2/token"}),async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let{data:r,error:t}=await re("https://discord.com/api/users/@me",{headers:{authorization:`Bearer ${i.accessToken}`}});if(t)return null;if(r.avatar===null){let n=r.discriminator==="0"?Number(BigInt(r.id)>>BigInt(22))%6:parseInt(r.discriminator)%5;r.image_url=`https://cdn.discordapp.com/embed/avatars/${n}.png`}else{let n=r.avatar.startsWith("a_")?"gif":"png";r.image_url=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.${n}`}let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name||r.username||"",email:r.email,emailVerified:r.verified,image:r.image_url,...o},data:r}}});import{betterFetch as te}from"@better-fetch/fetch";var k=e=>({id:"facebook",name:"Facebook",async createAuthorizationURL({state:i,scopes:r,redirectURI:t}){let o=r||["email","public_profile"];return e.scope&&o.push(...e.scope),await u({id:"facebook",options:e,authorizationEndpoint:"https://www.facebook.com/v21.0/dialog/oauth",scopes:o,state:i,redirectURI:t})},validateAuthorizationCode:async({code:i,redirectURI:r})=>d({code:i,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://graph.facebook.com/oauth/access_token"}),async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let{data:r,error:t}=await te("https://graph.facebook.com/me?fields=id,name,email,picture",{auth:{type:"Bearer",token:i.accessToken}});if(t)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.email,image:r.picture.data.url,emailVerified:r.email_verified,...o},data:r}}});import{betterFetch as I}from"@better-fetch/fetch";var L=e=>{let i="https://github.com/login/oauth/access_token";return{id:"github",name:"GitHub",createAuthorizationURL({state:r,scopes:t,codeVerifier:o,redirectURI:n}){let a=t||["user:email"];return e.scope&&a.push(...e.scope),u({id:"github",options:e,authorizationEndpoint:"https://github.com/login/oauth/authorize",scopes:a,state:r,redirectURI:n})},validateAuthorizationCode:async({code:r,redirectURI:t})=>d({code:r,redirectURI:e.redirectURI||t,options:e,tokenEndpoint:i}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:t,error:o}=await I("https://api.github.com/user",{headers:{"User-Agent":"better-auth",authorization:`Bearer ${r.accessToken}`}});if(o)return null;let n=!1,{data:a}=await I("https://api.github.com/user/emails",{headers:{authorization:`Bearer ${r.accessToken}`,"User-Agent":"better-auth"}});a&&(t.email=(a.find(l=>l.primary)??a[0])?.email,n=a.find(l=>l.email===t.email)?.verified??!1);let s=await e.mapProfileToUser?.(t);return{user:{id:t.id.toString(),name:t.name||t.login,email:t.email,image:t.avatar_url,emailVerified:n,...s},data:t}}}};var v=["info","success","warn","error","debug"];function ie(e,i){return v.indexOf(i)<=v.indexOf(e)}var p={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},oe={info:p.fg.blue,success:p.fg.green,warn:p.fg.yellow,error:p.fg.red,debug:p.fg.magenta},ne=(e,i)=>{let r=new Date().toISOString();return`${p.dim}${r}${p.reset} ${oe[e]}${e.toUpperCase()}${p.reset} ${p.bright}Better Auth${p.reset} ${i}`},ae=e=>{let i=e?.disabled!==!0,r=e?.level??"error",t=(o,n,a=[])=>{if(!i||!ie(r,o))return;let s=ne(o,n);if(!e||typeof e.log!="function"){o==="error"?console.error(s,...a):o==="warn"?console.warn(s,...a):console.log(s,...a);return}e.log(o==="success"?"info":o,s,...a)};return Object.fromEntries(v.map(o=>[o,(...[n,...a])=>t(o,n,a)]))},h=ae();import{betterFetch as se}from"@better-fetch/fetch";import{decodeJwt as ce}from"jose";var T=e=>({id:"google",name:"Google",async createAuthorizationURL({state:i,scopes:r,codeVerifier:t,redirectURI:o}){if(!e.clientId||!e.clientSecret)throw h.error("Client Id and Client Secret is required for Google. Make sure to provide them in the options."),new g("CLIENT_ID_AND_SECRET_REQUIRED");if(!t)throw new g("codeVerifier is required for Google");let n=r||["email","profile","openid"];e.scope&&n.push(...e.scope);let a=await u({id:"google",options:e,authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",scopes:n,state:i,codeVerifier:t,redirectURI:o});return e.accessType&&a.searchParams.set("access_type",e.accessType),e.prompt&&a.searchParams.set("prompt",e.prompt),a},validateAuthorizationCode:async({code:i,codeVerifier:r,redirectURI:t})=>d({code:i,codeVerifier:r,redirectURI:e.redirectURI||t,options:e,tokenEndpoint:"https://oauth2.googleapis.com/token"}),async verifyIdToken(i,r){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(i,r);let t=`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${i}`,{data:o}=await se(t);return o?o.aud===e.clientId&&o.iss==="https://accounts.google.com":!1},async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);if(!i.idToken)return null;let r=ce(i.idToken),t=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.name,email:r.email,image:r.picture,emailVerified:r.email_verified,...t},data:r}}});import{betterFetch as de}from"@better-fetch/fetch";import{decodeJwt as le}from"jose";var O=e=>{let i=e.tenantId||"common",r=`https://login.microsoftonline.com/${i}/oauth2/v2.0/authorize`,t=`https://login.microsoftonline.com/${i}/oauth2/v2.0/token`;return{id:"microsoft",name:"Microsoft EntraID",createAuthorizationURL(o){let n=o.scopes||["openid","profile","email","User.Read"];return e.scope&&n.push(...e.scope),u({id:"microsoft",options:e,authorizationEndpoint:r,state:o.state,codeVerifier:o.codeVerifier,scopes:n,redirectURI:o.redirectURI})},validateAuthorizationCode({code:o,codeVerifier:n,redirectURI:a}){return d({code:o,codeVerifier:n,redirectURI:e.redirectURI||a,options:e,tokenEndpoint:t})},async getUserInfo(o){if(e.getUserInfo)return e.getUserInfo(o);if(!o.idToken)return null;let n=le(o.idToken),a=e.profilePhotoSize||48;await de(`https://graph.microsoft.com/v1.0/me/photos/${a}x${a}/$value`,{headers:{Authorization:`Bearer ${o.accessToken}`},async onResponse(l){if(!(e.disableProfilePhoto||!l.response.ok))try{let m=await l.response.clone().arrayBuffer(),f=Buffer.from(m).toString("base64");n.picture=`data:image/jpeg;base64, ${f}`}catch(c){h.error(c&&typeof c=="object"&&"name"in c?c.name:"",c)}}});let s=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:n.name,email:n.email,image:n.picture,emailVerified:!0,...s},data:n}}}};import{betterFetch as ue}from"@better-fetch/fetch";var z=e=>({id:"spotify",name:"Spotify",createAuthorizationURL({state:i,scopes:r,codeVerifier:t,redirectURI:o}){let n=r||["user-read-email"];return e.scope&&n.push(...e.scope),u({id:"spotify",options:e,authorizationEndpoint:"https://accounts.spotify.com/authorize",scopes:n,state:i,codeVerifier:t,redirectURI:o})},validateAuthorizationCode:async({code:i,codeVerifier:r,redirectURI:t})=>d({code:i,codeVerifier:r,redirectURI:e.redirectURI||t,options:e,tokenEndpoint:"https://accounts.spotify.com/api/token"}),async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let{data:r,error:t}=await ue("https://api.spotify.com/v1/me",{method:"GET",headers:{Authorization:`Bearer ${i.accessToken}`}});if(t)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name,email:r.email,image:r.images[0]?.url,emailVerified:!1,...o},data:r}}});import{createRandomStringGenerator as ot}from"@better-auth/utils/random";import{decodeJwt as pe}from"jose";var E=e=>({id:"twitch",name:"Twitch",createAuthorizationURL({state:i,scopes:r,redirectURI:t}){let o=r||["user:read:email","openid"];return e.scope&&o.push(...e.scope),u({id:"twitch",redirectURI:t,options:e,authorizationEndpoint:"https://id.twitch.tv/oauth2/authorize",scopes:o,state:i,claims:e.claims||["email","email_verified","preferred_username","picture"]})},validateAuthorizationCode:async({code:i,redirectURI:r})=>d({code:i,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://id.twitch.tv/oauth2/token"}),async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let r=i.idToken;if(!r)return h.error("No idToken found in token"),null;let t=pe(r),o=await e.mapProfileToUser?.(t);return{user:{id:t.sub,name:t.preferred_username,email:t.email,image:t.picture,emailVerified:!1,...o},data:t}}});import{betterFetch as me}from"@better-fetch/fetch";var S=e=>({id:"twitter",name:"Twitter",createAuthorizationURL(i){let r=i.scopes||["users.read","tweet.read","offline.access"];return e.scope&&r.push(...e.scope),u({id:"twitter",options:e,authorizationEndpoint:"https://x.com/i/oauth2/authorize",scopes:r,state:i.state,codeVerifier:i.codeVerifier,redirectURI:i.redirectURI})},validateAuthorizationCode:async({code:i,codeVerifier:r,redirectURI:t})=>d({code:i,codeVerifier:r,authentication:"basic",redirectURI:e.redirectURI||t,options:e,tokenEndpoint:"https://api.x.com/2/oauth2/token"}),async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let{data:r,error:t}=await me("https://api.x.com/2/users/me?user.fields=profile_image_url",{method:"GET",headers:{Authorization:`Bearer ${i.accessToken}`}});if(t)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.data.id,name:r.data.name,email:r.data.username||null,image:r.data.profile_image_url,emailVerified:r.data.verified||!1,...o},data:r}}});import{betterFetch as fe}from"@better-fetch/fetch";var $=e=>{let i="https://api.dropboxapi.com/oauth2/token";return{id:"dropbox",name:"Dropbox",createAuthorizationURL:async({state:r,scopes:t,codeVerifier:o,redirectURI:n})=>{let a=t||["account_info.read"];return e.scope&&a.push(...e.scope),await u({id:"dropbox",options:e,authorizationEndpoint:"https://www.dropbox.com/oauth2/authorize",scopes:a,state:r,redirectURI:n,codeVerifier:o})},validateAuthorizationCode:async({code:r,codeVerifier:t,redirectURI:o})=>await d({code:r,codeVerifier:t,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:i}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:t,error:o}=await fe("https://api.dropboxapi.com/2/users/get_current_account",{method:"POST",headers:{Authorization:`Bearer ${r.accessToken}`}});if(o)return null;let n=await e.mapProfileToUser?.(t);return{user:{id:t.account_id,name:t.name?.display_name,email:t.email,emailVerified:t.email_verified||!1,image:t.profile_photo_url,...n},data:t}}}};import{betterFetch as ge}from"@better-fetch/fetch";var C=e=>{let i="https://www.linkedin.com/oauth/v2/authorization",r="https://www.linkedin.com/oauth/v2/accessToken";return{id:"linkedin",name:"Linkedin",createAuthorizationURL:async({state:t,scopes:o,redirectURI:n})=>{let a=o||["profile","email","openid"];return e.scope&&a.push(...e.scope),await u({id:"linkedin",options:e,authorizationEndpoint:i,scopes:a,state:t,redirectURI:n})},validateAuthorizationCode:async({code:t,redirectURI:o})=>await d({code:t,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:r}),async getUserInfo(t){let{data:o,error:n}=await ge("https://api.linkedin.com/v2/userinfo",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(n)return null;let a=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:o.name,email:o.email,emailVerified:o.email_verified||!1,image:o.picture,...a},data:o}}}};import{betterFetch as he}from"@better-fetch/fetch";var x=(e="")=>e.split("://").map(i=>i.replace(/\/{2,}/g,"/")).join("://"),be=e=>{let i=e||"https://gitlab.com";return{authorizationEndpoint:x(`${i}/oauth/authorize`),tokenEndpoint:x(`${i}/oauth/token`),userinfoEndpoint:x(`${i}/api/v4/user`)}},B=e=>{let{authorizationEndpoint:i,tokenEndpoint:r,userinfoEndpoint:t}=be(e.issuer),o="gitlab";return{id:o,name:"Gitlab",createAuthorizationURL:async({state:a,scopes:s,codeVerifier:l,redirectURI:c})=>{let m=s||["read_user"];return e.scope&&m.push(...e.scope),await u({id:o,options:e,authorizationEndpoint:i,scopes:m,state:a,redirectURI:c,codeVerifier:l})},validateAuthorizationCode:async({code:a,redirectURI:s,codeVerifier:l})=>d({code:a,redirectURI:e.redirectURI||s,options:e,codeVerifier:l,tokenEndpoint:r}),async getUserInfo(a){if(e.getUserInfo)return e.getUserInfo(a);let{data:s,error:l}=await he(t,{headers:{authorization:`Bearer ${a.accessToken}`}});if(l||s.state!=="active"||s.locked)return null;let c=await e.mapProfileToUser?.(s);return{user:{id:s.id.toString(),name:s.name??s.username,email:s.email,image:s.avatar_url,emailVerified:!0,...c},data:s}}}};import{betterFetch as D}from"@better-fetch/fetch";var V=e=>({id:"reddit",name:"Reddit",createAuthorizationURL({state:i,scopes:r,redirectURI:t}){let o=r||["identity"];return e.scope&&o.push(...e.scope),u({id:"reddit",options:e,authorizationEndpoint:"https://www.reddit.com/api/v1/authorize",scopes:o,state:i,redirectURI:t,duration:e.duration})},validateAuthorizationCode:async({code:i,redirectURI:r})=>{let t=new URLSearchParams({grant_type:"authorization_code",code:i,redirect_uri:e.redirectURI||r}),o={"content-type":"application/x-www-form-urlencoded",accept:"text/plain","user-agent":"better-auth",Authorization:`Basic ${Buffer.from(`${e.clientId}:${e.clientSecret}`).toString("base64")}`},{data:n,error:a}=await D("https://www.reddit.com/api/v1/access_token",{method:"POST",headers:o,body:t.toString()});if(a)throw a;return y(n)},async getUserInfo(i){if(e.getUserInfo)return e.getUserInfo(i);let{data:r,error:t}=await D("https://oauth.reddit.com/api/v1/me",{headers:{Authorization:`Bearer ${i.accessToken}`,"User-Agent":"better-auth"}});if(t)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.oauth_client_id,emailVerified:r.has_verified_email,image:r.icon_img?.split("?")[0],...o},data:r}}});import{z as ye}from"zod";var _e={apple:A,discord:R,facebook:k,github:L,microsoft:O,google:T,spotify:z,twitch:E,twitter:S,dropbox:$,linkedin:C,gitlab:B,reddit:V},ve=Object.keys(_e),Jt=ye.enum(ve,{description:"OAuth2 provider to use"});export{Jt as SocialProviderListEnum,A as apple,R as discord,$ as dropbox,k as facebook,ee as getApplePublicKey,L as github,B as gitlab,T as google,C as linkedin,O as microsoft,V as reddit,ve as socialProviderList,_e as socialProviders,z as spotify,E as twitch,S as twitter};
