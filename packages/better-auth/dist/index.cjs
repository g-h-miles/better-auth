"use strict";var Ae=Object.defineProperty;var Gr=Object.getOwnPropertyDescriptor;var Wr=Object.getOwnPropertyNames;var Kr=Object.prototype.hasOwnProperty;var a=(e,t)=>Ae(e,"name",{value:t,configurable:!0});var Qr=(e,t)=>{for(var r in t)Ae(e,r,{get:t[r],enumerable:!0})},Zr=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Wr(t))!Kr.call(e,o)&&o!==r&&Ae(e,o,{get:()=>t[o],enumerable:!(n=Gr(t,o))||n.enumerable});return e};var Jr=e=>Zr(Ae({},"__esModule",{value:!0}),e);var In={};Qr(In,{BetterAuthError:()=>N,HIDE_METADATA:()=>te,MissingDependencyError:()=>Ce,betterAuth:()=>_n,capitalizeFirstLetter:()=>pn,createCookieGetter:()=>Ee,createLogger:()=>ye,deleteSessionCookie:()=>M,generateId:()=>$,generateState:()=>he,getCookies:()=>Be,levels:()=>xe,logger:()=>C,parseCookies:()=>nn,parseSetCookieHeader:()=>rn,parseState:()=>Ve,setCookieCache:()=>Ue,setSessionCookie:()=>D,shouldPublishLog:()=>Pt});module.exports=Jr(In);var I=require("better-call");var ct=require("better-call");var X=require("better-call"),ot=(0,X.createMiddleware)(async()=>({})),ue=(0,X.createMiddlewareCreator)({use:[ot,(0,X.createMiddleware)(async()=>({}))]}),E=(0,X.createEndpointCreator)({use:[ot]});function De(e){return e==="-"||e==="^"||e==="$"||e==="+"||e==="."||e==="("||e===")"||e==="|"||e==="["||e==="]"||e==="{"||e==="}"||e==="*"||e==="?"||e==="\\"?`\\${e}`:e}a(De,"escapeRegExpChar");function Yr(e){let t="";for(let r=0;r<e.length;r++)t+=De(e[r]);return t}a(Yr,"escapeRegExpString");function it(e,t=!0){if(Array.isArray(e))return`(?:${e.map(c=>`^${it(c,t)}$`).join("|")})`;let r="",n="",o=".";t===!0?(r="/",n="[/\\\\]",o="[^/\\\\]"):t&&(r=t,n=Yr(r),n.length>1?(n=`(?:${n})`,o=`((?!${n}).)`):o=`[^${n}]`);let i=t?`${n}+?`:"",d=t?`${n}*?`:"",l=t?e.split(r):[e],u="";for(let s=0;s<l.length;s++){let c=l[s],m=l[s+1],g="";if(!(!c&&s>0)){if(t&&(s===l.length-1?g=d:m!=="**"?g=i:g=""),t&&c==="**"){g&&(u+=s===0?"":g,u+=`(?:${o}*?${g})*?`);continue}for(let p=0;p<c.length;p++){let f=c[p];f==="\\"?p<c.length-1&&(u+=De(c[p+1]),p++):f==="?"?u+=o:f==="*"?u+=`${o}*?`:u+=De(f)}u+=g}}return u}a(it,"transform");function Xr(e,t){if(typeof t!="string")throw new TypeError(`Sample must be a string, but ${typeof t} given`);return e.test(t)}a(Xr,"isMatch");function be(e,t){if(typeof e!="string"&&!Array.isArray(e))throw new TypeError(`The first argument must be a single pattern string or an array of patterns, but ${typeof e} given`);if((typeof t=="string"||typeof t=="boolean")&&(t={separator:t}),arguments.length===2&&!(typeof t>"u"||typeof t=="object"&&t!==null&&!Array.isArray(t)))throw new TypeError(`The second argument must be an options object or a string/boolean separator, but ${typeof t} given`);if(t=t||{},t.separator==="\\")throw new Error("\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead");let r=it(e,t.separator),n=new RegExp(`^${r}$`,t.flags),o=Xr.bind(null,n);return o.options=t,o.pattern=e,o.regexp=n,o}a(be,"wildcardMatch");var ke=Object.create(null),le=a(e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?ke:globalThis),"_getEnv"),B=new Proxy(ke,{get(e,t){return le()[t]??ke[t]},has(e,t){let r=le();return t in r||t in ke},set(e,t,r){let n=le(!0);return n[t]=r,!0},deleteProperty(e,t){if(!t)return!1;let r=le(!0);return delete r[t],!0},ownKeys(){let e=le(!0);return Object.keys(e)}});function en(e){return e?e!=="false":!1}a(en,"toBoolean");var Re=typeof process<"u"&&process.env&&process.env.NODE_ENV||"",pe=Re==="production",Te=Re==="dev"||Re==="development",st=Re==="test"||en(B.TEST);var N=class extends Error{static{a(this,"BetterAuthError")}constructor(t,r){super(t),this.name="BetterAuthError",this.message=t,this.cause=r,this.stack=""}},Ce=class extends N{static{a(this,"MissingDependencyError")}constructor(t){super(`The package "${t}" is required. Make sure it is installed.`,t)}};function tn(e){try{return new URL(e).pathname!=="/"}catch{throw new N(`Invalid base URL: ${e}. Please provide a valid base URL.`)}}a(tn,"checkHasPath");function Ne(e,t="/api/auth"){return tn(e)?e:(t=t.startsWith("/")?t:`/${t}`,`${e}${t}`)}a(Ne,"withPath");function fe(e,t){if(e)return Ne(e,t);let r=B.BETTER_AUTH_URL||B.NEXT_PUBLIC_BETTER_AUTH_URL||B.PUBLIC_BETTER_AUTH_URL||B.NUXT_PUBLIC_BETTER_AUTH_URL||B.NUXT_PUBLIC_AUTH_URL||(B.BASE_URL!=="/"?B.BASE_URL:void 0);if(r)return Ne(r,t);if(typeof window<"u"&&window.location)return Ne(window.location.origin,t)}a(fe,"getBaseURL");function at(e){try{return new URL(e).origin}catch{return null}}a(at,"getOrigin");function dt(e){return e.includes("://")?new URL(e).host:e}a(dt,"getHost");var ut=ue(async e=>{if(e.request?.method!=="POST")return;let{body:t,query:r,context:n}=e,o=e.headers?.get("origin")||e.headers?.get("referer")||"",i=t?.callbackURL||r?.callbackURL,d=t?.redirectTo,l=r?.currentURL,u=t?.errorCallbackURL,s=t?.newUserCallbackURL,c=n.trustedOrigins,m=e.headers?.has("cookie"),g=a((f,h)=>f.startsWith("/")?!1:h.includes("*")?be(h)(dt(f)):f.startsWith(h),"matchesPattern"),p=a((f,h)=>{if(!f)return;if(!c.some(b=>g(f,b)||f?.startsWith("/")&&h!=="origin"&&!f.includes(":")))throw e.context.logger.error(`Invalid ${h}: ${f}`),e.context.logger.info(`If it's a valid URL, please add ${f} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${c}`),new ct.APIError("FORBIDDEN",{message:`Invalid ${h}`})},"validateURL");m&&!e.context.options.advanced?.disableCSRFCheck&&p(o,"origin"),i&&p(i,"callbackURL"),d&&p(d,"redirectURL"),l&&p(l,"currentURL"),u&&p(u,"errorCallbackURL"),s&&p(d,"newUserCallbackURL")});var L=require("better-call"),v=require("zod");var V=a((e,t="ms")=>new Date(Date.now()+(t==="sec"?e*1e3:e)),"getDate");var lt=require("@better-auth/utils/base64");var ee=a((e,t)=>{let r=a(()=>{switch(t){case"ms":return e;case"s":return e*1e3;case"m":return e*1e3*60;case"h":return e*1e3*60*60;case"d":return e*1e3*60*60*24;case"w":return e*1e3*60*60*24*7;case"y":return e*1e3*60*60*24*365}},"toMilliseconds"),n={t:`${e}${t}`,value:e,tFormat:t,toMilliseconds:r,toSeconds:a(()=>n.toMilliseconds()/1e3,"toSeconds"),toMinutes:a(()=>n.toSeconds()/60,"toMinutes"),toHours:a(()=>n.toMinutes()/60,"toHours"),toDays:a(()=>n.toHours()/24,"toDays"),toWeeks:a(()=>n.toDays()/7,"toWeeks"),toYears:a(()=>n.toDays()/365,"toYears"),getDate:a(()=>new Date(Date.now()+n.toMilliseconds()),"getDate"),add:a(o=>{let i=typeof o=="string"?me(o).toMilliseconds():o.toMilliseconds();return ee(n.toMilliseconds()+i,"ms")},"add"),subtract:a(o=>{let i=typeof o=="string"?me(o).toMilliseconds():o.toMilliseconds();return ee(n.toMilliseconds()-i,"ms")},"subtract"),multiply:a(o=>ee(n.toMilliseconds()*o,"ms"),"multiply"),divide:a(o=>ee(n.toMilliseconds()/o,"ms"),"divide"),equals:a(o=>{let i=typeof o=="string"?me(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()===i},"equals"),lessThan:a(o=>{let i=typeof o=="string"?me(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()<i},"lessThan"),greaterThan:a(o=>{let i=typeof o=="string"?me(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()>i},"greaterThan"),format:a(o=>{let i=n.getDate();return o.replace(/YYYY|MM|DD|HH|mm|ss/g,d=>{switch(d){case"YYYY":return i.getFullYear().toString();case"MM":return(i.getMonth()+1).toString().padStart(2,"0");case"DD":return i.getDate().toString().padStart(2,"0");case"HH":return i.getHours().toString().padStart(2,"0");case"mm":return i.getMinutes().toString().padStart(2,"0");case"ss":return i.getSeconds().toString().padStart(2,"0");default:return d}})},"format"),fromNow:a(()=>{let o=n.toMilliseconds();return o<0?n.ago():o<1e3?"in a few seconds":o<6e4?`in ${Math.round(o/1e3)} seconds`:o<36e5?`in ${Math.round(o/6e4)} minutes`:o<864e5?`in ${Math.round(o/36e5)} hours`:o<6048e5?`in ${Math.round(o/864e5)} days`:o<26298e5?`in ${Math.round(o/6048e5)} weeks`:o<315576e5?`in ${Math.round(o/26298e5)} months`:`in ${Math.round(o/315576e5)} years`},"fromNow"),ago:a(()=>{let o=-n.toMilliseconds();return o<0?n.fromNow():o<1e3?"a few seconds ago":o<6e4?`${Math.round(o/1e3)} seconds ago`:o<36e5?`${Math.round(o/6e4)} minutes ago`:o<864e5?`${Math.round(o/36e5)} hours ago`:o<6048e5?`${Math.round(o/864e5)} days ago`:o<26298e5?`${Math.round(o/6048e5)} weeks ago`:o<315576e5?`${Math.round(o/26298e5)} months ago`:`${Math.round(o/315576e5)} years ago`},"ago")};return n},"createTime"),me=a(e=>{let t=e.match(/^(\d+)(ms|s|m|h|d|w|y)$/);if(!t)throw new Error("Invalid time format");return ee(parseInt(t[1]),t[2])},"parseTime");var pt=require("@better-auth/utils/hmac");function rn(e){let t=new Map;return e.split(", ").forEach(n=>{let o=n.split(";").map(m=>m.trim()),[i,...d]=o,[l,...u]=i.split("="),s=u.join("=");if(!l||s===void 0)return;let c={value:s};d.forEach(m=>{let[g,...p]=m.split("="),f=p.join("="),h=g.trim().toLowerCase();switch(h){case"max-age":c["max-age"]=f?parseInt(f.trim(),10):void 0;break;case"expires":c.expires=f?new Date(f.trim()):void 0;break;case"domain":c.domain=f?f.trim():void 0;break;case"path":c.path=f?f.trim():void 0;break;case"secure":c.secure=!0;break;case"httponly":c.httponly=!0;break;case"samesite":c.samesite=f?f.trim().toLowerCase():void 0;break;default:c[h]=f?f.trim():!0;break}}),t.set(l,c)}),t}a(rn,"parseSetCookieHeader");function Ee(e){let r=(e.advanced?.useSecureCookies!==void 0?e.advanced?.useSecureCookies:e.baseURL!==void 0?!!e.baseURL.startsWith("https://"):pe)?"__Secure-":"",n=!!e.advanced?.crossSubDomainCookies?.enabled,o=n?e.advanced?.crossSubDomainCookies?.domain||(e.baseURL?new URL(e.baseURL).hostname:void 0):void 0;if(n&&!o)throw new N("baseURL is required when crossSubdomainCookies are enabled");function i(d,l={}){let u=e.advanced?.cookiePrefix||"better-auth",s=e.advanced?.cookies?.[d]?.name||`${u}.${d}`,c=e.advanced?.cookies?.[d]?.attributes;return{name:`${r}${s}`,attributes:{secure:!!r,sameSite:"lax",path:"/",httpOnly:!0,...n?{domain:o}:{},...e.advanced?.defaultCookieAttributes,...l,...c}}}return a(i,"createCookie"),i}a(Ee,"createCookieGetter");function Be(e){let t=Ee(e),r=e.session?.expiresIn||ee(7,"d").toSeconds(),n=t("session_token",{maxAge:r}),o=t("session_data",{maxAge:e.session?.cookieCache?.maxAge||60*5}),i=t("dont_remember");return{sessionToken:{name:n.name,options:n.attributes},sessionData:{name:o.name,options:o.attributes},dontRememberToken:{name:i.name,options:i.attributes}}}a(Be,"getCookies");async function Ue(e,t){if(e.context.options.session?.cookieCache?.enabled){let n=lt.base64Url.encode(JSON.stringify({session:t,expiresAt:V(e.context.authCookies.sessionData.options.maxAge||60,"sec").getTime(),signature:await(0,pt.createHMAC)("SHA-256","base64urlnopad").sign(e.context.secret,JSON.stringify(t))}),{padding:!1});if(n.length>4093)throw new N("Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data");e.setCookie(e.context.authCookies.sessionData.name,n,e.context.authCookies.sessionData.options)}}a(Ue,"setCookieCache");async function D(e,t,r,n){let o=e.context.authCookies.sessionToken.options,i=r?void 0:e.context.sessionConfig.expiresIn;await e.setSignedCookie(e.context.authCookies.sessionToken.name,t.session.token,e.context.secret,{...o,maxAge:i,...n}),r&&await e.setSignedCookie(e.context.authCookies.dontRememberToken.name,"true",e.context.secret,e.context.authCookies.dontRememberToken.options),await Ue(e,t),e.context.setNewSession(t),e.context.options.secondaryStorage&&await e.context.secondaryStorage?.set(t.session.token,JSON.stringify({user:t.user,session:t.session}),Math.floor((new Date(t.session.expiresAt).getTime()-Date.now())/1e3))}a(D,"setSessionCookie");function M(e){e.setCookie(e.context.authCookies.sessionToken.name,"",{...e.context.authCookies.sessionToken.options,maxAge:0}),e.setCookie(e.context.authCookies.sessionData.name,"",{...e.context.authCookies.sessionData.options,maxAge:0}),e.setCookie(e.context.authCookies.dontRememberToken.name,"",{...e.context.authCookies.dontRememberToken.options,maxAge:0})}a(M,"deleteSessionCookie");function nn(e){let t=e.split("; "),r=new Map;return t.forEach(n=>{let[o,i]=n.split("=");r.set(o,i)}),r}a(nn,"parseCookies");var Et=require("@better-fetch/fetch"),Ut=require("better-call"),J=require("jose");var ft=require("@better-auth/utils/hash"),mt=require("@better-auth/utils/base64");async function gt(e){let t=await(0,ft.createHash)("SHA-256").digest(e);return mt.base64Url.encode(new Uint8Array(t),{padding:!1})}a(gt,"generateCodeChallenge");function Oe(e){return{tokenType:e.token_type,accessToken:e.access_token,refreshToken:e.refresh_token,accessTokenExpiresAt:e.expires_in?V(e.expires_in,"sec"):void 0,scopes:e?.scope?typeof e.scope=="string"?e.scope.split(" "):e.scope:[],idToken:e.id_token}}a(Oe,"getOAuth2Tokens");async function O({id:e,options:t,authorizationEndpoint:r,state:n,codeVerifier:o,scopes:i,claims:d,redirectURI:l,duration:u}){let s=new URL(r);if(s.searchParams.set("response_type","code"),s.searchParams.set("client_id",t.clientId),s.searchParams.set("state",n),s.searchParams.set("scope",i.join(" ")),s.searchParams.set("redirect_uri",t.redirectURI||l),o){let c=await gt(o);s.searchParams.set("code_challenge_method","S256"),s.searchParams.set("code_challenge",c)}if(d){let c=d.reduce((m,g)=>(m[g]=null,m),{});s.searchParams.set("claims",JSON.stringify({id_token:{email:null,email_verified:null,...c}}))}return u&&s.searchParams.set("duration",u),s}a(O,"createAuthorizationURL");var ht=require("@better-fetch/fetch");var on=require("jose");async function U({code:e,codeVerifier:t,redirectURI:r,options:n,tokenEndpoint:o,authentication:i}){let d=new URLSearchParams,l={"content-type":"application/x-www-form-urlencoded",accept:"application/json","user-agent":"better-auth"};if(d.set("grant_type","authorization_code"),d.set("code",e),t&&d.set("code_verifier",t),d.set("redirect_uri",r),i==="basic"){let m=btoa(`${n.clientId}:${n.clientSecret}`);l.authorization=`Basic ${m}`}else d.set("client_id",n.clientId),d.set("client_secret",n.clientSecret);let{data:u,error:s}=await(0,ht.betterFetch)(o,{method:"POST",body:d,headers:l});if(s)throw s;return Oe(u)}a(U,"validateAuthorizationCode");var z=require("zod"),qe=require("better-call");var sn=require("@better-auth/utils/hash"),an=require("@noble/ciphers/chacha"),Fe=require("@noble/ciphers/utils"),dn=require("@noble/ciphers/webcrypto");function yt(e,t){let r=new Uint8Array(e),n=new Uint8Array(t);if(r.length!==n.length)return!1;let o=0;for(let i=0;i<r.length;i++)o|=r[i]^n[i];return o===0}a(yt,"constantTimeEqual");var wt=require("@noble/hashes/scrypt"),At=require("uncrypto"),je=require("@better-auth/utils/hex");var oe={N:16384,r:16,p:1,dkLen:64};async function bt(e,t){return await(0,wt.scryptAsync)(e.normalize("NFKC"),t,{N:oe.N,p:oe.p,r:oe.r,dkLen:oe.dkLen,maxmem:128*oe.N*oe.r*2})}a(bt,"generateKey");var kt=a(async e=>{let t=je.hex.encode((0,At.getRandomValues)(new Uint8Array(16))),r=await bt(e,t);return`${t}:${je.hex.encode(r)}`},"hashPassword"),Rt=a(async({hash:e,password:t})=>{let[r,n]=e.split(":"),o=await bt(t,r);return yt(o,new Uint8Array(Buffer.from(n,"hex")))},"verifyPassword");var Tt=require("@better-auth/utils/random"),ge=(0,Tt.createRandomStringGenerator)("a-z","0-9","A-Z","-_");async function he(e,t){let r=e.body?.callbackURL||(e.query?.currentURL?at(e.query?.currentURL):"")||e.context.options.baseURL;if(!r)throw new qe.APIError("BAD_REQUEST",{message:"callbackURL is required"});let n=ge(128),o=ge(32),i=JSON.stringify({callbackURL:r,codeVerifier:n,errorURL:e.body?.errorCallbackURL||e.query?.currentURL,newUserURL:e.body?.newUserCallbackURL,link:t,expiresAt:Date.now()+10*60*1e3}),d=new Date;d.setMinutes(d.getMinutes()+10);let l=await e.context.internalAdapter.createVerificationValue({value:i,identifier:o,expiresAt:d});if(!l)throw e.context.logger.error("Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database"),new qe.APIError("INTERNAL_SERVER_ERROR",{message:"Unable to create verification"});return{state:l.identifier,codeVerifier:n}}a(he,"generateState");async function Ve(e){let t=e.query.state||e.body.state,r=await e.context.internalAdapter.findVerificationValue(t);if(!r)throw e.context.logger.error("State Mismatch. Verification not found",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);let n=z.z.object({callbackURL:z.z.string(),codeVerifier:z.z.string(),errorURL:z.z.string().optional(),newUserURL:z.z.string().optional(),expiresAt:z.z.number(),link:z.z.object({email:z.z.string(),userId:z.z.string()}).optional()}).parse(JSON.parse(r.value));if(n.errorURL||(n.errorURL=`${e.context.baseURL}/error`),n.expiresAt<Date.now())throw await e.context.internalAdapter.deleteVerificationValue(r.id),e.context.logger.error("State expired.",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);return await e.context.internalAdapter.deleteVerificationValue(r.id),n}a(Ve,"parseState");var Ot=a(e=>{let t="https://appleid.apple.com/auth/token";return{id:"apple",name:"Apple",createAuthorizationURL({state:r,scopes:n,redirectURI:o}){let i=n||["email","name"];return e.scope&&i.push(...e.scope),new URL(`https://appleid.apple.com/auth/authorize?client_id=${e.clientId}&response_type=code&redirect_uri=${e.redirectURI||o}&scope=${i.join(" ")}&state=${r}&response_mode=form_post`)},validateAuthorizationCode:a(async({code:r,codeVerifier:n,redirectURI:o})=>U({code:r,codeVerifier:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:t}),"validateAuthorizationCode"),async verifyIdToken(r,n){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(r,n);let o=(0,J.decodeProtectedHeader)(r),{kid:i,alg:d}=o;if(!i||!d)return!1;let l=await cn(i),{payload:u}=await(0,J.jwtVerify)(r,l,{algorithms:[d],issuer:"https://appleid.apple.com",audience:e.appBundleIdentifier||e.clientId,maxTokenAge:"1h"});return["email_verified","is_private_email"].forEach(s=>{u[s]!==void 0&&(u[s]=!!u[s])}),n&&u.nonce!==n?!1:!!u},async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);if(!r.idToken)return null;let n=(0,J.decodeJwt)(r.idToken);if(!n)return null;let o=n.user?`${n.user.name.firstName} ${n.user.name.lastName}`:n.email,i=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:o,emailVerified:!1,email:n.email,...i},data:n}}}},"apple"),cn=a(async e=>{let t="https://appleid.apple.com",r="/auth/keys",{data:n}=await(0,Et.betterFetch)(`${t}${r}`);if(!n?.keys)throw new Ut.APIError("BAD_REQUEST",{message:"Keys not found"});let o=n.keys.find(i=>i.kid===e);if(!o)throw new Error(`JWK with kid ${e} not found`);return await(0,J.importJWK)(o,o.alg)},"getApplePublicKey");var xt=require("@better-fetch/fetch");var St=a(e=>({id:"discord",name:"Discord",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["identify","email"];return e.scope&&o.push(...e.scope),new URL(`https://discord.com/api/oauth2/authorize?scope=${o.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||n)}&state=${t}&prompt=${e.prompt||"none"}`)},validateAuthorizationCode:a(async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://discord.com/api/oauth2/token"}),"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await(0,xt.betterFetch)("https://discord.com/api/users/@me",{headers:{authorization:`Bearer ${t.accessToken}`}});if(n)return null;if(r.avatar===null){let i=r.discriminator==="0"?Number(BigInt(r.id)>>BigInt(22))%6:parseInt(r.discriminator)%5;r.image_url=`https://cdn.discordapp.com/embed/avatars/${i}.png`}else{let i=r.avatar.startsWith("a_")?"gif":"png";r.image_url=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.${i}`}let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name||r.username||"",email:r.email,emailVerified:r.verified,image:r.image_url,...o},data:r}}}),"discord");var vt=require("@better-fetch/fetch");var _t=a(e=>({id:"facebook",name:"Facebook",async createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["email","public_profile"];return e.scope&&o.push(...e.scope),await O({id:"facebook",options:e,authorizationEndpoint:"https://www.facebook.com/v21.0/dialog/oauth",scopes:o,state:t,redirectURI:n})},validateAuthorizationCode:a(async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://graph.facebook.com/oauth/access_token"}),"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await(0,vt.betterFetch)("https://graph.facebook.com/me?fields=id,name,email,picture",{auth:{type:"Bearer",token:t.accessToken}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.email,image:r.picture.data.url,emailVerified:r.email_verified,...o},data:r}}}),"facebook");var Me=require("@better-fetch/fetch");var It=a(e=>{let t="https://github.com/login/oauth/access_token";return{id:"github",name:"GitHub",createAuthorizationURL({state:r,scopes:n,codeVerifier:o,redirectURI:i}){let d=n||["user:email"];return e.scope&&d.push(...e.scope),O({id:"github",options:e,authorizationEndpoint:"https://github.com/login/oauth/authorize",scopes:d,state:r,redirectURI:i})},validateAuthorizationCode:a(async({code:r,redirectURI:n})=>U({code:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:t}),"validateAuthorizationCode"),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:n,error:o}=await(0,Me.betterFetch)("https://api.github.com/user",{headers:{"User-Agent":"better-auth",authorization:`Bearer ${r.accessToken}`}});if(o)return null;let i=!1,{data:d}=await(0,Me.betterFetch)("https://api.github.com/user/emails",{headers:{authorization:`Bearer ${r.accessToken}`,"User-Agent":"better-auth"}});d&&(n.email=(d.find(u=>u.primary)??d[0])?.email,i=d.find(u=>u.email===n.email)?.verified??!1);let l=await e.mapProfileToUser?.(n);return{user:{id:n.id.toString(),name:n.name||n.login,email:n.email,image:n.avatar_url,emailVerified:i,...l},data:n}}}},"github");var xe=["info","success","warn","error","debug"];function Pt(e,t){return xe.indexOf(t)<=xe.indexOf(e)}a(Pt,"shouldPublishLog");var H={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},un={info:H.fg.blue,success:H.fg.green,warn:H.fg.yellow,error:H.fg.red,debug:H.fg.magenta},ln=a((e,t)=>{let r=new Date().toISOString();return`${H.dim}${r}${H.reset} ${un[e]}${e.toUpperCase()}${H.reset} ${H.bright}Better Auth${H.reset} ${t}`},"formatMessage"),ye=a(e=>{let t=e?.disabled!==!0,r=e?.level??"error",n=a((o,i,d=[])=>{if(!t||!Pt(r,o))return;let l=ln(o,i);if(!e||typeof e.log!="function"){o==="error"?console.error(l,...d):o==="warn"?console.warn(l,...d):console.log(l,...d);return}e.log(o==="success"?"info":o,l,...d)},"LogFunc");return Object.fromEntries(xe.map(o=>[o,(...[i,...d])=>n(o,i,d)]))},"createLogger"),C=ye();var Lt=require("@better-fetch/fetch"),Dt=require("jose");var Ct=a(e=>({id:"google",name:"Google",async createAuthorizationURL({state:t,scopes:r,codeVerifier:n,redirectURI:o}){if(!e.clientId||!e.clientSecret)throw C.error("Client Id and Client Secret is required for Google. Make sure to provide them in the options."),new N("CLIENT_ID_AND_SECRET_REQUIRED");if(!n)throw new N("codeVerifier is required for Google");let i=r||["email","profile","openid"];e.scope&&i.push(...e.scope);let d=await O({id:"google",options:e,authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",scopes:i,state:t,codeVerifier:n,redirectURI:o});return e.accessType&&d.searchParams.set("access_type",e.accessType),e.prompt&&d.searchParams.set("prompt",e.prompt),d},validateAuthorizationCode:a(async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://oauth2.googleapis.com/token"}),"validateAuthorizationCode"),async verifyIdToken(t,r){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(t,r);let n=`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${t}`,{data:o}=await(0,Lt.betterFetch)(n);return o?o.aud===e.clientId&&o.iss==="https://accounts.google.com":!1},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);if(!t.idToken)return null;let r=(0,Dt.decodeJwt)(t.idToken),n=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.name,email:r.email,image:r.picture,emailVerified:r.email_verified,...n},data:r}}}),"google");var Nt=require("@better-fetch/fetch");var Bt=require("jose");var jt=a(e=>{let t=e.tenantId||"common",r=`https://login.microsoftonline.com/${t}/oauth2/v2.0/authorize`,n=`https://login.microsoftonline.com/${t}/oauth2/v2.0/token`;return{id:"microsoft",name:"Microsoft EntraID",createAuthorizationURL(o){let i=o.scopes||["openid","profile","email","User.Read"];return e.scope&&i.push(...e.scope),O({id:"microsoft",options:e,authorizationEndpoint:r,state:o.state,codeVerifier:o.codeVerifier,scopes:i,redirectURI:o.redirectURI})},validateAuthorizationCode({code:o,codeVerifier:i,redirectURI:d}){return U({code:o,codeVerifier:i,redirectURI:e.redirectURI||d,options:e,tokenEndpoint:n})},async getUserInfo(o){if(e.getUserInfo)return e.getUserInfo(o);if(!o.idToken)return null;let i=(0,Bt.decodeJwt)(o.idToken),d=e.profilePhotoSize||48;await(0,Nt.betterFetch)(`https://graph.microsoft.com/v1.0/me/photos/${d}x${d}/$value`,{headers:{Authorization:`Bearer ${o.accessToken}`},async onResponse(u){if(!(e.disableProfilePhoto||!u.response.ok))try{let c=await u.response.clone().arrayBuffer(),m=Buffer.from(c).toString("base64");i.picture=`data:image/jpeg;base64, ${m}`}catch(s){C.error(s&&typeof s=="object"&&"name"in s?s.name:"",s)}}});let l=await e.mapProfileToUser?.(i);return{user:{id:i.sub,name:i.name,email:i.email,image:i.picture,emailVerified:!0,...l},data:i}}}},"microsoft");var Ft=require("@better-fetch/fetch");var qt=a(e=>({id:"spotify",name:"Spotify",createAuthorizationURL({state:t,scopes:r,codeVerifier:n,redirectURI:o}){let i=r||["user-read-email"];return e.scope&&i.push(...e.scope),O({id:"spotify",options:e,authorizationEndpoint:"https://accounts.spotify.com/authorize",scopes:i,state:t,codeVerifier:n,redirectURI:o})},validateAuthorizationCode:a(async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://accounts.spotify.com/api/token"}),"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await(0,Ft.betterFetch)("https://api.spotify.com/v1/me",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name,email:r.email,image:r.images[0]?.url,emailVerified:!1,...o},data:r}}}),"spotify");function pn(e){return e.charAt(0).toUpperCase()+e.slice(1)}a(pn,"capitalizeFirstLetter");var te={isAction:!1};var Vt=require("@better-auth/utils/random");var $=a(e=>(0,Vt.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32),"generateId");var Mt=require("jose");var $t=a(e=>({id:"twitch",name:"Twitch",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["user:read:email","openid"];return e.scope&&o.push(...e.scope),O({id:"twitch",redirectURI:n,options:e,authorizationEndpoint:"https://id.twitch.tv/oauth2/authorize",scopes:o,state:t,claims:e.claims||["email","email_verified","preferred_username","picture"]})},validateAuthorizationCode:a(async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://id.twitch.tv/oauth2/token"}),"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let r=t.idToken;if(!r)return C.error("No idToken found in token"),null;let n=(0,Mt.decodeJwt)(r),o=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:n.preferred_username,email:n.email,image:n.picture,emailVerified:!1,...o},data:n}}}),"twitch");var zt=require("@better-fetch/fetch");var Ht=a(e=>({id:"twitter",name:"Twitter",createAuthorizationURL(t){let r=t.scopes||["users.read","tweet.read","offline.access"];return e.scope&&r.push(...e.scope),O({id:"twitter",options:e,authorizationEndpoint:"https://x.com/i/oauth2/authorize",scopes:r,state:t.state,codeVerifier:t.codeVerifier,redirectURI:t.redirectURI})},validateAuthorizationCode:a(async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,authentication:"basic",redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://api.x.com/2/oauth2/token"}),"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await(0,zt.betterFetch)("https://api.x.com/2/users/me?user.fields=profile_image_url",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.data.id,name:r.data.name,email:r.data.username||null,image:r.data.profile_image_url,emailVerified:r.data.verified||!1,...o},data:r}}}),"twitter");var Gt=require("@better-fetch/fetch");var Wt=a(e=>{let t="https://api.dropboxapi.com/oauth2/token";return{id:"dropbox",name:"Dropbox",createAuthorizationURL:a(async({state:r,scopes:n,codeVerifier:o,redirectURI:i})=>{let d=n||["account_info.read"];return e.scope&&d.push(...e.scope),await O({id:"dropbox",options:e,authorizationEndpoint:"https://www.dropbox.com/oauth2/authorize",scopes:d,state:r,redirectURI:i,codeVerifier:o})},"createAuthorizationURL"),validateAuthorizationCode:a(async({code:r,codeVerifier:n,redirectURI:o})=>await U({code:r,codeVerifier:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:t}),"validateAuthorizationCode"),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:n,error:o}=await(0,Gt.betterFetch)("https://api.dropboxapi.com/2/users/get_current_account",{method:"POST",headers:{Authorization:`Bearer ${r.accessToken}`}});if(o)return null;let i=await e.mapProfileToUser?.(n);return{user:{id:n.account_id,name:n.name?.display_name,email:n.email,emailVerified:n.email_verified||!1,image:n.profile_photo_url,...i},data:n}}}},"dropbox");var Kt=require("@better-fetch/fetch");var Qt=a(e=>{let t="https://www.linkedin.com/oauth/v2/authorization",r="https://www.linkedin.com/oauth/v2/accessToken";return{id:"linkedin",name:"Linkedin",createAuthorizationURL:a(async({state:n,scopes:o,redirectURI:i})=>{let d=o||["profile","email","openid"];return e.scope&&d.push(...e.scope),await O({id:"linkedin",options:e,authorizationEndpoint:t,scopes:d,state:n,redirectURI:i})},"createAuthorizationURL"),validateAuthorizationCode:a(async({code:n,redirectURI:o})=>await U({code:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:r}),"validateAuthorizationCode"),async getUserInfo(n){let{data:o,error:i}=await(0,Kt.betterFetch)("https://api.linkedin.com/v2/userinfo",{method:"GET",headers:{Authorization:`Bearer ${n.accessToken}`}});if(i)return null;let d=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:o.name,email:o.email,emailVerified:o.email_verified||!1,image:o.picture,...d},data:o}}}},"linkedin");var Zt=require("@better-fetch/fetch");var $e=a((e="")=>e.split("://").map(t=>t.replace(/\/{2,}/g,"/")).join("://"),"cleanDoubleSlashes"),fn=a(e=>{let t=e||"https://gitlab.com";return{authorizationEndpoint:$e(`${t}/oauth/authorize`),tokenEndpoint:$e(`${t}/oauth/token`),userinfoEndpoint:$e(`${t}/api/v4/user`)}},"issuerToEndpoints"),Jt=a(e=>{let{authorizationEndpoint:t,tokenEndpoint:r,userinfoEndpoint:n}=fn(e.issuer),o="gitlab";return{id:o,name:"Gitlab",createAuthorizationURL:a(async({state:d,scopes:l,codeVerifier:u,redirectURI:s})=>{let c=l||["read_user"];return e.scope&&c.push(...e.scope),await O({id:o,options:e,authorizationEndpoint:t,scopes:c,state:d,redirectURI:s,codeVerifier:u})},"createAuthorizationURL"),validateAuthorizationCode:a(async({code:d,redirectURI:l,codeVerifier:u})=>U({code:d,redirectURI:e.redirectURI||l,options:e,codeVerifier:u,tokenEndpoint:r}),"validateAuthorizationCode"),async getUserInfo(d){if(e.getUserInfo)return e.getUserInfo(d);let{data:l,error:u}=await(0,Zt.betterFetch)(n,{headers:{authorization:`Bearer ${d.accessToken}`}});if(u||l.state!=="active"||l.locked)return null;let s=await e.mapProfileToUser?.(l);return{user:{id:l.id.toString(),name:l.name??l.username,email:l.email,image:l.avatar_url,emailVerified:!0,...s},data:l}}}},"gitlab");var ze=require("@better-fetch/fetch");var Yt=a(e=>({id:"reddit",name:"Reddit",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["identity"];return e.scope&&o.push(...e.scope),O({id:"reddit",options:e,authorizationEndpoint:"https://www.reddit.com/api/v1/authorize",scopes:o,state:t,redirectURI:n,duration:e.duration})},validateAuthorizationCode:a(async({code:t,redirectURI:r})=>{let n=new URLSearchParams({grant_type:"authorization_code",code:t,redirect_uri:e.redirectURI||r}),o={"content-type":"application/x-www-form-urlencoded",accept:"text/plain","user-agent":"better-auth",Authorization:`Basic ${Buffer.from(`${e.clientId}:${e.clientSecret}`).toString("base64")}`},{data:i,error:d}=await(0,ze.betterFetch)("https://www.reddit.com/api/v1/access_token",{method:"POST",headers:o,body:n.toString()});if(d)throw d;return Oe(i)},"validateAuthorizationCode"),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await(0,ze.betterFetch)("https://oauth.reddit.com/api/v1/me",{headers:{Authorization:`Bearer ${t.accessToken}`,"User-Agent":"better-auth"}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.oauth_client_id,emailVerified:r.has_verified_email,image:r.icon_img?.split("?")[0],...o},data:r}}}),"reddit");var Xt=require("zod"),He={apple:Ot,discord:St,facebook:_t,github:It,microsoft:jt,google:Ct,spotify:qt,twitch:$t,twitter:Ht,dropbox:Wt,linkedin:Qt,gitlab:Jt,reddit:Yt},Ge=Object.keys(He),er=Xt.z.enum(Ge,{description:"OAuth2 provider to use"});var q=require("zod");var se=require("better-call");var G=require("better-call");var Y=require("zod");function ie(e){try{return JSON.parse(e)}catch{return null}}a(ie,"safeJSONParse");var A={USER_NOT_FOUND:"User not found",FAILED_TO_CREATE_USER:"Failed to create user",FAILED_TO_CREATE_SESSION:"Failed to create session",FAILED_TO_UPDATE_USER:"Failed to update user",FAILED_TO_GET_SESSION:"Failed to get session",INVALID_PASSWORD:"Invalid password",INVALID_EMAIL:"Invalid email",INVALID_EMAIL_OR_PASSWORD:"Invalid email or password",SOCIAL_ACCOUNT_ALREADY_LINKED:"Social account already linked",PROVIDER_NOT_FOUND:"Provider not found",INVALID_TOKEN:"invalid token",ID_TOKEN_NOT_SUPPORTED:"id_token not supported",FAILED_TO_GET_USER_INFO:"Failed to get user info",USER_EMAIL_NOT_FOUND:"User email not found",EMAIL_NOT_VERIFIED:"Email not verified",PASSWORD_TOO_SHORT:"Password too short",PASSWORD_TOO_LONG:"Password too long",USER_ALREADY_EXISTS:"User already exists",EMAIL_CAN_NOT_BE_UPDATED:"Email can not be updated",CREDENTIAL_ACCOUNT_NOT_FOUND:"Credential account not found",SESSION_EXPIRED:"Session expired. Re-authenticate to perform this action."};var tr=require("@better-auth/utils/hmac"),rr=require("@better-auth/utils/base64"),nr=require("@better-auth/utils/binary");var We=a(()=>E("/get-session",{method:"GET",query:Y.z.optional(Y.z.object({disableCookieCache:Y.z.boolean({description:"Disable cookie cache and fetch session from database"}).or(Y.z.string().transform(e=>e==="true")).optional(),disableRefresh:Y.z.boolean({description:"Disable session refresh. Useful for checking session status, without updating the session"}).optional()})),requireHeaders:!0,metadata:{openapi:{description:"Get the current session",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}},user:{type:"object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{try{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)return e.json(null);let r=e.getCookie(e.context.authCookies.sessionData.name),n=r?ie(nr.binary.decode(rr.base64.decode(r))):null;if(n&&!await(0,tr.createHMAC)("SHA-256","base64urlnopad").verify(e.context.secret,JSON.stringify(n.session),n.signature))return M(e),e.json(null);let o=await e.getSignedCookie(e.context.authCookies.dontRememberToken.name,e.context.secret);if(n?.session&&e.context.options.session?.cookieCache?.enabled&&!e.query?.disableCookieCache){let c=n.session;if(n.expiresAt<Date.now()||c.session.expiresAt<new Date){let g=e.context.authCookies.sessionData.name;e.setCookie(g,"",{maxAge:0})}else return e.json(c)}let i=await e.context.internalAdapter.findSession(t);if(e.context.session=i,!i||i.session.expiresAt<new Date)return M(e),i&&await e.context.internalAdapter.deleteSession(i.session.token),e.json(null);if(o||e.query?.disableRefresh)return e.json(i);let d=e.context.sessionConfig.expiresIn,l=e.context.sessionConfig.updateAge;if(i.session.expiresAt.valueOf()-d*1e3+l*1e3<=Date.now()){let c=await e.context.internalAdapter.updateSession(i.session.token,{expiresAt:V(e.context.sessionConfig.expiresIn,"sec")});if(!c)return M(e),e.json(null,{status:401});let m=(c.expiresAt.valueOf()-Date.now())/1e3;return await D(e,{session:c,user:i.user},!1,{maxAge:m}),e.json({session:c,user:i.user})}return await Ue(e,i),e.json(i)}catch(t){throw e.context.logger.error("INTERNAL_SERVER_ERROR",t),new G.APIError("INTERNAL_SERVER_ERROR",{message:A.FAILED_TO_GET_SESSION})}}),"getSession"),re=a(async(e,t)=>{if(e.context.session)return e.context.session;let r=await We()({...e,_flag:"json",headers:e.headers,query:t}).catch(n=>null);return e.context.session=r,r},"getSessionFromCtx"),j=ue(async e=>{let t=await re(e);if(!t?.session)throw new G.APIError("UNAUTHORIZED");return{session:t}}),xs=ue(async e=>{let t=await re(e);if(!t?.session)throw new G.APIError("UNAUTHORIZED");if(e.context.sessionConfig.freshAge===0)return{session:t};let r=e.context.sessionConfig.freshAge,n=t.session.updatedAt?.valueOf()||t.session.createdAt.valueOf();if(!(Date.now()-n<r*1e3))throw new G.APIError("FORBIDDEN",{message:"Session is not fresh"});return{session:t}}),or=a(()=>E("/list-sessions",{method:"GET",use:[j],requireHeaders:!0,metadata:{openapi:{description:"List all active sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}}}}}}}}}},async e=>{let r=(await e.context.internalAdapter.listSessions(e.context.session.user.id)).filter(n=>n.expiresAt>new Date);return e.json(r)}),"listSessions"),ir=E("/revoke-session",{method:"POST",body:Y.z.object({token:Y.z.string({description:"The token to revoke"})}),use:[j],requireHeaders:!0,metadata:{openapi:{description:"Revoke a single session",requestBody:{content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}},required:["token"]}}}}}}},async e=>{let t=e.body.token,r=await e.context.internalAdapter.findSession(t);if(!r)throw new G.APIError("BAD_REQUEST",{message:"Session not found"});if(r.session.userId!==e.context.session.user.id)throw new G.APIError("UNAUTHORIZED");try{await e.context.internalAdapter.deleteSession(t)}catch(n){throw e.context.logger.error(n&&typeof n=="object"&&"name"in n?n.name:"",n),new G.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),sr=E("/revoke-sessions",{method:"POST",use:[j],requireHeaders:!0,metadata:{openapi:{description:"Revoke all sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}},required:["status"]}}}}}}}},async e=>{try{await e.context.internalAdapter.deleteSessions(e.context.session.user.id)}catch(t){throw e.context.logger.error(t&&typeof t=="object"&&"name"in t?t.name:"",t),new G.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),ar=E("/revoke-other-sessions",{method:"POST",requireHeaders:!0,use:[j],metadata:{openapi:{description:"Revoke all other sessions for the user except the current one",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.context.session;if(!t.user)throw new G.APIError("UNAUTHORIZED");let o=(await e.context.internalAdapter.listSessions(t.user.id)).filter(i=>i.expiresAt>new Date).filter(i=>i.token!==e.context.session.session.token);return await Promise.all(o.map(i=>e.context.internalAdapter.deleteSession(i.token))),e.json({status:!0})});var ur=require("jose");var dr=require("jose");async function cr(e,t,r=3600){return await new dr.SignJWT(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+r).sign(new TextEncoder().encode(t))}a(cr,"signJWT");async function W(e,t,r){return await cr({email:t.toLowerCase(),updateTo:r},e)}a(W,"createEmailVerificationToken");async function mn(e,t){if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new se.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await W(e.context.secret,t.email),n=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification.sendVerificationEmail({user:t,url:n,token:r},e.request)}a(mn,"sendVerificationEmailFn");var lr=E("/send-verification-email",{method:"POST",query:q.z.object({currentURL:q.z.string({description:"The URL to use for email verification callback"}).optional()}).optional(),body:q.z.object({email:q.z.string({description:"The email to send the verification email to"}).email(),callbackURL:q.z.string({description:"The URL to use for email verification callback"}).optional()}),metadata:{openapi:{description:"Send a verification email to the user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"The email to send the verification email to"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["email"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new se.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let{email:t}=e.body,r=await e.context.internalAdapter.findUserByEmail(t);if(!r)throw new se.APIError("BAD_REQUEST",{message:A.USER_NOT_FOUND});return await mn(e,r.user),e.json({status:!0})}),pr=E("/verify-email",{method:"GET",query:q.z.object({token:q.z.string({description:"The token to verify the email"}),callbackURL:q.z.string({description:"The URL to redirect to after email verification"}).optional()}),metadata:{openapi:{description:"Verify the email of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}},required:["user","status"]}}}}}}}},async e=>{function t(l){throw e.query.callbackURL?e.query.callbackURL.includes("?")?e.redirect(`${e.query.callbackURL}&error=${l}`):e.redirect(`${e.query.callbackURL}?error=${l}`):new se.APIError("UNAUTHORIZED",{message:l})}a(t,"redirectOnError");let{token:r}=e.query,n;try{n=await(0,ur.jwtVerify)(r,new TextEncoder().encode(e.context.secret),{algorithms:["HS256"]})}catch(l){return e.context.logger.error("Failed to verify email",l),t("invalid_token")}let i=q.z.object({email:q.z.string().email(),updateTo:q.z.string().optional()}).parse(n.payload),d=await e.context.internalAdapter.findUserByEmail(i.email);if(!d)return t("user_not_found");if(i.updateTo){let l=await re(e);if(!l){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}if(l.user.email!==i.email){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}let u=await e.context.internalAdapter.updateUserByEmail(i.email,{email:i.updateTo,emailVerified:!1}),s=await W(e.context.secret,i.updateTo);if(await e.context.options.emailVerification?.sendVerificationEmail?.({user:u,url:`${e.context.baseURL}/verify-email?token=${s}`,token:s},e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0})}if(await e.context.internalAdapter.updateUserByEmail(i.email,{emailVerified:!0}),e.context.options.emailVerification?.autoSignInAfterVerification&&!await re(e)){let u=await e.context.internalAdapter.createSession(d.user.id,e.request);if(!u)throw new se.APIError("INTERNAL_SERVER_ERROR",{message:"Failed to create session"});await D(e,{session:u,user:d.user})}if(e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0})});async function Se(e,{userInfo:t,account:r,callbackURL:n}){let o=await e.context.internalAdapter.findOAuthUser(t.email.toLowerCase(),r.accountId,r.providerId).catch(u=>{throw C.error(`Better auth was unable to query your database.
Error: `,u),e.redirect(`${e.context.baseURL}/error?error=internal_server_error`)}),i=o?.user,d=!i;if(o){let u=o.accounts.find(s=>s.providerId===r.providerId);if(u){let s=Object.fromEntries(Object.entries({accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}).filter(([c,m])=>m!==void 0));Object.keys(s).length>0&&await e.context.internalAdapter.updateAccount(u.id,s)}else{if(!e.context.options.account?.accountLinking?.trustedProviders?.includes(r.providerId)&&!t.emailVerified||e.context.options.account?.accountLinking?.enabled===!1)return Te&&C.warn(`User already exist but account isn't linked to ${r.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`),{error:"account not linked",data:null};try{await e.context.internalAdapter.linkAccount({providerId:r.providerId,accountId:t.id.toString(),userId:o.user.id,accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope})}catch(m){return C.error("Unable to link account",m),{error:"unable to link account",data:null}}}}else try{if(i=await e.context.internalAdapter.createOAuthUser({...t,email:t.email.toLowerCase(),id:void 0},{accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope,providerId:r.providerId,accountId:t.id.toString()}).then(u=>u?.user),!t.emailVerified&&i&&e.context.options.emailVerification?.sendOnSignUp){let u=await W(e.context.secret,i.email),s=`${e.context.baseURL}/verify-email?token=${u}&callbackURL=${n}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:i,url:s,token:u},e.request)}}catch(u){return u instanceof Ke.APIError?{error:u.message,data:null,isRegister:!1}:{error:"unable to create user",data:null,isRegister:!1}}if(!i)return{error:"unable to create user",data:null,isRegister:!1};let l=await e.context.internalAdapter.createSession(i.id,e.request);return l?{data:{session:l,user:i},error:null,isRegister:d}:{error:"unable to create session",data:null,isRegister:!1}}a(Se,"handleOAuthUserInfo");var fr=E("/sign-in/social",{method:"POST",query:v.z.object({currentURL:v.z.string().optional()}).optional(),body:v.z.object({callbackURL:v.z.string({description:"Callback URL to redirect to after the user has signed in"}).optional(),newUserCallbackURL:v.z.string().optional(),errorCallbackURL:v.z.string({description:"Callback URL to redirect to if an error happens"}).optional(),provider:er,disableRedirect:v.z.boolean({description:"Disable automatic redirection to the provider. Useful for handling the redirection yourself"}).optional(),idToken:v.z.optional(v.z.object({token:v.z.string({description:"ID token from the provider"}),nonce:v.z.string({description:"Nonce used to generate the token"}).optional(),accessToken:v.z.string({description:"Access token from the provider"}).optional(),refreshToken:v.z.string({description:"Refresh token from the provider"}).optional(),expiresAt:v.z.number({description:"Expiry date of the token"}).optional()}),{description:"ID token from the provider to sign in the user with id token"})}),metadata:{openapi:{description:"Sign in with a social provider",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"string"},user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{let t=e.context.socialProviders.find(i=>i.id===e.body.provider);if(!t)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:A.PROVIDER_NOT_FOUND});if(e.body.idToken){if(!t.verifyIdToken)throw e.context.logger.error("Provider does not support id token verification",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:A.ID_TOKEN_NOT_SUPPORTED});let{token:i,nonce:d}=e.body.idToken;if(!await t.verifyIdToken(i,d))throw e.context.logger.error("Invalid id token",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:A.INVALID_TOKEN});let u=await t.getUserInfo({idToken:i,accessToken:e.body.idToken.accessToken,refreshToken:e.body.idToken.refreshToken});if(!u||!u?.user)throw e.context.logger.error("Failed to get user info",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:A.FAILED_TO_GET_USER_INFO});if(!u.user.email)throw e.context.logger.error("User email not found",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:A.USER_EMAIL_NOT_FOUND});let s=await Se(e,{userInfo:{email:u.user.email,id:u.user.id,name:u.user.name||"",image:u.user.image,emailVerified:u.user.emailVerified||!1},account:{providerId:t.id,accountId:u.user.id,accessToken:e.body.idToken.accessToken}});if(s.error)throw new L.APIError("UNAUTHORIZED",{message:s.error});return await D(e,s.data),e.json({token:s.data.session.token,url:void 0,redirect:!1})}let{codeVerifier:r,state:n}=await he(e),o=await t.createAuthorizationURL({state:n,codeVerifier:r,redirectURI:`${e.context.baseURL}/callback/${t.id}`});return e.json({url:o.toString(),redirect:!e.body.disableRedirect})}),mr=E("/sign-in/email",{method:"POST",body:v.z.object({email:v.z.string({description:"Email of the user"}),password:v.z.string({description:"Password of the user"}),callbackURL:v.z.string({description:"Callback URL to use as a redirect for email verification"}).optional(),rememberMe:v.z.boolean({description:"If this is false, the session will not be remembered. Default is `true`."}).default(!0).optional()}),metadata:{openapi:{description:"Sign in with email and password",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{if(!e.context.options?.emailAndPassword?.enabled)throw e.context.logger.error("Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!"),new L.APIError("BAD_REQUEST",{message:"Email and password is not enabled"});let{email:t,password:r}=e.body;if(!v.z.string().email().safeParse(t).success)throw new L.APIError("BAD_REQUEST",{message:A.INVALID_EMAIL});let o=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!o)throw await e.context.password.hash(r),e.context.logger.error("User not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:A.INVALID_EMAIL_OR_PASSWORD});let i=o.accounts.find(s=>s.providerId==="credential");if(!i)throw e.context.logger.error("Credential account not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:A.INVALID_EMAIL_OR_PASSWORD});let d=i?.password;if(!d)throw e.context.logger.error("Password not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:A.INVALID_EMAIL_OR_PASSWORD});if(!await e.context.password.verify({hash:d,password:r}))throw e.context.logger.error("Invalid password"),new L.APIError("UNAUTHORIZED",{message:A.INVALID_EMAIL_OR_PASSWORD});if(e.context.options?.emailAndPassword?.requireEmailVerification&&!o.user.emailVerified){if(!e.context.options?.emailVerification?.sendVerificationEmail)throw new L.APIError("UNAUTHORIZED",{message:A.EMAIL_NOT_VERIFIED});let s=await W(e.context.secret,o.user.email),c=`${e.context.baseURL}/verify-email?token=${s}&callbackURL=${e.body.callbackURL||"/"}`;throw await e.context.options.emailVerification.sendVerificationEmail({user:o.user,url:c,token:s},e.request),e.context.logger.error("Email not verified",{email:t}),new L.APIError("FORBIDDEN",{message:A.EMAIL_NOT_VERIFIED})}let u=await e.context.internalAdapter.createSession(o.user.id,e.headers,e.body.rememberMe===!1);if(!u)throw e.context.logger.error("Failed to create session"),new L.APIError("UNAUTHORIZED",{message:A.FAILED_TO_CREATE_SESSION});return await D(e,{session:u,user:o.user},e.body.rememberMe===!1),e.json({user:{id:o.user.id,email:o.user.email,name:o.user.name,image:o.user.image,emailVerified:o.user.emailVerified,createdAt:o.user.createdAt,updatedAt:o.user.updatedAt},redirect:!!e.body.callbackURL,url:e.body.callbackURL})});var ae=require("zod");var ve=ae.z.object({code:ae.z.string().optional(),error:ae.z.string().optional(),error_description:ae.z.string().optional(),state:ae.z.string().optional()}),gr=E("/callback/:id",{method:["GET","POST"],body:ve.optional(),query:ve.optional(),metadata:te},async e=>{let t;try{if(e.method==="GET")t=ve.parse(e.query);else if(e.method==="POST")t=ve.parse(e.body);else throw new Error("Unsupported method")}catch(y){throw e.context.logger.error("INVALID_CALLBACK_REQUEST",y),e.redirect(`${e.context.baseURL}/error?error=invalid_callback_request`)}let{code:r,error:n,state:o,error_description:i}=t;if(!o)throw e.context.logger.error("State not found",n),e.redirect(`${e.context.baseURL}/error?error=state_not_found`);if(!r)throw e.context.logger.error("Code not found"),e.redirect(`${e.context.baseURL}/error?error=${n||"no_code"}&error_description=${i}`);let d=e.context.socialProviders.find(y=>y.id===e.params.id);if(!d)throw e.context.logger.error("Oauth provider with id",e.params.id,"not found"),e.redirect(`${e.context.baseURL}/error?error=oauth_provider_not_found`);let{codeVerifier:l,callbackURL:u,link:s,errorURL:c,newUserURL:m}=await Ve(e),g;try{g=await d.validateAuthorizationCode({code:r,codeVerifier:l,redirectURI:`${e.context.baseURL}/callback/${d.id}`})}catch(y){throw e.context.logger.error("",y),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`)}let p=await d.getUserInfo(g).then(y=>y?.user);function f(y){let k=c||u||`${e.context.baseURL}/error`;throw k.includes("?")?k=`${k}&error=${y}`:k=`${k}?error=${y}`,e.redirect(k)}if(a(f,"redirectOnError"),!p)return e.context.logger.error("Unable to get user info"),f("unable_to_get_user_info");if(!p.email)return e.context.logger.error("Provider did not return email. This could be due to misconfiguration in the provider settings."),f("email_not_found");if(!u)throw e.context.logger.error("No callback URL found"),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);if(s){if(s.email!==p.email.toLowerCase())return f("email_doesn't_match");if(!await e.context.internalAdapter.createAccount({userId:s.userId,providerId:d.id,accountId:p.id}))return f("unable_to_link_account");let k;try{k=u.toString()}catch{k=u}throw e.redirect(k)}let h=await Se(e,{userInfo:{...p,email:p.email,name:p.name||p.email},account:{providerId:d.id,accountId:p.id,...g,scope:g.scopes?.join(",")},callbackURL:u});if(h.error)return e.context.logger.error(h.error.split(" ").join("_")),f(h.error.split(" ").join("_"));let{session:w,user:b}=h.data;await D(e,{session:w,user:b});let T;try{T=(h.isRegister&&m||u).toString()}catch{T=h.isRegister&&m||u}throw e.redirect(T)});var ia=require("zod");var hr=require("better-call");var yr=E("/sign-out",{method:"POST",requireHeaders:!0,metadata:{openapi:{description:"Sign out the current user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{success:{type:"boolean"}}}}}}}}}},async e=>{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)throw M(e),new hr.APIError("BAD_REQUEST",{message:A.FAILED_TO_GET_SESSION});return await e.context.internalAdapter.deleteSession(t),M(e),e.json({success:!0})});var F=require("zod");var de=require("better-call");function wr(e,t,r){let n=t?new URL(t,e.baseURL):new URL(`${e.baseURL}/error`);return r&&Object.entries(r).forEach(([o,i])=>n.searchParams.set(o,i)),n.href}a(wr,"redirectError");function gn(e,t,r){let n=new URL(t,e.baseURL);return r&&Object.entries(r).forEach(([o,i])=>n.searchParams.set(o,i)),n.href}a(gn,"redirectCallback");var Ar=E("/forget-password",{method:"POST",body:F.z.object({email:F.z.string({description:"The email address of the user to send a password reset email to"}).email(),redirectTo:F.z.string({description:"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN"}).optional()}),metadata:{openapi:{description:"Send a password reset email to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.sendResetPassword)throw e.context.logger.error("Reset password isn't enabled.Please pass an emailAndPassword.sendResetPasswordToken function in your auth config!"),new de.APIError("BAD_REQUEST",{message:"Reset password isn't enabled"});let{email:t,redirectTo:r}=e.body,n=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!n)return e.context.logger.error("Reset Password: User not found",{email:t}),e.json({status:!1},{body:{status:!0}});let o=60*60*1,i=V(e.context.options.emailAndPassword.resetPasswordTokenExpiresIn||o,"sec"),d=$(24);await e.context.internalAdapter.createVerificationValue({value:n.user.id.toString(),identifier:`reset-password:${d}`,expiresAt:i});let l=`${e.context.baseURL}/reset-password/${d}?callbackURL=${r}`;return await e.context.options.emailAndPassword.sendResetPassword({user:n.user,url:l,token:d},e.request),e.json({status:!0})}),br=E("/reset-password/:token",{method:"GET",query:F.z.object({callbackURL:F.z.string({description:"The URL to redirect the user to reset their password"})}),metadata:{openapi:{description:"Redirects the user to the callback URL with the token",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}}}}}}}}}},async e=>{let{token:t}=e.params,{callbackURL:r}=e.query;if(!t||!r)throw e.redirect(wr(e.context,r,{error:"INVALID_TOKEN"}));let n=await e.context.internalAdapter.findVerificationValue(`reset-password:${t}`);throw!n||n.expiresAt<new Date?e.redirect(wr(e.context,r,{error:"INVALID_TOKEN"})):e.redirect(gn(e.context,r,{token:t}))}),kr=E("/reset-password",{query:F.z.optional(F.z.object({token:F.z.string().optional(),currentURL:F.z.string().optional()})),method:"POST",body:F.z.object({newPassword:F.z.string({description:"The new password to set"}),token:F.z.string({description:"The token to reset the password"}).optional()}),metadata:{openapi:{description:"Reset the password for a user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.body.token||e.query?.token||(e.query?.currentURL?new URL(e.query.currentURL).searchParams.get("token"):"");if(!t)throw new de.APIError("BAD_REQUEST",{message:A.INVALID_TOKEN});let{newPassword:r}=e.body,n=e.context.password?.config.minPasswordLength,o=e.context.password?.config.maxPasswordLength;if(r.length<n)throw new de.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_SHORT});if(r.length>o)throw new de.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_LONG});let i=`reset-password:${t}`,d=await e.context.internalAdapter.findVerificationValue(i);if(!d||d.expiresAt<new Date)throw new de.APIError("BAD_REQUEST",{message:A.INVALID_TOKEN});await e.context.internalAdapter.deleteVerificationValue(d.id);let l=d.value,u=await e.context.password.hash(r);return(await e.context.internalAdapter.findAccounts(l)).find(m=>m.providerId==="credential")?(await e.context.internalAdapter.updatePassword(l,u),e.json({status:!0})):(await e.context.internalAdapter.createAccount({userId:l,providerId:"credential",password:u,accountId:l}),e.json({status:!0}))});var x=require("zod");var S=require("better-call");var R=require("zod"),Rr=require("better-call");var ya=R.z.object({id:R.z.string(),providerId:R.z.string(),accountId:R.z.string(),userId:R.z.string(),accessToken:R.z.string().nullish(),refreshToken:R.z.string().nullish(),idToken:R.z.string().nullish(),accessTokenExpiresAt:R.z.date().nullish(),refreshTokenExpiresAt:R.z.date().nullish(),scope:R.z.string().nullish(),password:R.z.string().nullish(),createdAt:R.z.date().default(()=>new Date),updatedAt:R.z.date().default(()=>new Date)}),wa=R.z.object({id:R.z.string(),email:R.z.string().transform(e=>e.toLowerCase()),emailVerified:R.z.boolean().default(!1),name:R.z.string(),image:R.z.string().nullish(),createdAt:R.z.date().default(()=>new Date),updatedAt:R.z.date().default(()=>new Date)}),Aa=R.z.object({id:R.z.string(),userId:R.z.string(),expiresAt:R.z.date(),createdAt:R.z.date().default(()=>new Date),updatedAt:R.z.date().default(()=>new Date),token:R.z.string(),ipAddress:R.z.string().nullish(),userAgent:R.z.string().nullish()}),ba=R.z.object({id:R.z.string(),value:R.z.string(),createdAt:R.z.date().default(()=>new Date),updatedAt:R.z.date().default(()=>new Date),expiresAt:R.z.date(),identifier:R.z.string()});function Tr(e,t){let r=t.fields,n={};for(let o in e){let i=r[o];if(!i){n[o]=e[o];continue}i.returned!==!1&&(n[o]=e[o])}return n}a(Tr,"parseOutputData");function Qe(e,t){let r={...t==="user"?e.user?.additionalFields:{},...t==="session"?e.session?.additionalFields:{}};for(let n of e.plugins||[])n.schema&&n.schema[t]&&(r={...r,...n.schema[t].fields});return r}a(Qe,"getAllFields");function Ze(e,t){let r=Qe(e,"user");return Tr(t,{fields:r})}a(Ze,"parseUserOutput");function _e(e,t){let r=Qe(e,"session");return Tr(t,{fields:r})}a(_e,"parseSessionOutput");function hn(e,t){let r=t.action||"create",n=t.fields,o={};for(let i in n){if(i in e){if(n[i].input===!1){if(n[i].defaultValue){o[i]=n[i].defaultValue;continue}continue}if(n[i].validator?.input&&e[i]!==void 0){o[i]=n[i].validator.input.parse(e[i]);continue}if(n[i].transform?.input&&e[i]!==void 0){o[i]=n[i].transform?.input(e[i]);continue}o[i]=e[i];continue}if(n[i].defaultValue&&r==="create"){o[i]=n[i].defaultValue;continue}if(n[i].required&&r==="create")throw new Rr.APIError("BAD_REQUEST",{message:`${i} is required`})}return o}a(hn,"parseInputData");function Ie(e,t,r){let n=Qe(e,"user");return hn(t||{},{fields:n,action:r})}a(Ie,"parseUserInput");var Er=a(()=>E("/update-user",{method:"POST",body:x.z.record(x.z.string(),x.z.any()),use:[j],metadata:{openapi:{description:"Update the current user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"}}}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"}}}}}}}}}},async e=>{let t=e.body;if(t.email)throw new S.APIError("BAD_REQUEST",{message:A.EMAIL_CAN_NOT_BE_UPDATED});let{name:r,image:n,...o}=t,i=e.context.session;if(n===void 0&&r===void 0&&Object.keys(o).length===0)return e.json({status:!0});let d=Ie(e.context.options,o,"update"),l=await e.context.internalAdapter.updateUserByEmail(i.user.email,{name:r,image:n,...d});return await D(e,{session:i.session,user:l}),e.json({status:!0})}),"updateUser"),Ur=E("/change-password",{method:"POST",body:x.z.object({newPassword:x.z.string({description:"The new password to set"}),currentPassword:x.z.string({description:"The current password"}),revokeOtherSessions:x.z.boolean({description:"Revoke all other sessions"}).optional()}),use:[j],metadata:{openapi:{description:"Change the password of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{description:"The user object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{let{newPassword:t,currentPassword:r,revokeOtherSessions:n}=e.body,o=e.context.session,i=e.context.password.config.minPasswordLength;if(t.length<i)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_SHORT});let d=e.context.password.config.maxPasswordLength;if(t.length>d)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_LONG});let u=(await e.context.internalAdapter.findAccounts(o.user.id)).find(g=>g.providerId==="credential"&&g.password);if(!u||!u.password)throw new S.APIError("BAD_REQUEST",{message:A.CREDENTIAL_ACCOUNT_NOT_FOUND});let s=await e.context.password.hash(t);if(!await e.context.password.verify({hash:u.password,password:r}))throw new S.APIError("BAD_REQUEST",{message:A.INVALID_PASSWORD});await e.context.internalAdapter.updateAccount(u.id,{password:s});let m=null;if(n){await e.context.internalAdapter.deleteSessions(o.user.id);let g=await e.context.internalAdapter.createSession(o.user.id,e.headers);if(!g)throw new S.APIError("INTERNAL_SERVER_ERROR",{message:A.FAILED_TO_GET_SESSION});await D(e,{session:g,user:o.user}),m=g.token}return e.json({token:m})}),Or=E("/set-password",{method:"POST",body:x.z.object({newPassword:x.z.string()}),metadata:{SERVER_ONLY:!0},use:[j]},async e=>{let{newPassword:t}=e.body,r=e.context.session,n=e.context.password.config.minPasswordLength;if(t.length<n)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_SHORT});let o=e.context.password.config.maxPasswordLength;if(t.length>o)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_LONG});let d=(await e.context.internalAdapter.findAccounts(r.user.id)).find(u=>u.providerId==="credential"&&u.password),l=await e.context.password.hash(t);if(!d)return await e.context.internalAdapter.linkAccount({userId:r.user.id,providerId:"credential",accountId:r.user.id,password:l}),e.json({status:!0});throw new S.APIError("BAD_REQUEST",{message:"user already has a password"})}),xr=E("/delete-user",{method:"POST",use:[j],body:x.z.object({callbackURL:x.z.string().optional(),password:x.z.string().optional(),token:x.z.string().optional()}),metadata:{openapi:{description:"Delete the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object"}}}}}}}},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options",{session:e.context.session}),new S.APIError("NOT_FOUND");let t=e.context.session;if(e.body.password){let i=(await e.context.internalAdapter.findAccounts(t.user.id)).find(l=>l.providerId==="credential"&&l.password);if(!i||!i.password)throw new S.APIError("BAD_REQUEST",{message:A.CREDENTIAL_ACCOUNT_NOT_FOUND});if(!await e.context.password.verify({hash:i.password,password:e.body.password}))throw new S.APIError("BAD_REQUEST",{message:A.INVALID_PASSWORD})}else if(e.context.options.session?.freshAge){let o=t.session.createdAt.getTime(),i=e.context.options.session.freshAge;if(Date.now()-o>i)throw new S.APIError("BAD_REQUEST",{message:A.SESSION_EXPIRED})}if(e.body.token)return await Je({query:{token:e.body.token},...e}),e.json({success:!0,message:"User deleted"});if(e.context.options.user.deleteUser?.sendDeleteAccountVerification){let o=ge(32,"0-9","a-z");await e.context.internalAdapter.createVerificationValue({value:t.user.id,identifier:`delete-account-${o}`,expiresAt:new Date(Date.now()+1e3*60*60*24)});let i=`${e.context.baseURL}/delete-user/callback?token=${o}&callbackURL=${e.body.callbackURL||"/"}`;return await e.context.options.user.deleteUser.sendDeleteAccountVerification({user:t.user,url:i,token:o},e.request),e.json({success:!0,message:"Verification email sent"})}let r=e.context.options.user.deleteUser?.beforeDelete;r&&await r(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),M(e);let n=e.context.options.user.deleteUser?.afterDelete;return n&&await n(t.user,e.request),e.json({success:!0,message:"User deleted"})}),Je=E("/delete-user/callback",{method:"GET",query:x.z.object({token:x.z.string(),callbackURL:x.z.string().optional()})},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options"),new S.APIError("NOT_FOUND");let t=await re(e);if(!t)throw new S.APIError("NOT_FOUND",{message:A.FAILED_TO_GET_USER_INFO});let r=await e.context.internalAdapter.findVerificationValue(`delete-account-${e.query.token}`);if(!r||r.expiresAt<new Date)throw r&&await e.context.internalAdapter.deleteVerificationValue(r.id),new S.APIError("NOT_FOUND",{message:A.INVALID_TOKEN});if(r.value!==t.user.id)throw new S.APIError("NOT_FOUND",{message:A.INVALID_TOKEN});let n=e.context.options.user.deleteUser?.beforeDelete;n&&await n(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),await e.context.internalAdapter.deleteVerificationValue(r.id),M(e);let o=e.context.options.user.deleteUser?.afterDelete;if(o&&await o(t.user,e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL||"/");return e.json({success:!0,message:"User deleted"})}),Sr=E("/change-email",{method:"POST",query:x.z.object({currentURL:x.z.string().optional()}).optional(),body:x.z.object({newEmail:x.z.string({description:"The new email to set"}).email(),callbackURL:x.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[j],metadata:{openapi:{responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.user?.changeEmail?.enabled)throw e.context.logger.error("Change email is disabled."),new S.APIError("BAD_REQUEST",{message:"Change email is disabled"});if(e.body.newEmail===e.context.session.user.email)throw e.context.logger.error("Email is the same"),new S.APIError("BAD_REQUEST",{message:"Email is the same"});if(await e.context.internalAdapter.findUserByEmail(e.body.newEmail))throw e.context.logger.error("Email already exists"),new S.APIError("BAD_REQUEST",{message:"Couldn't update your email"});if(e.context.session.user.emailVerified!==!0){let o=await e.context.internalAdapter.updateUserByEmail(e.context.session.user.email,{email:e.body.newEmail});return e.json({status:!0})}if(!e.context.options.user.changeEmail.sendChangeEmailVerification)throw e.context.logger.error("Verification email isn't enabled."),new S.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await W(e.context.secret,e.context.session.user.email,e.body.newEmail),n=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;return await e.context.options.user.changeEmail.sendChangeEmailVerification({user:e.context.session.user,newEmail:e.body.newEmail,url:n,token:r},e.request),e.json({status:!0})});var yn=a((e="Unknown")=>`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Error</title>
    <style>
        :root {
            --bg-color: #f8f9fa;
            --text-color: #212529;
            --accent-color: #000000;
            --error-color: #dc3545;
            --border-color: #e9ecef;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            line-height: 1.5;
        }
        .error-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 2.5rem;
            text-align: center;
            max-width: 90%;
            width: 400px;
        }
        h1 {
            color: var(--error-color);
            font-size: 1.75rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        p {
            margin-bottom: 1.5rem;
            color: #495057;
        }
        .btn {
            background-color: var(--accent-color);
            color: #ffffff;
            text-decoration: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: inline-block;
            font-weight: 500;
            border: 2px solid var(--accent-color);
        }
        .btn:hover {
            background-color: #131721;
        }
        .error-code {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
        }
        .icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="error-container">
        <div class="icon">\u26A0\uFE0F</div>
        <h1>Better Auth Error</h1>
        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>
        <a href="/" id="returnLink" class="btn">Return to Application</a>
        <div class="error-code">Error Code: <span id="errorCode">${e}</span></div>
    </div>
</body>
</html>`,"html"),vr=E("/error",{method:"GET",metadata:{...te,openapi:{description:"Displays an error page",responses:{200:{description:"Success",content:{"text/html":{schema:{type:"string"}}}}}}}},async e=>{let t=new URL(e.request?.url||"").searchParams.get("error")||"Unknown";return new Response(yn(t),{headers:{"Content-Type":"text/html"}})});var _r=E("/ok",{method:"GET",metadata:{...te,openapi:{description:"Check if the API is working",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{ok:{type:"boolean"}}}}}}}}}},async e=>e.json({ok:!0}));var ne=require("zod");var K=require("better-call");var Ir=a(()=>E("/sign-up/email",{method:"POST",query:ne.z.object({currentURL:ne.z.string().optional()}).optional(),body:ne.z.record(ne.z.string(),ne.z.any()),metadata:{openapi:{description:"Sign up a user using email and password",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},email:{type:"string",description:"The email of the user"},password:{type:"string",description:"The password of the user"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["name","email","password"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The id of the user"},email:{type:"string",description:"The email of the user"},name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"},emailVerified:{type:"boolean",description:"If the email is verified"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.enabled)throw new K.APIError("BAD_REQUEST",{message:"Email and password sign up is not enabled"});let t=e.body,{name:r,email:n,password:o,image:i,callbackURL:d,...l}=t;if(!ne.z.string().email().safeParse(n).success)throw new K.APIError("BAD_REQUEST",{message:A.INVALID_EMAIL});let s=e.context.password.config.minPasswordLength;if(o.length<s)throw e.context.logger.error("Password is too short"),new K.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_SHORT});let c=e.context.password.config.maxPasswordLength;if(o.length>c)throw e.context.logger.error("Password is too long"),new K.APIError("BAD_REQUEST",{message:A.PASSWORD_TOO_LONG});if((await e.context.internalAdapter.findUserByEmail(n))?.user)throw e.context.logger.info(`Sign-up attempt for existing email: ${n}`),new K.APIError("UNPROCESSABLE_ENTITY",{message:A.USER_ALREADY_EXISTS});let g=Ie(e.context.options,l),p;try{if(p=await e.context.internalAdapter.createUser({email:n.toLowerCase(),name:r,image:i,...g,emailVerified:!1}),!p)throw new K.APIError("BAD_REQUEST",{message:A.FAILED_TO_CREATE_USER})}catch(w){throw Te&&e.context.logger.error("Failed to create user",w),new K.APIError("UNPROCESSABLE_ENTITY",{message:A.FAILED_TO_CREATE_USER,details:w})}if(!p)throw new K.APIError("UNPROCESSABLE_ENTITY",{message:A.FAILED_TO_CREATE_USER});let f=await e.context.password.hash(o);if(await e.context.internalAdapter.linkAccount({userId:p.id,providerId:"credential",accountId:p.id,password:f}),e.context.options.emailVerification?.sendOnSignUp){let w=await W(e.context.secret,p.email),b=`${e.context.baseURL}/verify-email?token=${w}&callbackURL=${t.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:p,url:b,token:w},e.request)}if(!e.context.options.emailAndPassword.autoSignIn||e.context.options.emailAndPassword.requireEmailVerification)return e.json({token:null});let h=await e.context.internalAdapter.createSession(p.id,e.request);if(!h)throw new K.APIError("BAD_REQUEST",{message:A.FAILED_TO_CREATE_SESSION});return await D(e,{session:h,user:p}),e.json({token:h.token})}),"signUpEmail");var ce=require("zod");var Ye=require("better-call");var Pr=E("/list-accounts",{method:"GET",use:[j],metadata:{openapi:{description:"List all accounts linked to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string"},provider:{type:"string"}}}}}}}}}}},async e=>{let t=e.context.session,r=await e.context.internalAdapter.findAccounts(t.user.id);return e.json(r.map(n=>({id:n.id,provider:n.providerId})))}),Lr=E("/link-social",{method:"POST",requireHeaders:!0,query:ce.z.object({currentURL:ce.z.string().optional()}).optional(),body:ce.z.object({callbackURL:ce.z.string({description:"The URL to redirect to after the user has signed in"}).optional(),provider:ce.z.enum(Ge,{description:"The OAuth2 provider to use"})}),use:[j],metadata:{openapi:{description:"Link a social account to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{url:{type:"string"},redirect:{type:"boolean"}},required:["url","redirect"]}}}}}}}},async e=>{let t=e.context.session;if((await e.context.internalAdapter.findAccounts(t.user.id)).find(l=>l.providerId===e.body.provider))throw new Ye.APIError("BAD_REQUEST",{message:A.SOCIAL_ACCOUNT_ALREADY_LINKED});let o=e.context.socialProviders.find(l=>l.id===e.body.provider);if(!o)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new Ye.APIError("NOT_FOUND",{message:A.PROVIDER_NOT_FOUND});let i=await he(e,{userId:t.user.id,email:t.user.email}),d=await o.createAuthorizationURL({state:i.state,codeVerifier:i.codeVerifier,redirectURI:`${e.context.baseURL}/callback/${o.id}`});return e.json({url:d.toString(),redirect:!0})});function Pe(e,t){if(t.advanced?.ipAddress?.disableIpTracking)return null;let r="127.0.0.1";if(st)return r;let o=t.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],i=e instanceof Request?e.headers:e;for(let d of o){let l=i.get(d);if(typeof l=="string"){let u=l.split(",")[0].trim();if(u)return u}}return null}a(Pe,"getIp");function wn(e,t,r){let n=Date.now(),o=t*1e3;return n-r.lastRequest<o&&r.count>=e}a(wn,"shouldRateLimit");function An(e){return new Response(JSON.stringify({message:"Too many requests. Please try again later."}),{status:429,statusText:"Too Many Requests",headers:{"X-Retry-After":e.toString()}})}a(An,"rateLimitResponse");function bn(e,t){let r=Date.now(),n=t*1e3;return Math.ceil((e+n-r)/1e3)}a(bn,"getRetryAfter");function kn(e,t){let r="rateLimit",n=e.adapter;return{get:a(async o=>(await n.findMany({model:r,where:[{field:"key",value:o}]}))[0],"get"),set:a(async(o,i,d)=>{try{d?await n.updateMany({model:t??"rateLimit",where:[{field:"key",value:o}],update:{count:i.count,lastRequest:i.lastRequest}}):await n.create({model:t??"rateLimit",data:{key:o,count:i.count,lastRequest:i.lastRequest}})}catch(l){e.logger.error("Error setting rate limit",l)}},"set")}}a(kn,"createDBStorage");var Dr=new Map;function Rn(e){return e.options.rateLimit?.customStorage?e.options.rateLimit.customStorage:e.rateLimit.storage==="secondary-storage"?{get:a(async r=>{let n=await e.options.secondaryStorage?.get(r);return n?JSON.parse(n):void 0},"get"),set:a(async(r,n)=>{await e.options.secondaryStorage?.set?.(r,JSON.stringify(n))},"set")}:e.rateLimit.storage==="memory"?{async get(r){return Dr.get(r)},async set(r,n,o){Dr.set(r,n)}}:kn(e,e.rateLimit.modelName)}a(Rn,"getRateLimitStorage");async function Cr(e,t){if(!t.rateLimit.enabled)return;let r=t.baseURL,n=e.url.replace(r,"").split("?")[0],o=t.rateLimit.window,i=t.rateLimit.max,d=Pe(e,t.options)+n,u=Tn().find(g=>g.pathMatcher(n));u&&(o=u.window,i=u.max);for(let g of t.options.plugins||[])if(g.rateLimit){let p=g.rateLimit.find(f=>f.pathMatcher(n));if(p){o=p.window,i=p.max;break}}if(t.rateLimit.customRules){let g=Object.keys(t.rateLimit.customRules).find(p=>p.includes("*")?be(p)(n):p===n);if(g){let p=t.rateLimit.customRules[g],f=typeof p=="function"?await p(e):p;f&&(o=f.window,i=f.max)}}let s=Rn(t),c=await s.get(d),m=Date.now();if(!c)await s.set(d,{key:d,count:1,lastRequest:m});else{let g=m-c.lastRequest;if(wn(i,o,c)){let p=bn(c.lastRequest,o);return An(p)}else g>o*1e3?await s.set(d,{...c,count:1,lastRequest:m},!0):await s.set(d,{...c,count:c.count+1,lastRequest:m},!0)}}a(Cr,"onRequestRateLimit");function Tn(){return[{pathMatcher(t){return t.startsWith("/sign-in")||t.startsWith("/sign-up")||t.startsWith("/change-password")||t.startsWith("/change-email")},window:10,max:3}]}a(Tn,"getDefaultSpecialRules");var Ld=require("defu");var Ke=require("better-call");function Xe(e,t){let r=t.plugins?.reduce((l,u)=>({...l,...u.endpoints}),{}),n=t.plugins?.map(l=>l.middlewares?.map(u=>{let s=a(async c=>u.middleware({...c,context:{...e,...c.context}}),"middleware");return s.path=u.path,s.options=u.middleware.options,s.headers=u.middleware.headers,{path:u.path,middleware:s}})).filter(l=>l!==void 0).flat()||[],i={...{signInSocial:fr,callbackOAuth:gr,getSession:We(),signOut:yr,signUpEmail:Ir(),signInEmail:mr,forgetPassword:Ar,resetPassword:kr,verifyEmail:pr,sendVerificationEmail:lr,changeEmail:Sr,changePassword:Ur,setPassword:Or,updateUser:Er(),deleteUser:xr,forgetPasswordCallback:br,listSessions:or(),revokeSession:ir,revokeSessions:sr,revokeOtherSessions:ar,linkSocialAccount:Lr,listUserAccounts:Pr,deleteUserCallback:Je},...r,ok:_r,error:vr},d={};for(let[l,u]of Object.entries(i))d[l]=async(s={})=>{u.headers=new Headers;let c={setHeader(y,k){u.headers.set(y,k)},setCookie(y,k,_){(0,I.setCookie)(u.headers,y,k,_)},getCookie(y,k){let P=s.headers?.get("cookie");return(0,I.getCookie)(P||"",y,k)},getSignedCookie(y,k,_){let P=s.headers;return P?(0,I.getSignedCookie)(P,k,y,_):null},async setSignedCookie(y,k,_,P){await(0,I.setSignedCookie)(u.headers,y,k,_,P)},redirect(y){return u.headers.set("Location",y),new I.APIError("FOUND")},responseHeader:u.headers},m=await e,g=null,p={...c,...s,path:u.path,context:{...m,...s.context,session:null,setNewSession:a(function(y){this.newSession=y,g=y},"setNewSession")}},f=t.plugins||[],h=f.map(y=>{if(y.hooks?.before)return y.hooks.before}).filter(y=>y!==void 0).flat(),w=f.map(y=>{if(y.hooks?.after)return y.hooks.after}).filter(y=>y!==void 0).flat();t.hooks?.before&&h.push({matcher:a(()=>!0,"matcher"),handler:t.hooks.before}),t.hooks?.after&&w.push({matcher:a(()=>!0,"matcher"),handler:t.hooks.after});for(let y of h){if(!y.matcher(p))continue;let k=await y.handler(p);if(k&&"context"in k){p={...p,...k.context};continue}if(k)return k}let b;try{b=await u(p),g&&(p.context.newSession=g)}catch(y){if(g&&(p.context.newSession=g),y instanceof I.APIError){if(!w?.length)throw y.headers=u.headers,y;p.context.returned=y,p.context.returned.headers=u.headers;for(let k of w||[])if(k.matcher(p))try{let P=await k.handler(p);P&&"response"in P&&(p.context.returned=P.response)}catch(P){if(P instanceof I.APIError){p.context.returned=P;continue}throw P}if(p.context.returned instanceof I.APIError)throw p.context.returned.headers=u.headers,p.context.returned;return p.context.returned}throw y}p.context.returned=b,p.responseHeader=u.headers;for(let y of w)if(y.matcher(p))try{let _=await y.handler(p);if(_)if("responseHeader"in _){let P=_.responseHeader;p.responseHeader=P}else p.context.returned=_}catch(_){if(_ instanceof I.APIError){p.context.returned=_;continue}throw _}let T=p.context.returned;if(T instanceof Response&&u.headers.forEach((y,k)=>{k==="set-cookie"?T.headers.append(k,y):T.headers.set(k,y)}),T instanceof I.APIError)throw T.headers=u.headers,T;return T},d[l].path=u.path,d[l].method=u.method,d[l].options=u.options,d[l].headers=u.headers;return{api:d,middlewares:n}}a(Xe,"getEndpoints");var Nr=a((e,t)=>{let{api:r,middlewares:n}=Xe(e,t),o=new URL(e.baseURL).pathname;return(0,I.createRouter)(r,{extraContext:e,basePath:o,routerMiddleware:[{path:"/**",middleware:ut},...n],async onRequest(i){for(let d of e.options.plugins||[])if(d.onRequest){let l=await d.onRequest(i,e);if(l&&"response"in l)return l.response}return Cr(i,e)},async onResponse(i){for(let d of e.options.plugins||[])if(d.onResponse){let l=await d.onResponse(i,e);if(l)return l.response}return i},onError(i){if(i instanceof I.APIError&&i.status==="FOUND")return;if(t.onAPIError?.throw)throw i;if(t.onAPIError?.onError){t.onAPIError.onError(i,e);return}let d=t.logger?.level,l=d==="error"||d==="warn"||d==="debug"?C:void 0;if(t.logger?.disabled!==!0){if(i&&typeof i=="object"&&"message"in i&&typeof i.message=="string"&&(i.message.includes("no column")||i.message.includes("column")||i.message.includes("relation")||i.message.includes("table")||i.message.includes("does not exist"))){e.logger?.error(i.message);return}i instanceof I.APIError?(i.status==="INTERNAL_SERVER_ERROR"&&e.logger.error(i.status,i),l?.error(i.message)):e.logger?.error(i&&typeof i=="object"&&"name"in i?i.name:"",i)}}})},"router");var $r=require("defu");function Br(e,t){let r=t.hooks;async function n(d,l,u){let s=d;for(let g of r||[]){let p=g[l]?.create?.before;if(p){let f=await p(d);if(f===!1)return null;typeof f=="object"&&"data"in f&&(s=f.data)}}let c=u?await u.fn(s):null,m=!u||u.executeMainFn?await e.create({model:l,data:s}):c;for(let g of r||[]){let p=g[l]?.create?.after;p&&await p(m)}return m}a(n,"createWithHooks");async function o(d,l,u,s){let c=d;for(let p of r||[]){let f=p[u]?.update?.before;if(f){let h=await f(d);if(h===!1)return null;c=typeof h=="object"?h.data:h}}let m=s?await s.fn(c):null,g=!s||s.executeMainFn?await e.update({model:u,update:c,where:l}):m;for(let p of r||[]){let f=p[u]?.update?.after;f&&await f(g)}return g}a(o,"updateWithHooks");async function i(d,l,u,s){let c=d;for(let p of r||[]){let f=p[u]?.update?.before;if(f){let h=await f(d);if(h===!1)return null;c=typeof h=="object"?h.data:h}}let m=s?await s.fn(c):null,g=!s||s.executeMainFn?await e.updateMany({model:u,update:c,where:l}):m;for(let p of r||[]){let f=p[u]?.update?.after;f&&await f(g)}return g}return a(i,"updateManyWithHooks"),{createWithHooks:n,updateWithHooks:o,updateManyWithHooks:i}}a(Br,"getWithHooks");var et=a((e,t)=>{let r=t.options,n=r.secondaryStorage,o=r.session?.expiresIn||60*60*24*7,{createWithHooks:i,updateWithHooks:d,updateManyWithHooks:l}=Br(e,t),u=a(async s=>{await n?.set(s.token,JSON.stringify({session:s.session,user:s.user}),s.session.expiresAt?Math.floor(((s.session.expiresAt instanceof Date?s.session.expiresAt.getTime():new Date(s.session.expiresAt).getTime())-Date.now())/1e3):o)},"setSecondaryStorage");return{createOAuthUser:a(async(s,c)=>{let m=await i({createdAt:new Date,updatedAt:new Date,...s},"user"),g=await i({...c,userId:m.id||s.id,createdAt:new Date,updatedAt:new Date},"account");return{user:m,account:g}},"createOAuthUser"),createUser:a(async s=>await i({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...s,email:s.email.toLowerCase()},"user"),"createUser"),createAccount:a(async s=>await i({createdAt:new Date,updatedAt:new Date,...s},"account"),"createAccount"),listSessions:a(async s=>{if(n){let m=await n.get(`active-sessions-${s}`);if(!m)return[];let g=ie(m)||[],p=Date.now(),f=g.filter(w=>w.expiresAt>p),h=[];for(let w of f){let b=await n.get(w.token);if(b){let T=JSON.parse(b),y=_e(t.options,{...T.session,expiresAt:new Date(T.session.expiresAt)});h.push(y)}}return h}return await e.findMany({model:"session",where:[{field:"userId",value:s}]})},"listSessions"),listUsers:a(async(s,c,m,g)=>await e.findMany({model:"user",limit:s,offset:c,sortBy:m,where:g}),"listUsers"),deleteUser:a(async s=>{await e.deleteMany({model:"session",where:[{field:"userId",value:s}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:s}]}),await e.delete({model:"user",where:[{field:"id",value:s}]})},"deleteUser"),createSession:a(async(s,c,m,g)=>{let p=c instanceof Request?c.headers:c,{id:f,...h}=g||{},w={ipAddress:c&&Pe(c,t.options)||"",userAgent:p?.get("user-agent")||"",...h,expiresAt:m?V(60*60*24,"sec"):V(o,"sec"),userId:s,token:$(32),createdAt:new Date,updatedAt:new Date};return await i(w,"session",n?{fn:a(async()=>{let T=await e.findOne({model:"user",where:[{field:"id",value:s}]});n.set(w.token,JSON.stringify({session:w,user:T}),o);let y=await n.get(`active-sessions-${s}`),k=[],_=Date.now();return y&&(k=ie(y)||[],k=k.filter(P=>P.expiresAt>_)),k.push({token:w.token,expiresAt:_+o*1e3}),await n.set(`active-sessions-${s}`,JSON.stringify(k),o),w},"fn"),executeMainFn:r.session?.storeSessionInDatabase}:void 0)},"createSession"),findSession:a(async s=>{if(n){let f=await n.get(s);if(f){let h=JSON.parse(f),w=_e(t.options,{...h.session,expiresAt:new Date(h.session.expiresAt),createdAt:new Date(h.session.createdAt),updatedAt:new Date(h.session.updatedAt)}),b=Ze(t.options,{...h.user,createdAt:new Date(h.user.createdAt),updatedAt:new Date(h.user.updatedAt)});return{session:w,user:b}}}let c=await e.findOne({model:"session",where:[{value:s,field:"token"}]});if(!c)return null;let m=await e.findOne({model:"user",where:[{value:c.userId,field:"id"}]});if(!m)return null;let g=_e(t.options,c),p=Ze(t.options,m);return n&&await u({token:s,user:p,session:g}),{session:g,user:p}},"findSession"),findSessions:a(async s=>{if(n){let p=[];for(let f of s){let h=await n.get(f);if(h){let w=JSON.parse(h),b={session:{...w.session,expiresAt:new Date(w.session.expiresAt)},user:{...w.user,createdAt:new Date(w.user.createdAt),updatedAt:new Date(w.user.updatedAt)}};p.push(b)}}return p}let c=await e.findMany({model:"session",where:[{field:"token",value:s,operator:"in"}]}),m=c.map(p=>p.userId);if(!m.length)return[];let g=await e.findMany({model:"user",where:[{field:"id",value:m,operator:"in"}]});return c.map(p=>{let f=g.find(h=>h.id===p.userId);return f?{session:p,user:f}:null})},"findSessions"),updateSession:a(async(s,c)=>await d(c,[{field:"token",value:s}],"session",n?{async fn(g){let p=await n.get(s),f=null;if(p){let h=JSON.parse(p);return f={...h.session,...g},await u({token:s,user:h.user,session:f}),f}else return null},executeMainFn:r.session?.storeSessionInDatabase}:void 0),"updateSession"),deleteSession:a(async s=>{if(n){await n.delete(s),r.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:s}]});return}await e.delete({model:"session",where:[{field:"token",value:s}]})},"deleteSession"),deleteAccounts:a(async s=>{await e.deleteMany({model:"account",where:[{field:"userId",value:s}]})},"deleteAccounts"),deleteSessions:a(async s=>{if(n){if(typeof s=="string"){let c=await n.get(`active-sessions-${s}`),m=c?ie(c):[];if(!m)return;for(let g of m)await n.delete(g.token)}else for(let c of s)await n.get(c)&&await n.delete(c);r.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]})},"deleteSessions"),findOAuthUser:a(async(s,c,m)=>{let g=null;if(g=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]}),!g){let f=await e.findOne({model:"account",where:[{value:c,field:"accountId"},{value:m,field:"providerId"}]});return f?(g=await e.findOne({model:"user",where:[{value:f.userId,field:"id"}]}),{user:g,accounts:[f]}):null}let p=await e.findMany({model:"account",where:[{value:g.id,field:"userId"}]});return{user:g,accounts:p||[]}},"findOAuthUser"),findUserByEmail:a(async(s,c)=>{let m=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]});if(!m)return null;if(c?.includeAccounts){let g=await e.findMany({model:"account",where:[{value:m.id,field:"userId"}]});return{user:m,accounts:g}}return{user:m,accounts:[]}},"findUserByEmail"),findUserById:a(async s=>await e.findOne({model:"user",where:[{field:"id",value:s}]}),"findUserById"),linkAccount:a(async s=>await i({...s,createdAt:new Date,updatedAt:new Date},"account"),"linkAccount"),updateUser:a(async(s,c)=>await d(c,[{field:"id",value:s}],"user"),"updateUser"),updateUserByEmail:a(async(s,c)=>await d(c,[{field:"email",value:s}],"user"),"updateUserByEmail"),updatePassword:a(async(s,c)=>{await l({password:c},[{field:"userId",value:s},{field:"providerId",value:"credential"}],"account")},"updatePassword"),findAccounts:a(async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),"findAccounts"),findAccount:a(async s=>await e.findOne({model:"account",where:[{field:"accountId",value:s}]}),"findAccount"),findAccountByUserId:a(async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),"findAccountByUserId"),updateAccount:a(async(s,c)=>await d(c,[{field:"id",value:s}],"account"),"updateAccount"),createVerificationValue:a(async s=>await i({createdAt:new Date,updatedAt:new Date,...s},"verification"),"createVerificationValue"),findVerificationValue:a(async s=>(await e.findMany({model:"verification",where:[{field:"identifier",value:s}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],"findVerificationValue"),deleteVerificationValue:a(async s=>{await e.delete({model:"verification",where:[{field:"id",value:s}]})},"deleteVerificationValue"),deleteVerificationByIdentifier:a(async s=>{await e.delete({model:"verification",where:[{field:"identifier",value:s}]})},"deleteVerificationByIdentifier"),updateVerificationValue:a(async(s,c)=>await d(c,[{field:"id",value:s}],"verification"),"updateVerificationValue")}},"createInternalAdapter");var Q=a(e=>{let t=e.plugins?.reduce((u,s)=>{let c=s.schema;if(!c)return u;for(let[m,g]of Object.entries(c))u[m]={fields:{...u[m]?.fields,...g.fields},modelName:g.modelName||m};return u},{}),r=e.rateLimit?.storage==="database",n={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:o,session:i,account:d,...l}=t||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:a(()=>!1,"defaultValue"),required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:a(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:a(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...o?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...i?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...d?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:a(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:a(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...l,...r?n:{}}},"getAuthTables");var En=require("zod");var we=require("kysely"),Z=require("kysely");function jr(e){if(!e)return null;if("dialect"in e)return jr(e.dialect);if("createDriver"in e){if(e instanceof Z.SqliteDialect)return"sqlite";if(e instanceof Z.MysqlDialect)return"mysql";if(e instanceof Z.PostgresDialect)return"postgres";if(e instanceof we.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}a(jr,"getDatabaseType");var tt=a(async e=>{let t=e.database;if(!t)return{kysely:null,databaseType:null};if("db"in t)return{kysely:t.db,databaseType:t.type};if("dialect"in t)return{kysely:new we.Kysely({dialect:t.dialect}),databaseType:t.type};let r,n=jr(t);return"createDriver"in t&&(r=t),"aggregate"in t&&(r=new Z.SqliteDialect({database:t})),"getConnection"in t&&(r=new Z.MysqlDialect(t)),"connect"in t&&(r=new Z.PostgresDialect({pool:t})),{kysely:r?new we.Kysely({dialect:r}):null,databaseType:n}},"createKyselyAdapter");function Le(e,t,r){return r==="update"?e:e==null&&t.defaultValue?typeof t.defaultValue=="function"?t.defaultValue():t.defaultValue:e}a(Le,"withApplyDefault");var Un=a((e,t,r)=>{let n=Q(t);function o(s,c){if(c==="id")return c;let m=n[s].fields[c];return m||console.log("Field not found",s,c),m.fieldName||c}a(o,"getField");function i(s,c,m){let{type:g="sqlite"}=r||{},p=n[c].fields[m];return p.type==="boolean"&&g==="sqlite"&&s!==null&&s!==void 0?s?1:0:p.type==="date"&&s&&s instanceof Date&&g==="sqlite"?s.toISOString():s}a(i,"transformValueToDB");function d(s,c,m){let{type:g="sqlite"}=r||{},p=n[c].fields[m];return p.type==="boolean"&&g==="sqlite"&&s!==null?s===1:p.type==="date"&&s?new Date(s):s}a(d,"transformValueFromDB");function l(s){return n[s].modelName}a(l,"getModelName");let u=t?.advanced?.generateId===!1;return{transformInput(s,c,m){let g=u||m==="update"?{}:{id:t.advanced?.generateId?t.advanced.generateId({model:c}):s.id||$()},p=n[c].fields;for(let f in p){let h=s[f];g[p[f].fieldName||f]=Le(i(h,c,f),p[f],m)}return g},transformOutput(s,c,m=[]){if(!s)return null;let g=s.id?m.length===0||m.includes("id")?{id:s.id}:{}:{},p=n[c].fields;for(let f in p){if(m.length&&!m.includes(f))continue;let h=p[f];h&&(g[f]=d(s[h.fieldName||f],c,f))}return g},convertWhereClause(s,c){if(!c)return{and:null,or:null};let m={and:[],or:[]};return c.forEach(g=>{let{field:p,value:f,operator:h="=",connector:w="AND"}=g,b=o(s,p),T=a(y=>h.toLowerCase()==="in"?y(b,"in",Array.isArray(f)?f:[f]):h==="contains"?y(b,"like",`%${f}%`):h==="starts_with"?y(b,"like",`${f}%`):h==="ends_with"?y(b,"like",`%${f}`):h==="eq"?y(b,"=",f):h==="ne"?y(b,"<>",f):h==="gt"?y(b,">",f):h==="gte"?y(b,">=",f):h==="lt"?y(b,"<",f):h==="lte"?y(b,"<=",f):y(b,h,f),"expr");w==="OR"?m.or.push(T):m.and.push(T)}),{and:m.and.length?m.and:null,or:m.or.length?m.or:null}},async withReturning(s,c,m,g){let p;if(r?.type!=="mysql")p=await c.returningAll().executeTakeFirst();else{await c.execute();let f=s.id?"id":g[0].field?g[0].field:"id",h=s[f]||g[0].value;p=await e.selectFrom(l(m)).selectAll().where(o(m,f),"=",h).executeTakeFirst()}return p},getModelName:l,getField:o}},"createTransform"),Fr=a((e,t)=>r=>{let{transformInput:n,withReturning:o,transformOutput:i,convertWhereClause:d,getModelName:l,getField:u}=Un(e,r,t);return{id:"kysely",async create(s){let{model:c,data:m,select:g}=s,p=n(m,c,"create"),f=e.insertInto(l(c)).values(p);return i(await o(p,f,c,[]),c,g)},async findOne(s){let{model:c,where:m,select:g}=s,{and:p,or:f}=d(c,m),h=e.selectFrom(l(c)).selectAll();p&&(h=h.where(b=>b.and(p.map(T=>T(b))))),f&&(h=h.where(b=>b.or(f.map(T=>T(b)))));let w=await h.executeTakeFirst();return w?i(w,c,g):null},async findMany(s){let{model:c,where:m,limit:g,offset:p,sortBy:f}=s,{and:h,or:w}=d(c,m),b=e.selectFrom(l(c));h&&(b=b.where(y=>y.and(h.map(k=>k(y))))),w&&(b=b.where(y=>y.or(w.map(k=>k(y))))),b=b.limit(g||100),p&&(b=b.offset(p)),f&&(b=b.orderBy(u(c,f.field),f.direction));let T=await b.selectAll().execute();return T?T.map(y=>i(y,c)):[]},async update(s){let{model:c,where:m,update:g}=s,{and:p,or:f}=d(c,m),h=n(g,c,"update"),w=e.updateTable(l(c)).set(h);return p&&(w=w.where(T=>T.and(p.map(y=>y(T))))),f&&(w=w.where(T=>T.or(f.map(y=>y(T))))),await i(await o(h,w,c,m),c)},async updateMany(s){let{model:c,where:m,update:g}=s,{and:p,or:f}=d(c,m),h=n(g,c,"update"),w=e.updateTable(l(c)).set(h);return p&&(w=w.where(T=>T.and(p.map(y=>y(T))))),f&&(w=w.where(T=>T.or(f.map(y=>y(T))))),(await w.execute()).length},async delete(s){let{model:c,where:m}=s,{and:g,or:p}=d(c,m),f=e.deleteFrom(l(c));g&&(f=f.where(h=>h.and(g.map(w=>w(h))))),p&&(f=f.where(h=>h.or(p.map(w=>w(h))))),await f.execute()},async deleteMany(s){let{model:c,where:m}=s,{and:g,or:p}=d(c,m),f=e.deleteFrom(l(c));return g&&(f=f.where(h=>h.and(g.map(w=>w(h))))),p&&(f=f.where(h=>h.or(p.map(w=>w(h))))),(await f.execute()).length},options:t}},"kyselyAdapter");var On=a(e=>{let t=Q(e);function r(n,o){return o==="id"?o:t[n].fields[o].fieldName||o}return a(r,"getField"),{transformInput(n,o,i){let d=i==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:o}):n.id||$()},l=t[o].fields;for(let u in l){let s=n[u];s===void 0&&!l[u].defaultValue||(d[l[u].fieldName||u]=Le(s,l[u],i))}return d},transformOutput(n,o,i=[]){if(!n)return null;let d=n.id||n._id?i.length===0||i.includes("id")?{id:n.id}:{}:{},l=t[o].fields;for(let u in l){if(i.length&&!i.includes(u))continue;let s=l[u];s&&(d[u]=n[s.fieldName||u])}return d},convertWhereClause(n,o,i){return o.filter(d=>n.every(l=>{let{field:u,value:s,operator:c}=l,m=r(i,u);if(c==="in"){if(!Array.isArray(s))throw new Error("Value must be an array");return s.includes(d[m])}else return c==="contains"?d[m].includes(s):c==="starts_with"?d[m].startsWith(s):c==="ends_with"?d[m].endsWith(s):d[m]===s}))},getField:r}},"createTransform"),qr=a(e=>t=>{let{transformInput:r,transformOutput:n,convertWhereClause:o,getField:i}=On(t);return{id:"memory",create:a(async({model:d,data:l})=>{let u=r(l,d,"create");return e[d].push(u),n(u,d)},"create"),findOne:a(async({model:d,where:l,select:u})=>{let s=e[d],m=o(l,s,d)[0]||null;return n(m,d,u)},"findOne"),findMany:a(async({model:d,where:l,sortBy:u,limit:s,offset:c})=>{let m=e[d];return l&&(m=o(l,m,d)),u&&(m=m.sort((g,p)=>{let f=i(d,u.field);return u.direction==="asc"?g[f]>p[f]?1:-1:g[f]<p[f]?1:-1})),c!==void 0&&(m=m.slice(c)),s!==void 0&&(m=m.slice(0,s)),m.map(g=>n(g,d))},"findMany"),update:a(async({model:d,where:l,update:u})=>{let s=e[d],c=o(l,s,d);return c.forEach(m=>{Object.assign(m,r(u,d,"update"))}),n(c[0],d)},"update"),delete:a(async({model:d,where:l})=>{let u=e[d],s=o(l,u,d);e[d]=u.filter(c=>!s.includes(c))},"delete"),deleteMany:a(async({model:d,where:l})=>{let u=e[d],s=o(l,u,d),c=0;return e[d]=u.filter(m=>s.includes(m)?(c++,!1):!s.includes(m)),c},"deleteMany"),updateMany(d){let{model:l,where:u,update:s}=d,c=e[l],m=o(u,c,l);return m.forEach(g=>{Object.assign(g,s)}),m[0]||null}}},"memoryAdapter");async function Vr(e){if(!e.database){let n=Q(e),o=Object.keys(n).reduce((i,d)=>(i[d]=[],i),{});return C.warn("No database configuration provided. Using memory adapter in development"),qr(o)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:t,databaseType:r}=await tt(e);if(!t)throw new N("Failed to initialize database adapter");return Fr(t,{type:r||"sqlite"})(e)}a(Vr,"getAdapter");var rt="better-auth-secret-123456789";var nt=require("better-call");async function Mr(e,t){let n=(await t.context.internalAdapter.findAccounts(e))?.find(d=>d.providerId==="credential"),o=n?.password;if(!n||!o||!t.body.password)throw new nt.APIError("BAD_REQUEST",{message:"No password credential found"});if(!await t.context.password.verify({hash:o,password:t.body.password}))throw new nt.APIError("BAD_REQUEST",{message:"Invalid password"});return!0}a(Mr,"checkPassword");var zr=a(async e=>{let t=await Vr(e),r=e.plugins||[],n=Sn(e),o=ye(e.logger),i=fe(e.baseURL,e.basePath),d=e.secret||B.BETTER_AUTH_SECRET||B.AUTH_SECRET||rt;d===rt&&pe&&o.error("You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config."),e={...e,secret:d,baseURL:i?new URL(i).origin:"",basePath:e.basePath||"/api/auth",plugins:r.concat(n),emailAndPassword:{...e.emailAndPassword,enabled:e.emailAndPassword?.enabled??!1,autoSignIn:e.emailAndPassword?.autoSignIn??!0}};let l=Be(e),u=Q(e),s=Object.keys(e.socialProviders||{}).map(p=>{let f=e.socialProviders?.[p];return f.enabled===!1?null:(f.clientId||o.warn(`Social provider ${p} is missing clientId or clientSecret`),He[p](f))}).filter(p=>p!==null),c=a(({model:p,size:f})=>typeof e?.advanced?.generateId=="function"?e.advanced.generateId({model:p,size:f}):$(f),"generateIdFunc"),m={appName:e.appName||"Better Auth",socialProviders:s,options:e,tables:u,trustedOrigins:vn(e),baseURL:i||"",sessionConfig:{updateAge:e.session?.updateAge!==void 0?e.session.updateAge:24*60*60,expiresIn:e.session?.expiresIn||60*60*24*7,freshAge:e.session?.freshAge===void 0?5*60:e.session.freshAge},secret:d,rateLimit:{...e.rateLimit,enabled:e.rateLimit?.enabled??pe,window:e.rateLimit?.window||10,max:e.rateLimit?.max||100,storage:e.rateLimit?.storage||(e.secondaryStorage?"secondary-storage":"memory")},authCookies:l,logger:o,generateId:c,session:null,secondaryStorage:e.secondaryStorage,password:{hash:e.emailAndPassword?.password?.hash||kt,verify:e.emailAndPassword?.password?.verify||Rt,config:{minPasswordLength:e.emailAndPassword?.minPasswordLength||8,maxPasswordLength:e.emailAndPassword?.maxPasswordLength||128},checkPassword:Mr},setNewSession(p){this.newSession=p},newSession:null,adapter:t,internalAdapter:et(t,{options:e,hooks:e.databaseHooks?[e.databaseHooks]:[],generateId:c}),createAuthCookie:Ee(e)},{context:g}=xn(m);return g},"init");function xn(e){let t=e.options,r=t.plugins||[],n=e,o=[];for(let i of r)if(i.init){let d=i.init(e);typeof d=="object"&&(d.options&&(d.options.databaseHooks&&o.push(d.options.databaseHooks),t=(0,$r.defu)(t,d.options)),d.context&&(n={...n,...d.context}))}return o.push(t.databaseHooks),n.internalAdapter=et(e.adapter,{options:t,hooks:o.filter(i=>i!==void 0),generateId:e.generateId}),n.options=t,{context:n}}a(xn,"runPluginInit");function Sn(e){let t=[];return e.advanced?.crossSubDomainCookies?.enabled,t}a(Sn,"getInternalPlugins");function vn(e){let t=fe(e.baseURL,e.basePath);if(!t)return[];let r=[new URL(t).origin];e.trustedOrigins&&r.push(...e.trustedOrigins);let n=B.BETTER_AUTH_TRUSTED_ORIGINS;return n&&r.push(...n.split(",")),r}a(vn,"getTrustedOrigins");var _n=a(e=>{let t=zr(e),{api:r}=Xe(t,e),n=e.plugins?.reduce((o,i)=>i.$ERROR_CODES?{...o,...i.$ERROR_CODES}:o,{});return{handler:a(async o=>{let i=await t,d=i.options.basePath||"/api/auth",l=new URL(o.url);if(!i.options.baseURL){let s=fe(void 0,d)||`${l.origin}${d}`;i.options.baseURL=s,i.baseURL=s}i.trustedOrigins=[...e.trustedOrigins||[],i.baseURL,l.origin];let{handler:u}=Nr(i,e);return u(o)},"handler"),api:r,options:e,$context:t,$Infer:{},$ERROR_CODES:{...n,...A}}},"betterAuth");0&&(module.exports={BetterAuthError,HIDE_METADATA,MissingDependencyError,betterAuth,capitalizeFirstLetter,createCookieGetter,createLogger,deleteSessionCookie,generateId,generateState,getCookies,levels,logger,parseCookies,parseSetCookieHeader,parseState,setCookieCache,setSessionCookie,shouldPublishLog});
