var q=(e,s="ms")=>new Date(Date.now()+(s==="sec"?e*1e3:e));import{z as x}from"zod";import{APIError as we}from"better-call";var be=x.object({id:x.string(),providerId:x.string(),accountId:x.string(),userId:x.string(),accessToken:x.string().nullish(),refreshToken:x.string().nullish(),idToken:x.string().nullish(),accessTokenExpiresAt:x.date().nullish(),refreshTokenExpiresAt:x.date().nullish(),scope:x.string().nullish(),password:x.string().nullish(),createdAt:x.date().default(()=>new Date),updatedAt:x.date().default(()=>new Date)}),ve=x.object({id:x.string(),email:x.string().transform(e=>e.toLowerCase()),emailVerified:x.boolean().default(!1),name:x.string(),image:x.string().nullish(),createdAt:x.date().default(()=>new Date),updatedAt:x.date().default(()=>new Date)}),Te=x.object({id:x.string(),userId:x.string(),expiresAt:x.date(),createdAt:x.date().default(()=>new Date),updatedAt:x.date().default(()=>new Date),token:x.string(),ipAddress:x.string().nullish(),userAgent:x.string().nullish()}),ke=x.object({id:x.string(),value:x.string(),createdAt:x.date().default(()=>new Date),updatedAt:x.date().default(()=>new Date),expiresAt:x.date(),identifier:x.string()});function P(e,s){let c=s.fields,u={};for(let f in e){let A=c[f];if(!A){u[f]=e[f];continue}A.returned!==!1&&(u[f]=e[f])}return u}function M(e,s){let c={...s==="user"?e.user?.additionalFields:{},...s==="session"?e.session?.additionalFields:{}};for(let u of e.plugins||[])u.schema&&u.schema[s]&&(c={...c,...u.schema[s].fields});return c}function L(e,s){let c=M(e,"user");return P(s,{fields:c})}function D(e,s){let c=M(e,"session");return P(s,{fields:c})}function _(e,s){let c=s.hooks;async function u(d,y,p){let t=d;for(let o of c||[]){let a=o[y]?.create?.before;if(a){let n=await a(d);if(n===!1)return null;typeof n=="object"&&"data"in n&&(t=n.data)}}let r=p?await p.fn(t):null,i=!p||p.executeMainFn?await e.create({model:y,data:t}):r;for(let o of c||[]){let a=o[y]?.create?.after;a&&await a(i)}return i}async function f(d,y,p,t){let r=d;for(let a of c||[]){let n=a[p]?.update?.before;if(n){let l=await n(d);if(l===!1)return null;r=typeof l=="object"?l.data:l}}let i=t?await t.fn(r):null,o=!t||t.executeMainFn?await e.update({model:p,update:r,where:y}):i;for(let a of c||[]){let n=a[p]?.update?.after;n&&await n(o)}return o}async function A(d,y,p,t){let r=d;for(let a of c||[]){let n=a[p]?.update?.before;if(n){let l=await n(d);if(l===!1)return null;r=typeof l=="object"?l.data:l}}let i=t?await t.fn(r):null,o=!t||t.executeMainFn?await e.updateMany({model:p,update:r,where:y}):i;for(let a of c||[]){let n=a[p]?.update?.after;n&&await n(o)}return o}return{createWithHooks:u,updateWithHooks:f,updateManyWithHooks:A}}var I=Object.create(null),F=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?I:globalThis),C=new Proxy(I,{get(e,s){return F()[s]??I[s]},has(e,s){let c=F();return s in c||s in I},set(e,s,c){let u=F(!0);return u[s]=c,!0},deleteProperty(e,s){if(!s)return!1;let c=F(!0);return delete c[s],!0},ownKeys(){let e=F(!0);return Object.keys(e)}});function ee(e){return e?e!=="false":!1}var te=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var j=te==="test"||ee(C.TEST);function $(e,s){if(s.advanced?.ipAddress?.disableIpTracking)return null;let c="127.0.0.1";if(j)return c;let f=s.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],A=e instanceof Request?e.headers:e;for(let d of f){let y=A.get(d);if(typeof y=="string"){let p=y.split(",")[0].trim();if(p)return p}}return null}function N(e){try{return JSON.parse(e)}catch{return null}}import{createRandomStringGenerator as re}from"@better-auth/utils/random";var k=e=>re("a-z","A-Z","0-9")(e||32);import{z as gt}from"zod";import{APIError as ht}from"better-call";var O=class extends Error{constructor(s,c){super(s),this.name="BetterAuthError",this.message=s,this.cause=c,this.stack=""}};import{createHash as et}from"@better-auth/utils/hash";import{xchacha20poly1305 as rt}from"@noble/ciphers/chacha";import{bytesToHex as it,hexToBytes as st,utf8ToBytes as at}from"@noble/ciphers/utils";import{managedNonce as dt}from"@noble/ciphers/webcrypto";import{scryptAsync as He}from"@noble/hashes/scrypt";import{getRandomValues as Je}from"uncrypto";import{hex as Ge}from"@better-auth/utils/hex";import{createRandomStringGenerator as ne}from"@better-auth/utils/random";var ie=ne("a-z","0-9","A-Z","-_");var B=["info","success","warn","error","debug"];function se(e,s){return B.indexOf(s)<=B.indexOf(e)}var b={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},ae={info:b.fg.blue,success:b.fg.green,warn:b.fg.yellow,error:b.fg.red,debug:b.fg.magenta},oe=(e,s)=>{let c=new Date().toISOString();return`${b.dim}${c}${b.reset} ${ae[e]}${e.toUpperCase()}${b.reset} ${b.bright}Better Auth${b.reset} ${s}`},E=e=>{let s=e?.disabled!==!0,c=e?.level??"error",u=(f,A,d=[])=>{if(!s||!se(c,f))return;let y=oe(f,A);if(!e||typeof e.log!="function"){f==="error"?console.error(y,...d):f==="warn"?console.warn(y,...d):console.log(y,...d);return}e.log(f==="success"?"info":f,y,...d)};return Object.fromEntries(B.map(f=>[f,(...[A,...d])=>u(f,A,d)]))},K=E();var Vt=(e,s)=>{let c=s.options,u=c.secondaryStorage,f=c.session?.expiresIn||60*60*24*7,{createWithHooks:A,updateWithHooks:d,updateManyWithHooks:y}=_(e,s),p=async t=>{await u?.set(t.token,JSON.stringify({session:t.session,user:t.user}),t.session.expiresAt?Math.floor(((t.session.expiresAt instanceof Date?t.session.expiresAt.getTime():new Date(t.session.expiresAt).getTime())-Date.now())/1e3):f)};return{createOAuthUser:async(t,r)=>{let i=await A({createdAt:new Date,updatedAt:new Date,...t},"user"),o=await A({...r,userId:i.id||t.id,createdAt:new Date,updatedAt:new Date},"account");return{user:i,account:o}},createUser:async t=>await A({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...t,email:t.email.toLowerCase()},"user"),createAccount:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"account"),listSessions:async t=>{if(u){let i=await u.get(`active-sessions-${t}`);if(!i)return[];let o=N(i)||[],a=Date.now(),n=o.filter(g=>g.expiresAt>a),l=[];for(let g of n){let m=await u.get(g.token);if(m){let w=JSON.parse(m),h=D(s.options,{...w.session,expiresAt:new Date(w.session.expiresAt)});l.push(h)}}return l}return await e.findMany({model:"session",where:[{field:"userId",value:t}]})},listUsers:async(t,r,i,o)=>await e.findMany({model:"user",limit:t,offset:r,sortBy:i,where:o}),deleteUser:async t=>{await e.deleteMany({model:"session",where:[{field:"userId",value:t}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:t}]}),await e.delete({model:"user",where:[{field:"id",value:t}]})},createSession:async(t,r,i,o)=>{let a=r instanceof Request?r.headers:r,{id:n,...l}=o||{},g={ipAddress:r&&$(r,s.options)||"",userAgent:a?.get("user-agent")||"",...l,expiresAt:i?q(60*60*24,"sec"):q(f,"sec"),userId:t,token:k(32),createdAt:new Date,updatedAt:new Date};return await A(g,"session",u?{fn:async()=>{let w=await e.findOne({model:"user",where:[{field:"id",value:t}]});u.set(g.token,JSON.stringify({session:g,user:w}),f);let h=await u.get(`active-sessions-${t}`),v=[],V=Date.now();return h&&(v=N(h)||[],v=v.filter(Y=>Y.expiresAt>V)),v.push({token:g.token,expiresAt:V+f*1e3}),await u.set(`active-sessions-${t}`,JSON.stringify(v),f),g},executeMainFn:c.session?.storeSessionInDatabase}:void 0)},findSession:async t=>{if(u){let n=await u.get(t);if(n){let l=JSON.parse(n),g=D(s.options,{...l.session,expiresAt:new Date(l.session.expiresAt),createdAt:new Date(l.session.createdAt),updatedAt:new Date(l.session.updatedAt)}),m=L(s.options,{...l.user,createdAt:new Date(l.user.createdAt),updatedAt:new Date(l.user.updatedAt)});return{session:g,user:m}}}let r=await e.findOne({model:"session",where:[{value:t,field:"token"}]});if(!r)return null;let i=await e.findOne({model:"user",where:[{value:r.userId,field:"id"}]});if(!i)return null;let o=D(s.options,r),a=L(s.options,i);return u&&await p({token:t,user:a,session:o}),{session:o,user:a}},findSessions:async t=>{if(u){let a=[];for(let n of t){let l=await u.get(n);if(l){let g=JSON.parse(l),m={session:{...g.session,expiresAt:new Date(g.session.expiresAt)},user:{...g.user,createdAt:new Date(g.user.createdAt),updatedAt:new Date(g.user.updatedAt)}};a.push(m)}}return a}let r=await e.findMany({model:"session",where:[{field:"token",value:t,operator:"in"}]}),i=r.map(a=>a.userId);if(!i.length)return[];let o=await e.findMany({model:"user",where:[{field:"id",value:i,operator:"in"}]});return r.map(a=>{let n=o.find(l=>l.id===a.userId);return n?{session:a,user:n}:null})},updateSession:async(t,r)=>await d(r,[{field:"token",value:t}],"session",u?{async fn(o){let a=await u.get(t),n=null;if(a){let l=JSON.parse(a);return n={...l.session,...o},await p({token:t,user:l.user,session:n}),n}else return null},executeMainFn:c.session?.storeSessionInDatabase}:void 0),deleteSession:async t=>{if(u){await u.delete(t),c.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:t}]});return}await e.delete({model:"session",where:[{field:"token",value:t}]})},deleteAccounts:async t=>{await e.deleteMany({model:"account",where:[{field:"userId",value:t}]})},deleteSessions:async t=>{if(u){if(typeof t=="string"){let r=await u.get(`active-sessions-${t}`),i=r?N(r):[];if(!i)return;for(let o of i)await u.delete(o.token)}else for(let r of t)await u.get(r)&&await u.delete(r);c.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]})},findOAuthUser:async(t,r,i)=>{let o=null;if(o=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]}),!o){let n=await e.findOne({model:"account",where:[{value:r,field:"accountId"},{value:i,field:"providerId"}]});return n?(o=await e.findOne({model:"user",where:[{value:n.userId,field:"id"}]}),{user:o,accounts:[n]}):null}let a=await e.findMany({model:"account",where:[{value:o.id,field:"userId"}]});return{user:o,accounts:a||[]}},findUserByEmail:async(t,r)=>{let i=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]});if(!i)return null;if(r?.includeAccounts){let o=await e.findMany({model:"account",where:[{value:i.id,field:"userId"}]});return{user:i,accounts:o}}return{user:i,accounts:[]}},findUserById:async t=>await e.findOne({model:"user",where:[{field:"id",value:t}]}),linkAccount:async t=>await A({...t,createdAt:new Date,updatedAt:new Date},"account"),updateUser:async(t,r)=>await d(r,[{field:"id",value:t}],"user"),updateUserByEmail:async(t,r)=>await d(r,[{field:"email",value:t}],"user"),updatePassword:async(t,r)=>{await y({password:r},[{field:"userId",value:t},{field:"providerId",value:"credential"}],"account")},findAccounts:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),findAccount:async t=>await e.findOne({model:"account",where:[{field:"accountId",value:t}]}),findAccountByUserId:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),updateAccount:async(t,r)=>await d(r,[{field:"id",value:t}],"account"),createVerificationValue:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"verification"),findVerificationValue:async t=>(await e.findMany({model:"verification",where:[{field:"identifier",value:t}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],deleteVerificationValue:async t=>{await e.delete({model:"verification",where:[{field:"id",value:t}]})},deleteVerificationByIdentifier:async t=>{await e.delete({model:"verification",where:[{field:"identifier",value:t}]})},updateVerificationValue:async(t,r)=>await d(r,[{field:"id",value:t}],"verification")}};var Mt=(e,s)=>({type:e,...s});var T=e=>{let s=e.plugins?.reduce((p,t)=>{let r=t.schema;if(!r)return p;for(let[i,o]of Object.entries(r))p[i]={fields:{...p[i]?.fields,...o.fields},modelName:o.modelName||i};return p},{}),c=e.rateLimit?.storage==="database",u={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:f,session:A,account:d,...y}=s||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...f?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...A?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...d?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...y,...c?u:{}}};import{z as R}from"zod";function $t(e){return R.object({...Object.keys(e).reduce((c,u)=>{let f=e[u];if(!f)return c;if(f.type==="string[]"||f.type==="number[]")return{...c,[u]:R.array(f.type==="string[]"?R.string():R.number())};if(Array.isArray(f.type))return{...c,[u]:R.any()};let A=R[f.type]();return f?.required===!1&&(A=A.optional()),f?.returned===!1?c:{...c,[u]:A}},{})})}import{Kysely as H,MssqlDialect as de}from"kysely";import{MysqlDialect as W,PostgresDialect as J,SqliteDialect as z}from"kysely";function G(e){if(!e)return null;if("dialect"in e)return G(e.dialect);if("createDriver"in e){if(e instanceof z)return"sqlite";if(e instanceof W)return"mysql";if(e instanceof J)return"postgres";if(e instanceof de)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var U=async e=>{let s=e.database;if(!s)return{kysely:null,databaseType:null};if("db"in s)return{kysely:s.db,databaseType:s.type};if("dialect"in s)return{kysely:new H({dialect:s.dialect}),databaseType:s.type};let c,u=G(s);return"createDriver"in s&&(c=s),"aggregate"in s&&(c=new z({database:s})),"getConnection"in s&&(c=new W(s)),"connect"in s&&(c=new J({pool:s})),{kysely:c?new H({dialect:c}):null,databaseType:u}};function S(e,s,c){return c==="update"?e:e==null&&s.defaultValue?typeof s.defaultValue=="function"?s.defaultValue():s.defaultValue:e}var ue=(e,s,c)=>{let u=T(s);function f(t,r){if(r==="id")return r;let i=u[t].fields[r];return i||console.log("Field not found",t,r),i.fieldName||r}function A(t,r,i){let{type:o="sqlite"}=c||{},a=u[r].fields[i];return a.type==="boolean"&&o==="sqlite"&&t!==null&&t!==void 0?t?1:0:a.type==="date"&&t&&t instanceof Date&&o==="sqlite"?t.toISOString():t}function d(t,r,i){let{type:o="sqlite"}=c||{},a=u[r].fields[i];return a.type==="boolean"&&o==="sqlite"&&t!==null?t===1:a.type==="date"&&t?new Date(t):t}function y(t){return u[t].modelName}let p=s?.advanced?.generateId===!1;return{transformInput(t,r,i){let o=p||i==="update"?{}:{id:s.advanced?.generateId?s.advanced.generateId({model:r}):t.id||k()},a=u[r].fields;for(let n in a){let l=t[n];o[a[n].fieldName||n]=S(A(l,r,n),a[n],i)}return o},transformOutput(t,r,i=[]){if(!t)return null;let o=t.id?i.length===0||i.includes("id")?{id:t.id}:{}:{},a=u[r].fields;for(let n in a){if(i.length&&!i.includes(n))continue;let l=a[n];l&&(o[n]=d(t[l.fieldName||n],r,n))}return o},convertWhereClause(t,r){if(!r)return{and:null,or:null};let i={and:[],or:[]};return r.forEach(o=>{let{field:a,value:n,operator:l="=",connector:g="AND"}=o,m=f(t,a),w=h=>l.toLowerCase()==="in"?h(m,"in",Array.isArray(n)?n:[n]):l==="contains"?h(m,"like",`%${n}%`):l==="starts_with"?h(m,"like",`${n}%`):l==="ends_with"?h(m,"like",`%${n}`):l==="eq"?h(m,"=",n):l==="ne"?h(m,"<>",n):l==="gt"?h(m,">",n):l==="gte"?h(m,">=",n):l==="lt"?h(m,"<",n):l==="lte"?h(m,"<=",n):h(m,l,n);g==="OR"?i.or.push(w):i.and.push(w)}),{and:i.and.length?i.and:null,or:i.or.length?i.or:null}},async withReturning(t,r,i,o){let a;if(c?.type!=="mysql")a=await r.returningAll().executeTakeFirst();else{await r.execute();let n=t.id?"id":o[0].field?o[0].field:"id",l=t[n]||o[0].value;a=await e.selectFrom(y(i)).selectAll().where(f(i,n),"=",l).executeTakeFirst()}return a},getModelName:y,getField:f}},Z=(e,s)=>c=>{let{transformInput:u,withReturning:f,transformOutput:A,convertWhereClause:d,getModelName:y,getField:p}=ue(e,c,s);return{id:"kysely",async create(t){let{model:r,data:i,select:o}=t,a=u(i,r,"create"),n=e.insertInto(y(r)).values(a);return A(await f(a,n,r,[]),r,o)},async findOne(t){let{model:r,where:i,select:o}=t,{and:a,or:n}=d(r,i),l=e.selectFrom(y(r)).selectAll();a&&(l=l.where(m=>m.and(a.map(w=>w(m))))),n&&(l=l.where(m=>m.or(n.map(w=>w(m)))));let g=await l.executeTakeFirst();return g?A(g,r,o):null},async findMany(t){let{model:r,where:i,limit:o,offset:a,sortBy:n}=t,{and:l,or:g}=d(r,i),m=e.selectFrom(y(r));l&&(m=m.where(h=>h.and(l.map(v=>v(h))))),g&&(m=m.where(h=>h.or(g.map(v=>v(h))))),m=m.limit(o||100),a&&(m=m.offset(a)),n&&(m=m.orderBy(p(r,n.field),n.direction));let w=await m.selectAll().execute();return w?w.map(h=>A(h,r)):[]},async update(t){let{model:r,where:i,update:o}=t,{and:a,or:n}=d(r,i),l=u(o,r,"update"),g=e.updateTable(y(r)).set(l);return a&&(g=g.where(w=>w.and(a.map(h=>h(w))))),n&&(g=g.where(w=>w.or(n.map(h=>h(w))))),await A(await f(l,g,r,i),r)},async updateMany(t){let{model:r,where:i,update:o}=t,{and:a,or:n}=d(r,i),l=u(o,r,"update"),g=e.updateTable(y(r)).set(l);return a&&(g=g.where(w=>w.and(a.map(h=>h(w))))),n&&(g=g.where(w=>w.or(n.map(h=>h(w))))),(await g.execute()).length},async delete(t){let{model:r,where:i}=t,{and:o,or:a}=d(r,i),n=e.deleteFrom(y(r));o&&(n=n.where(l=>l.and(o.map(g=>g(l))))),a&&(n=n.where(l=>l.or(a.map(g=>g(l))))),await n.execute()},async deleteMany(t){let{model:r,where:i}=t,{and:o,or:a}=d(r,i),n=e.deleteFrom(y(r));return o&&(n=n.where(l=>l.and(o.map(g=>g(l))))),a&&(n=n.where(l=>l.or(a.map(g=>g(l))))),(await n.execute()).length},options:s}};var le=e=>{let s=T(e);function c(u,f){return f==="id"?f:s[u].fields[f].fieldName||f}return{transformInput(u,f,A){let d=A==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:f}):u.id||k()},y=s[f].fields;for(let p in y){let t=u[p];t===void 0&&!y[p].defaultValue||(d[y[p].fieldName||p]=S(t,y[p],A))}return d},transformOutput(u,f,A=[]){if(!u)return null;let d=u.id||u._id?A.length===0||A.includes("id")?{id:u.id}:{}:{},y=s[f].fields;for(let p in y){if(A.length&&!A.includes(p))continue;let t=y[p];t&&(d[p]=u[t.fieldName||p])}return d},convertWhereClause(u,f,A){return f.filter(d=>u.every(y=>{let{field:p,value:t,operator:r}=y,i=c(A,p);if(r==="in"){if(!Array.isArray(t))throw new Error("Value must be an array");return t.includes(d[i])}else return r==="contains"?d[i].includes(t):r==="starts_with"?d[i].startsWith(t):r==="ends_with"?d[i].endsWith(t):d[i]===t}))},getField:c}},Q=e=>s=>{let{transformInput:c,transformOutput:u,convertWhereClause:f,getField:A}=le(s);return{id:"memory",create:async({model:d,data:y})=>{let p=c(y,d,"create");return e[d].push(p),u(p,d)},findOne:async({model:d,where:y,select:p})=>{let t=e[d],i=f(y,t,d)[0]||null;return u(i,d,p)},findMany:async({model:d,where:y,sortBy:p,limit:t,offset:r})=>{let i=e[d];return y&&(i=f(y,i,d)),p&&(i=i.sort((o,a)=>{let n=A(d,p.field);return p.direction==="asc"?o[n]>a[n]?1:-1:o[n]<a[n]?1:-1})),r!==void 0&&(i=i.slice(r)),t!==void 0&&(i=i.slice(0,t)),i.map(o=>u(o,d))},update:async({model:d,where:y,update:p})=>{let t=e[d],r=f(y,t,d);return r.forEach(i=>{Object.assign(i,c(p,d,"update"))}),u(r[0],d)},delete:async({model:d,where:y})=>{let p=e[d],t=f(y,p,d);e[d]=p.filter(r=>!t.includes(r))},deleteMany:async({model:d,where:y})=>{let p=e[d],t=f(y,p,d),r=0;return e[d]=p.filter(i=>t.includes(i)?(r++,!1):!t.includes(i)),r},updateMany(d){let{model:y,where:p,update:t}=d,r=e[y],i=f(p,r,y);return i.forEach(o=>{Object.assign(o,t)}),i[0]||null}}};async function yr(e){if(!e.database){let u=T(e),f=Object.keys(u).reduce((A,d)=>(A[d]=[],A),{});return K.warn("No database configuration provided. Using memory adapter in development"),Q(f)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:s,databaseType:c}=await U(e);if(!s)throw new O("Failed to initialize database adapter");return Z(s,{type:c||"sqlite"})(e)}function gr(e,s){let c=s.id?{id:s.id}:{};for(let u in e){let f=e[u],A=s[u];A!==void 0&&(c[f.fieldName||u]=A)}return c}function Ar(e,s){if(!s)return null;let c={id:s.id};for(let[u,f]of Object.entries(e))c[u]=s[f.fieldName||u];return c}function X(e){let s=T(e),c={};for(let u in s){let f=s[u],A=f.fields,d={};if(Object.entries(A).forEach(([y,p])=>{if(d[p.fieldName||y]=p,p.references){let t=s[p.references.model];t&&(d[p.fieldName||y].references={model:t.modelName,field:p.references.field})}}),c[f.modelName]){c[f.modelName].fields={...c[f.modelName].fields,...d};continue}c[f.modelName]={fields:d,order:f.order||1/0}}return c}var ce={string:["character varying","text"],number:["int4","integer","bigint","smallint","numeric","real","double precision"],boolean:["bool","boolean"],date:["timestamp","date"]},fe={string:["varchar","text"],number:["integer","int","bigint","smallint","decimal","float","double"],boolean:["boolean","tinyint"],date:["timestamp","datetime","date"]},pe={string:["TEXT"],number:["INTEGER","REAL"],boolean:["INTEGER","BOOLEAN"],date:["DATE","INTEGER"]},me={string:["nvarchar","varchar"],number:["int","bigint","smallint","decimal","float","double"],boolean:["bit","boolean"],date:["datetime","date"]},ye={postgres:ce,mysql:fe,sqlite:pe,mssql:me};function ge(e,s,c){if(s==="string[]"||s==="number[]")return e.toLowerCase().includes("json");let u=ye[c];return(Array.isArray(s)?u.string.map(d=>d.toLowerCase()):u[s].map(d=>d.toLowerCase())).includes(e.toLowerCase())}async function kr(e){let s=X(e),c=E(e.logger),{kysely:u,databaseType:f}=await U(e);f||(c.warn("Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this."),f="sqlite"),u||(c.error("Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter."),process.exit(1));let A=await u.introspection.getTables(),d=[],y=[];for(let[o,a]of Object.entries(s)){let n=A.find(g=>g.name===o);if(!n){let g=d.findIndex(h=>h.table===o),m={table:o,fields:a.fields,order:a.order||1/0},w=d.findIndex(h=>(h.order||1/0)>m.order);w===-1?g===-1?d.push(m):d[g].fields={...d[g].fields,...a.fields}:d.splice(w,0,m);continue}let l={};for(let[g,m]of Object.entries(a.fields)){let w=n.columns.find(h=>h.name===g);if(!w){l[g]=m;continue}ge(w.dataType,m.type,f)||c.warn(`Field ${g} in table ${o} has a different type in the database. Expected ${m.type} but got ${w.dataType}.`)}Object.keys(l).length>0&&y.push({table:o,fields:l,order:a.order||1/0})}let p=[];function t(o){let a=o.type,n={string:{sqlite:"text",postgres:"text",mysql:o.unique?"varchar(255)":o.references?"varchar(36)":"text",mssql:"text"},boolean:{sqlite:"integer",postgres:"boolean",mysql:"boolean",mssql:"boolean"},number:{sqlite:"integer",postgres:"integer",mysql:"integer",mssql:"integer"},date:{sqlite:"date",postgres:"timestamp",mysql:"datetime",mssql:"datetime"}};return f==="sqlite"&&(a==="string[]"||a==="number[]")?"text":a==="string[]"||a==="number[]"?"jsonb":Array.isArray(a)?"text":n[a][f||"sqlite"]}if(y.length)for(let o of y)for(let[a,n]of Object.entries(o.fields)){let l=t(n),g=u.schema.alterTable(o.table).addColumn(a,l,m=>(m=n.required!==!1?m.notNull():m,n.references&&(m=m.references(`${n.references.model}.${n.references.field}`)),n.unique&&(m=m.unique()),m));p.push(g)}if(d.length)for(let o of d){let a=u.schema.createTable(o.table).addColumn("id",f==="mysql"?"varchar(36)":"text",n=>n.primaryKey().notNull());for(let[n,l]of Object.entries(o.fields)){let g=t(l);a=a.addColumn(n,g,m=>(m=l.required!==!1?m.notNull():m,l.references&&(m=m.references(`${l.references.model}.${l.references.field}`)),l.unique&&(m=m.unique()),m))}p.push(a)}async function r(){for(let o of p)await o.execute()}async function i(){return p.map(a=>a.compile().sql).join(`;

`)}return{toBeCreated:d,toBeAdded:y,runMigrations:r,compileMigrations:i}}export{Ar as convertFromDB,gr as convertToDB,Mt as createFieldAttribute,Vt as createInternalAdapter,yr as getAdapter,T as getAuthTables,kr as getMigrations,X as getSchema,_ as getWithHooks,ge as matchType,$t as toZodSchema};
