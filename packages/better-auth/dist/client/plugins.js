import{atom as d}from"nanostores";function y(e){let t=e;return{newRole(i){return R(i)}}}function R(e){return{statements:e,authorize(t,i){for(let[s,o]of Object.entries(t)){let r=e[s];return r?(i==="OR"?o.some(n=>r.includes(n)):o.every(n=>r.includes(n)))?{success:!0}:{success:!1,error:`Unauthorized to access resource "${s}"`}:{success:!1,error:`You are not allowed to access resource: ${s}`}}return{success:!1,error:"Not authorized"}}}}var b={organization:["update","delete"],member:["create","update","delete"],invitation:["create","cancel"]},m=y(b),h=m.newRole({organization:["update"],invitation:["create","cancel"],member:["create","update","delete"]}),P=m.newRole({organization:["update","delete"],member:["create","update","delete"],invitation:["create","cancel"]}),O=m.newRole({organization:[],member:[],invitation:[]});import{createFetch as me}from"@better-fetch/fetch";var f=Object.create(null),l=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?f:globalThis),A=new Proxy(f,{get(e,t){return l()[t]??f[t]},has(e,t){let i=l();return t in i||t in f},set(e,t,i){let s=l(!0);return s[t]=i,!0},deleteProperty(e,t){if(!t)return!1;let i=l(!0);return delete i[t],!0},ownKeys(){let e=l(!0);return Object.keys(e)}});function x(e){return e?e!=="false":!1}var w=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var M=w==="test"||x(A.TEST);import"nanostores";import"@better-fetch/fetch";import{atom as ne}from"nanostores";import"@better-fetch/fetch";import{atom as C,onMount as B}from"nanostores";var c=(e,t,i,s)=>{let o=C({data:null,error:null,isPending:!0,isRefetching:!1}),r=()=>{let n=typeof s=="function"?s({data:o.get().data,error:o.get().error,isPending:o.get().isPending}):s;return i(t,{...n,async onSuccess(u){typeof window<"u"&&o.set({data:u.data,error:null,isPending:!1,isRefetching:!1}),await n?.onSuccess?.(u)},async onError(u){o.set({error:u.error,data:null,isPending:!1,isRefetching:!1}),await n?.onError?.(u)},async onRequest(u){let p=o.get();o.set({isPending:p.data===null,data:p.data,error:null,isRefetching:!0}),await n?.onRequest?.(u)}})};e=Array.isArray(e)?e:[e];let a=!1;for(let n of e)n.subscribe(()=>{a?r():B(o,()=>(r(),a=!0,()=>{o.off(),n.off()}))});return o};var se={true:!0,false:!1,null:null,undefined:void 0,nan:Number.NaN,infinity:Number.POSITIVE_INFINITY,"-infinity":Number.NEGATIVE_INFINITY};var Le=e=>{let t=d(!1),i=d(!1),s=d(!1),o={admin:h,member:O,owner:P,...e?.roles};return{id:"organization",$InferServerPlugin:{},getActions:r=>({$Infer:{ActiveOrganization:{},Organization:{},Invitation:{},Member:{}},organization:{checkRolePermission:a=>{let n=o[a.role];return n?(n?.authorize(a.permission)).success:!1}}}),getAtoms:r=>{let a=c(t,"/organization/list",r,{method:"GET"}),n=c([i],"/organization/get-full-organization",r,()=>({method:"GET"})),u=c([s],"/organization/get-active-member",r,{method:"GET"});return{$listOrg:t,$activeOrgSignal:i,$activeMemberSignal:s,activeOrganization:n,listOrganizations:a,activeMember:u}},pathMethods:{"/organization/get-full-organization":"GET"},atomListeners:[{matcher(r){return r==="/organization/create"||r==="/organization/delete"},signal:"$listOrg"},{matcher(r){return r.startsWith("/organization")},signal:"$activeOrgSignal"},{matcher(r){return r.includes("/organization/update-member-role")},signal:"$activeMemberSignal"}]}};var Ne=()=>({id:"username",$InferServerPlugin:{}});import{WebAuthnError as v,startAuthentication as E,startRegistration as k}from"@simplewebauthn/browser";import{atom as I}from"nanostores";var _=(e,{$listPasskeys:t})=>({signIn:{passkey:async(o,r)=>{let a=await e("/passkey/generate-authenticate-options",{method:"POST",body:{email:o?.email}});if(!a.data)return a;try{let n=await E(a.data,o?.autoFill||!1),u=await e("/passkey/verify-authentication",{body:{response:n},...o?.fetchOptions,...r,method:"POST"});if(!u.data)return u}catch{return{data:null,error:{message:"auth cancelled",status:400,statusText:"BAD_REQUEST"}}}}},passkey:{addPasskey:async(o,r)=>{let a=await e("/passkey/generate-register-options",{method:"GET"});if(!a.data)return a;try{let n=await k(a.data),u=await e("/passkey/verify-registration",{...o?.fetchOptions,...r,body:{response:n,name:o?.name},method:"POST"});if(!u.data)return u;t.set(Math.random())}catch(n){return n instanceof v?n.code==="ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED"?{data:null,error:{message:"previously registered",status:400,statusText:"BAD_REQUEST"}}:n.code==="ERROR_CEREMONY_ABORTED"?{data:null,error:{message:"registration cancelled",status:400,statusText:"BAD_REQUEST"}}:{data:null,error:{message:n.message,status:400,statusText:"BAD_REQUEST"}}:{data:null,error:{message:n instanceof Error?n.message:"unknown error",status:500,statusText:"INTERNAL_SERVER_ERROR"}}}}},$Infer:{}}),qe=()=>{let e=I();return{id:"passkey",$InferServerPlugin:{},getActions:t=>_(t,{$listPasskeys:e}),getAtoms(t){return{listPasskeys:c(e,"/passkey/list-user-passkeys",t,{method:"GET"}),$listPasskeys:e}},pathMethods:{"/passkey/register":"POST","/passkey/authenticate":"POST"},atomListeners:[{matcher(t){return t==="/passkey/verify-registration"||t==="/passkey/delete-passkey"||t==="/passkey/update-passkey"},signal:"_listPasskeys"}]}};var Ve=e=>({id:"two-factor",$InferServerPlugin:{},atomListeners:[{matcher:t=>t.startsWith("/two-factor/"),signal:"$sessionSignal"}],pathMethods:{"/two-factor/disable":"POST","/two-factor/enable":"POST","/two-factor/send-otp":"POST","/two-factor/generate-backup-codes":"POST"},fetchPlugins:[{id:"two-factor",name:"two-factor",hooks:{async onSuccess(t){t.data?.twoFactorRedirect&&e?.onTwoFactorRedirect&&await e.onTwoFactorRedirect()}}}]});var Je=()=>({id:"magic-link",$InferServerPlugin:{}});var Qe=()=>({id:"phoneNumber",$InferServerPlugin:{},atomListeners:[{matcher(e){return e==="/phone-number/update"||e==="/phone-number/verify"},signal:"$sessionSignal"}]});var Xe=()=>({id:"anonymous",$InferServerPlugin:{},pathMethods:{"/sign-in/anonymous":"POST"}});var et=e=>({id:"additional-fields-client",$InferServerPlugin:{}});var nt=()=>({id:"better-auth-client",$InferServerPlugin:{},pathMethods:{"/admin/list-users":"GET","/admin/stop-impersonating":"POST"}});var ot=()=>({id:"generic-oauth-client",$InferServerPlugin:{}});var it=()=>({id:"better-auth-client",$InferServerPlugin:{}});var ut=()=>({id:"multi-session",$InferServerPlugin:{},atomListeners:[{matcher(e){return e==="/multi-session/set-active"},signal:"$sessionSignal"}]});var lt=()=>({id:"email-otp",$InferServerPlugin:{}});var g=!1,ft=e=>({id:"one-tap",getActions:(t,i)=>({oneTap:async(s,o)=>{if(g){console.warn("A Google One Tap request is already in progress. Please wait.");return}g=!0;try{if(typeof window>"u"||!window.document){console.warn("Google One Tap is only available in browser environments");return}let{autoSelect:r,cancelOnTapOutside:a,context:n}=s??{},u=n??e.context??"signin";await U(),await new Promise(p=>{window.google?.accounts.id.initialize({client_id:e.clientId,callback:async T=>{await t("/one-tap/callback",{method:"POST",body:{idToken:T.credential},...s?.fetchOptions,...o}),(!s?.fetchOptions&&!o||s?.callbackURL)&&(window.location.href=s?.callbackURL??"/"),p()},auto_select:r,cancel_on_tap_outside:a,context:u}),window.google?.accounts.id.prompt()})}catch(r){throw console.error("Error during Google One Tap flow:",r),r}finally{g=!1}}}),getAtoms(t){return{}}}),U=()=>new Promise(e=>{if(window.googleScriptInitialized){e();return}let t=document.createElement("script");t.src="https://accounts.google.com/gsi/client",t.async=!0,t.defer=!0,t.onload=()=>{window.googleScriptInitialized=!0,e()},document.head.appendChild(t)});var gt=()=>S();var S=()=>({id:"infer-server-plugin",$InferServerPlugin:{}});var Pt=()=>({id:"sso-client",$InferServerPlugin:{}});var At=()=>({id:"oidc-client",$InferServerPlugin:{}});export{S as InferServerPlugin,nt as adminClient,Xe as anonymousClient,gt as customSessionClient,lt as emailOTPClient,ot as genericOAuthClient,_ as getPasskeyActions,et as inferAdditionalFields,it as jwtClient,Je as magicLinkClient,ut as multiSessionClient,At as oidcClient,ft as oneTapClient,Le as organizationClient,qe as passkeyClient,Qe as phoneNumberClient,Pt as ssoClient,Ve as twoFactorClient,Ne as usernameClient};
