var N=Object.defineProperty;var r=(e,u)=>N(e,"name",{value:u,configurable:!0});import{ObjectId as x}from"mongodb";import{z as o}from"zod";import{APIError as z}from"better-call";var G=o.object({id:o.string(),providerId:o.string(),accountId:o.string(),userId:o.string(),accessToken:o.string().nullish(),refreshToken:o.string().nullish(),idToken:o.string().nullish(),accessTokenExpiresAt:o.date().nullish(),refreshTokenExpiresAt:o.date().nullish(),scope:o.string().nullish(),password:o.string().nullish(),createdAt:o.date().default(()=>new Date),updatedAt:o.date().default(()=>new Date)}),Z=o.object({id:o.string(),email:o.string().transform(e=>e.toLowerCase()),emailVerified:o.boolean().default(!1),name:o.string(),image:o.string().nullish(),createdAt:o.date().default(()=>new Date),updatedAt:o.date().default(()=>new Date)}),Q=o.object({id:o.string(),userId:o.string(),expiresAt:o.date(),createdAt:o.date().default(()=>new Date),updatedAt:o.date().default(()=>new Date),token:o.string(),ipAddress:o.string().nullish(),userAgent:o.string().nullish()}),X=o.object({id:o.string(),value:o.string(),createdAt:o.date().default(()=>new Date),updatedAt:o.date().default(()=>new Date),expiresAt:o.date(),identifier:o.string()});var v=Object.create(null),b=r(e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?v:globalThis),"_getEnv"),D=new Proxy(v,{get(e,u){return b()[u]??v[u]},has(e,u){let a=b();return u in a||u in v},set(e,u,a){let f=b(!0);return f[u]=a,!0},deleteProperty(e,u){if(!u)return!1;let a=b(!0);return delete a[u],!0},ownKeys(){let e=b(!0);return Object.keys(e)}});function U(e){return e?e!=="false":!1}r(U,"toBoolean");var S=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var q=S==="test"||U(D.TEST);import{createRandomStringGenerator as ge}from"@better-auth/utils/random";import{z as nt}from"zod";import{APIError as it}from"better-call";import{createHash as _e}from"@better-auth/utils/hash";import{xchacha20poly1305 as $e}from"@noble/ciphers/chacha";import{bytesToHex as Ke,hexToBytes as We,utf8ToBytes as He}from"@noble/ciphers/utils";import{managedNonce as ze}from"@noble/ciphers/webcrypto";import{scryptAsync as Ne}from"@noble/hashes/scrypt";import{getRandomValues as Se}from"uncrypto";import{hex as Be}from"@better-auth/utils/hex";import{createRandomStringGenerator as L}from"@better-auth/utils/random";var E=L("a-z","0-9","A-Z","-_");var k=["info","success","warn","error","debug"];function M(e,u){return k.indexOf(u)<=k.indexOf(e)}r(M,"shouldPublishLog");var A={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},V={info:A.fg.blue,success:A.fg.green,warn:A.fg.yellow,error:A.fg.red,debug:A.fg.magenta},P=r((e,u)=>{let a=new Date().toISOString();return`${A.dim}${a}${A.reset} ${V[e]}${e.toUpperCase()}${A.reset} ${A.bright}Better Auth${A.reset} ${u}`},"formatMessage"),R=r(e=>{let u=e?.disabled!==!0,a=e?.level??"error",f=r((s,n,t=[])=>{if(!u||!M(a,s))return;let i=P(s,n);if(!e||typeof e.log!="function"){s==="error"?console.error(i,...t):s==="warn"?console.warn(i,...t):console.log(i,...t);return}e.log(s==="success"?"info":s,i,...t)},"LogFunc");return Object.fromEntries(k.map(s=>[s,(...[n,...t])=>f(s,n,t)]))},"createLogger"),_=R();var w=r(e=>{let u=e.plugins?.reduce((d,l)=>{let c=l.schema;if(!c)return d;for(let[p,h]of Object.entries(c))d[p]={fields:{...d[p]?.fields,...h.fields},modelName:h.modelName||p};return d},{}),a=e.rateLimit?.storage==="database",f={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:s,session:n,account:t,...i}=u||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:r(()=>!1,"defaultValue"),required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:r(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:r(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...s?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...n?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...t?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:r(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:r(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...i,...a?f:{}}},"getAuthTables");import{z as Pt}from"zod";import{Kysely as jt,MssqlDialect as Kt}from"kysely";import{MysqlDialect as Ht,PostgresDialect as Jt,SqliteDialect as zt}from"kysely";function T(e,u,a){return a==="update"?e:e==null&&u.defaultValue?typeof u.defaultValue=="function"?u.defaultValue():u.defaultValue:e}r(T,"withApplyDefault");var $=r(e=>{let u=w(e);function a(n,t,i){if(n==="id"||n==="_id"||u[i].fields[n].references?.field==="id"){if(typeof t!="string"){if(t instanceof x)return t;if(Array.isArray(t))return t.map(d=>{if(typeof d=="string")try{return new x(d)}catch{return d}if(d instanceof x)return d;throw new Error("Invalid id value")});throw new Error("Invalid id value")}try{return new x(t)}catch{return t}}return t}r(a,"serializeID");function f(n,t,i){return n==="id"||u[i].fields[n].references?.field==="id"?t instanceof x?t.toHexString():Array.isArray(t)?t.map(d=>d instanceof x?d.toHexString():d):t:t}r(f,"deserializeID");function s(n,t){return n==="id"?"_id":u[t].fields[n].fieldName||n}return r(s,"getField"),{transformInput(n,t,i){let d=i==="update"?{}:{_id:new x},l=u[t].fields;for(let c in l){let p=n[c];p===void 0&&(!l[c].defaultValue||i==="update")||(d[l[c].fieldName||c]=T(a(c,p,t),l[c],i))}return d},transformOutput(n,t,i=[]){let d=n.id||n._id?i.length===0||i.includes("id")?{id:n.id?n.id.toString():n._id.toString()}:{}:{},l=u[t].fields;for(let c in l){if(i.length&&!i.includes(c))continue;let p=l[c];p&&(d[c]=f(c,n[p.fieldName||c],t))}return d},convertWhereClause(n,t){if(!n.length)return{};let i=n.map(p=>{let{field:h,value:m,operator:O="eq",connector:I="AND"}=p,y,g=s(h,t);switch(O.toLowerCase()){case"eq":y={[g]:a(h,m,t)};break;case"in":y={[g]:{$in:Array.isArray(m)?a(h,m,t):[a(h,m,t)]}};break;case"gt":y={[g]:{$gt:m}};break;case"gte":y={[g]:{$gte:m}};break;case"lt":y={[g]:{$lt:m}};break;case"lte":y={[g]:{$lte:m}};break;case"ne":y={[g]:{$ne:m}};break;case"contains":y={[g]:{$regex:`.*${m}.*`}};break;case"starts_with":y={[g]:{$regex:`${m}.*`}};break;case"ends_with":y={[g]:{$regex:`.*${m}`}};break;default:throw new Error(`Unsupported operator: ${O}`)}return{condition:y,connector:I}});if(i.length===1)return i[0].condition;let d=i.filter(p=>p.connector==="AND").map(p=>p.condition),l=i.filter(p=>p.connector==="OR").map(p=>p.condition),c={};return d.length&&(c={...c,$and:d}),l.length&&(c={...c,$or:l}),c},getModelName:r(n=>u[n].modelName,"getModelName"),getField:s}},"createTransform"),Hr=r(e=>u=>{let a=$(u);return{id:"mongodb-adapter",async create(f){let{model:s,data:n,select:t}=f,i=a.transformInput(n,s,"create");i.id&&delete i.id;let l=(await e.collection(a.getModelName(s)).insertOne(i)).insertedId,c={...i,id:l.toString()};return a.transformOutput(c,s,t)},async findOne(f){let{model:s,where:n,select:t}=f,i=a.convertWhereClause(n,s),d=await e.collection(a.getModelName(s)).findOne(i);return d?a.transformOutput(d,s,t):null},async findMany(f){let{model:s,where:n,limit:t,offset:i,sortBy:d}=f,l=n?a.convertWhereClause(n,s):{},c=e.collection(a.getModelName(s)).find(l);return t&&c.limit(t),i&&c.skip(i),d&&c.sort(a.getField(d.field,s),d.direction==="desc"?-1:1),(await c.toArray()).map(h=>a.transformOutput(h,s))},async update(f){let{model:s,where:n,update:t}=f,i=a.convertWhereClause(n,s),d=a.transformInput(t,s,"update"),l=await e.collection(a.getModelName(s)).findOneAndUpdate(i,{$set:d},{returnDocument:"after"});return l?a.transformOutput(l,s):null},async updateMany(f){let{model:s,where:n,update:t}=f,i=a.convertWhereClause(n,s),d=a.transformInput(t,s,"update");return(await e.collection(a.getModelName(s)).updateMany(i,{$set:d})).modifiedCount},async delete(f){let{model:s,where:n}=f,t=a.convertWhereClause(n,s),i=await e.collection(a.getModelName(s)).findOneAndDelete(t);return i?a.transformOutput(i,s):null},async deleteMany(f){let{model:s,where:n}=f,t=a.convertWhereClause(n,s);return(await e.collection(a.getModelName(s)).deleteMany(t)).deletedCount}}},"mongodbAdapter");export{Hr as mongodbAdapter};
