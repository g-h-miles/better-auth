var M=Object.defineProperty;var r=(e,a)=>M(e,"name",{value:a,configurable:!0});import{and as G,asc as J,desc as Q,eq as F,inArray as B,like as N,or as Z}from"drizzle-orm";import{z as i}from"zod";import{APIError as ae}from"better-call";var oe=i.object({id:i.string(),providerId:i.string(),accountId:i.string(),userId:i.string(),accessToken:i.string().nullish(),refreshToken:i.string().nullish(),idToken:i.string().nullish(),accessTokenExpiresAt:i.date().nullish(),refreshTokenExpiresAt:i.date().nullish(),scope:i.string().nullish(),password:i.string().nullish(),createdAt:i.date().default(()=>new Date),updatedAt:i.date().default(()=>new Date)}),de=i.object({id:i.string(),email:i.string().transform(e=>e.toLowerCase()),emailVerified:i.boolean().default(!1),name:i.string(),image:i.string().nullish(),createdAt:i.date().default(()=>new Date),updatedAt:i.date().default(()=>new Date)}),ue=i.object({id:i.string(),userId:i.string(),expiresAt:i.date(),createdAt:i.date().default(()=>new Date),updatedAt:i.date().default(()=>new Date),token:i.string(),ipAddress:i.string().nullish(),userAgent:i.string().nullish()}),ce=i.object({id:i.string(),value:i.string(),createdAt:i.date().default(()=>new Date),updatedAt:i.date().default(()=>new Date),expiresAt:i.date(),identifier:i.string()});var D=Object.create(null),k=r(e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?D:globalThis),"_getEnv"),U=new Proxy(D,{get(e,a){return k()[a]??D[a]},has(e,a){let c=k();return a in c||a in D},set(e,a,c){let y=k(!0);return y[a]=c,!0},deleteProperty(e,a){if(!a)return!1;let c=k(!0);return delete c[a],!0},ownKeys(){let e=k(!0);return Object.keys(e)}});function E(e){return e?e!=="false":!1}r(E,"toBoolean");var P=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var V=P==="test"||E(U.TEST);import{createRandomStringGenerator as _}from"@better-auth/utils/random";var R=r(e=>_("a-z","A-Z","0-9")(e||32),"generateId");import{z as mt}from"zod";import{APIError as gt}from"better-call";var w=class extends Error{static{r(this,"BetterAuthError")}constructor(a,c){super(a),this.name="BetterAuthError",this.message=a,this.cause=c,this.stack=""}};import{createHash as Ze}from"@better-auth/utils/hash";import{xchacha20poly1305 as Ye}from"@noble/ciphers/chacha";import{bytesToHex as tt,hexToBytes as rt,utf8ToBytes as nt}from"@noble/ciphers/utils";import{managedNonce as it}from"@noble/ciphers/webcrypto";import{scryptAsync as Ce}from"@noble/hashes/scrypt";import{getRandomValues as je}from"uncrypto";import{hex as He}from"@better-auth/utils/hex";import{createRandomStringGenerator as C}from"@better-auth/utils/random";var $=C("a-z","0-9","A-Z","-_");var I=["info","success","warn","error","debug"];function j(e,a){return I.indexOf(a)<=I.indexOf(e)}r(j,"shouldPublishLog");var b={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},K={info:b.fg.blue,success:b.fg.green,warn:b.fg.yellow,error:b.fg.red,debug:b.fg.magenta},H=r((e,a)=>{let c=new Date().toISOString();return`${b.dim}${c}${b.reset} ${K[e]}${e.toUpperCase()}${b.reset} ${b.bright}Better Auth${b.reset} ${a}`},"formatMessage"),q=r(e=>{let a=e?.disabled!==!0,c=e?.level??"error",y=r((p,g,m=[])=>{if(!a||!j(c,p))return;let x=H(p,g);if(!e||typeof e.log!="function"){p==="error"?console.error(x,...m):p==="warn"?console.warn(x,...m):console.log(x,...m);return}e.log(p==="success"?"info":p,x,...m)},"LogFunc");return Object.fromEntries(I.map(p=>[p,(...[g,...m])=>y(p,g,m)]))},"createLogger"),z=q();var T=r(e=>{let a=e.plugins?.reduce((o,l)=>{let s=l.schema;if(!s)return o;for(let[t,u]of Object.entries(s))o[t]={fields:{...o[t]?.fields,...u.fields},modelName:u.modelName||t};return o},{}),c=e.rateLimit?.storage==="database",y={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:p,session:g,account:m,...x}=a||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:r(()=>!1,"defaultValue"),required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:r(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:r(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...p?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...g?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...m?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:r(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:r(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...x,...c?y:{}}},"getAuthTables");import{z as Qt}from"zod";import{Kysely as er,MssqlDialect as tr}from"kysely";import{MysqlDialect as nr,PostgresDialect as sr,SqliteDialect as ir}from"kysely";function O(e,a,c){return c==="update"?e:e==null&&a.defaultValue?typeof a.defaultValue=="function"?a.defaultValue():a.defaultValue:e}r(O,"withApplyDefault");var X=r((e,a,c)=>{let y=T(c);function p(o,l){return l==="id"?l:y[o].fields[l].fieldName||l}r(p,"getField");function g(o){let l=a.schema||e._.fullSchema;if(!l)throw new w("Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.");let s=m(o),t=l[s];if(!t)throw new w(`[# Drizzle Adapter]: The model "${s}" was not found in the schema object. Please pass the schema directly to the adapter options.`);return t}r(g,"getSchema");let m=r(o=>y[o].modelName!==o?y[o].modelName:a.usePlural?`${o}s`:o,"getModelName"),x=c?.advanced?.generateId===!1;return{getSchema:g,transformInput(o,l,s){let t=x||s==="update"?{}:{id:c.advanced?.generateId?c.advanced.generateId({model:l}):o.id||R()},u=y[l].fields;for(let d in u){let f=o[d];f===void 0&&!u[d].defaultValue||(t[u[d].fieldName||d]=O(f,u[d],s))}return t},transformOutput(o,l,s=[]){if(!o)return null;let t=o.id||o._id?s.length===0||s.includes("id")?{id:o.id}:{}:{},u=y[l].fields;for(let d in u){if(s.length&&!s.includes(d))continue;let f=u[d];f&&(t[d]=o[f.fieldName||d])}return t},convertWhereClause(o,l){let s=g(l);if(!o)return[];if(o.length===1){let n=o[0];if(!n)return[];let h=p(l,n.field);if(!s[h])throw new w(`The field "${n.field}" does not exist in the schema for the model "${l}". Please update your schema.`);if(n.operator==="in"){if(!Array.isArray(n.value))throw new w(`The value for the field "${n.field}" must be an array when using the "in" operator.`);return[B(s[h],n.value)]}return n.operator==="contains"?[N(s[h],`%${n.value}%`)]:n.operator==="starts_with"?[N(s[h],`${n.value}%`)]:n.operator==="ends_with"?[N(s[h],`%${n.value}`)]:[F(s[h],n.value)]}let t=o.filter(n=>n.connector==="AND"||!n.connector),u=o.filter(n=>n.connector==="OR"),d=G(...t.map(n=>{let h=p(l,n.field);if(n.operator==="in"){if(!Array.isArray(n.value))throw new w(`The value for the field "${n.field}" must be an array when using the "in" operator.`);return B(s[h],n.value)}return F(s[h],n.value)})),f=Z(...u.map(n=>{let h=p(l,n.field);return F(s[h],n.value)})),A=[];return t.length&&A.push(d),u.length&&A.push(f),A},withReturning:r(async(o,l,s)=>{if(a.provider!=="mysql")return(await l.returning())[0];await l;let t=g(m(o));return(await e.select().from(t).where(F(t.id,s.id)))[0]},"withReturning"),getField:p,getModelName:m}},"createTransform");function Y(e,a,c){if(!e)throw new w("Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.");for(let y in c)if(!e[y])throw new w(`The field "${y}" does not exist in the "${a}" schema. Please update your drizzle schema or re-generate using "npx @better-auth/cli generate".`)}r(Y,"checkMissingFields");var on=r((e,a)=>c=>{let{transformInput:y,transformOutput:p,convertWhereClause:g,getSchema:m,withReturning:x,getField:o,getModelName:l}=X(e,a,c);return{id:"drizzle",async create(s){let{model:t,data:u}=s,d=y(u,t,"create"),f=m(t);Y(f,l(t),d);let A=e.insert(f).values(d),n=await x(t,A,d);return p(n,t)},async findOne(s){let{model:t,where:u,select:d}=s,f=m(t),A=g(u,t),n=await e.select().from(f).where(...A);return n.length?p(n[0],t,d):null},async findMany(s){let{model:t,where:u,sortBy:d,limit:f,offset:A}=s,n=m(t),h=u?g(u,t):[],v=d?.direction==="desc"?Q:J,S=e.select().from(n).limit(f||100).offset(A||0);return d?.field&&S.orderBy(v(n[o(t,d?.field)])),(await S.where(...h)).map(L=>p(L,t))},async update(s){let{model:t,where:u,update:d}=s,f=m(t),A=g(u,t),n=y(d,t,"update"),h=e.update(f).set(n).where(...A),v=await x(t,h,n);return p(v,t)},async updateMany(s){let{model:t,where:u,update:d}=s,f=m(t),A=g(u,t),n=y(d,t,"update"),v=await e.update(f).set(n).where(...A);return v?v.changes:0},async delete(s){let{model:t,where:u}=s,d=m(t),f=g(u,t);await e.delete(d).where(...f)},async deleteMany(s){let{model:t,where:u}=s,d=m(t),f=g(u,t),n=await e.delete(d).where(...f);return n?n.length:0},options:a}},"drizzleAdapter");export{on as drizzleAdapter};
