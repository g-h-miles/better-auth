import{and as z,asc as W,desc as G,eq as O,inArray as q,like as I,or as J}from"drizzle-orm";import{z as s}from"zod";import{APIError as re}from"better-call";var ne=s.object({id:s.string(),providerId:s.string(),accountId:s.string(),userId:s.string(),accessToken:s.string().nullish(),refreshToken:s.string().nullish(),idToken:s.string().nullish(),accessTokenExpiresAt:s.date().nullish(),refreshTokenExpiresAt:s.date().nullish(),scope:s.string().nullish(),password:s.string().nullish(),createdAt:s.date().default(()=>new Date),updatedAt:s.date().default(()=>new Date)}),se=s.object({id:s.string(),email:s.string().transform(e=>e.toLowerCase()),emailVerified:s.boolean().default(!1),name:s.string(),image:s.string().nullish(),createdAt:s.date().default(()=>new Date),updatedAt:s.date().default(()=>new Date)}),ie=s.object({id:s.string(),userId:s.string(),expiresAt:s.date(),createdAt:s.date().default(()=>new Date),updatedAt:s.date().default(()=>new Date),token:s.string(),ipAddress:s.string().nullish(),userAgent:s.string().nullish()}),ae=s.object({id:s.string(),value:s.string(),createdAt:s.date().default(()=>new Date),updatedAt:s.date().default(()=>new Date),expiresAt:s.date(),identifier:s.string()});var R=Object.create(null),T=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?R:globalThis),S=new Proxy(R,{get(e,i){return T()[i]??R[i]},has(e,i){let u=T();return i in u||i in R},set(e,i,u){let m=T(!0);return m[i]=u,!0},deleteProperty(e,i){if(!i)return!1;let u=T(!0);return delete u[i],!0},ownKeys(){let e=T(!0);return Object.keys(e)}});function L(e){return e?e!=="false":!1}var M=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var E=M==="test"||L(S.TEST);import{createRandomStringGenerator as P}from"@better-auth/utils/random";var k=e=>P("a-z","A-Z","0-9")(e||32);import{z as Xe}from"zod";import{APIError as et}from"better-call";var A=class extends Error{constructor(i,u){super(i),this.name="BetterAuthError",this.message=i,this.cause=u,this.stack=""}};import{createHash as Me}from"@better-auth/utils/hash";import{xchacha20poly1305 as Pe}from"@noble/ciphers/chacha";import{bytesToHex as _e,hexToBytes as Ce,utf8ToBytes as $e}from"@noble/ciphers/utils";import{managedNonce as Ke}from"@noble/ciphers/webcrypto";import{scryptAsync as Oe}from"@noble/hashes/scrypt";import{getRandomValues as Ie}from"uncrypto";import{hex as Se}from"@better-auth/utils/hex";import{createRandomStringGenerator as V}from"@better-auth/utils/random";var _=V("a-z","0-9","A-Z","-_");var F=["info","success","warn","error","debug"];function C(e,i){return F.indexOf(i)<=F.indexOf(e)}var x={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},$={info:x.fg.blue,success:x.fg.green,warn:x.fg.yellow,error:x.fg.red,debug:x.fg.magenta},j=(e,i)=>{let u=new Date().toISOString();return`${x.dim}${u}${x.reset} ${$[e]}${e.toUpperCase()}${x.reset} ${x.bright}Better Auth${x.reset} ${i}`},U=e=>{let i=e?.disabled!==!0,u=e?.level??"error",m=(f,y,p=[])=>{if(!i||!C(u,f))return;let w=j(f,y);if(!e||typeof e.log!="function"){f==="error"?console.error(w,...p):f==="warn"?console.warn(w,...p):console.log(w,...p);return}e.log(f==="success"?"info":f,w,...p)};return Object.fromEntries(F.map(f=>[f,(...[y,...p])=>m(f,y,p)]))},K=U();var v=e=>{let i=e.plugins?.reduce((a,c)=>{let n=c.schema;if(!n)return a;for(let[t,d]of Object.entries(n))a[t]={fields:{...a[t]?.fields,...d.fields},modelName:d.modelName||t};return a},{}),u=e.rateLimit?.storage==="database",m={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:f,session:y,account:p,...w}=i||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...f?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...y?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...p?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...w,...u?m:{}}};import{z as It}from"zod";import{Kysely as Ut,MssqlDialect as qt}from"kysely";import{MysqlDialect as Lt,PostgresDialect as Mt,SqliteDialect as Et}from"kysely";function D(e,i,u){return u==="update"?e:e==null&&i.defaultValue?typeof i.defaultValue=="function"?i.defaultValue():i.defaultValue:e}var Q=(e,i,u)=>{let m=v(u);function f(a,c){return c==="id"?c:m[a].fields[c].fieldName||c}function y(a){let c=i.schema||e._.fullSchema;if(!c)throw new A("Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.");let n=p(a),t=c[n];if(!t)throw new A(`[# Drizzle Adapter]: The model "${n}" was not found in the schema object. Please pass the schema directly to the adapter options.`);return t}let p=a=>m[a].modelName!==a?m[a].modelName:i.usePlural?`${a}s`:a,w=u?.advanced?.generateId===!1;return{getSchema:y,transformInput(a,c,n){let t=w||n==="update"?{}:{id:u.advanced?.generateId?u.advanced.generateId({model:c}):a.id||k()},d=m[c].fields;for(let o in d){let l=a[o];l===void 0&&!d[o].defaultValue||(t[d[o].fieldName||o]=D(l,d[o],n))}return t},transformOutput(a,c,n=[]){if(!a)return null;let t=a.id||a._id?n.length===0||n.includes("id")?{id:a.id}:{}:{},d=m[c].fields;for(let o in d){if(n.length&&!n.includes(o))continue;let l=d[o];l&&(t[o]=a[l.fieldName||o])}return t},convertWhereClause(a,c){let n=y(c);if(!a)return[];if(a.length===1){let r=a[0];if(!r)return[];let g=f(c,r.field);if(!n[g])throw new A(`The field "${r.field}" does not exist in the schema for the model "${c}". Please update your schema.`);if(r.operator==="in"){if(!Array.isArray(r.value))throw new A(`The value for the field "${r.field}" must be an array when using the "in" operator.`);return[q(n[g],r.value)]}return r.operator==="contains"?[I(n[g],`%${r.value}%`)]:r.operator==="starts_with"?[I(n[g],`${r.value}%`)]:r.operator==="ends_with"?[I(n[g],`%${r.value}`)]:[O(n[g],r.value)]}let t=a.filter(r=>r.connector==="AND"||!r.connector),d=a.filter(r=>r.connector==="OR"),o=z(...t.map(r=>{let g=f(c,r.field);if(r.operator==="in"){if(!Array.isArray(r.value))throw new A(`The value for the field "${r.field}" must be an array when using the "in" operator.`);return q(n[g],r.value)}return O(n[g],r.value)})),l=J(...d.map(r=>{let g=f(c,r.field);return O(n[g],r.value)})),h=[];return t.length&&h.push(o),d.length&&h.push(l),h},withReturning:async(a,c,n)=>{if(i.provider!=="mysql")return(await c.returning())[0];await c;let t=y(p(a));return(await e.select().from(t).where(O(t.id,n.id)))[0]},getField:f,getModelName:p}};function Z(e,i,u){if(!e)throw new A("Drizzle adapter failed to initialize. Schema not found. Please provide a schema object in the adapter options object.");for(let m in u)if(!e[m])throw new A(`The field "${m}" does not exist in the "${i}" schema. Please update your drizzle schema or re-generate using "npx @better-auth/cli generate".`)}var Sr=(e,i)=>u=>{let{transformInput:m,transformOutput:f,convertWhereClause:y,getSchema:p,withReturning:w,getField:a,getModelName:c}=Q(e,i,u);return{id:"drizzle",async create(n){let{model:t,data:d}=n,o=m(d,t,"create"),l=p(t);Z(l,c(t),o);let h=e.insert(l).values(o),r=await w(t,h,o);return f(r,t)},async findOne(n){let{model:t,where:d,select:o}=n,l=p(t),h=y(d,t),r=await e.select().from(l).where(...h);return r.length?f(r[0],t,o):null},async findMany(n){let{model:t,where:d,sortBy:o,limit:l,offset:h}=n,r=p(t),g=d?y(d,t):[],b=o?.direction==="desc"?G:W,N=e.select().from(r).limit(l||100).offset(h||0);return o?.field&&N.orderBy(b(r[a(t,o?.field)])),(await N.where(...g)).map(B=>f(B,t))},async update(n){let{model:t,where:d,update:o}=n,l=p(t),h=y(d,t),r=m(o,t,"update"),g=e.update(l).set(r).where(...h),b=await w(t,g,r);return f(b,t)},async updateMany(n){let{model:t,where:d,update:o}=n,l=p(t),h=y(d,t),r=m(o,t,"update"),b=await e.update(l).set(r).where(...h);return b?b.changes:0},async delete(n){let{model:t,where:d}=n,o=p(t),l=y(d,t);await e.delete(o).where(...l)},async deleteMany(n){let{model:t,where:d}=n,o=p(t),l=y(d,t),r=await e.delete(o).where(...l);return r?r.length:0},options:i}};export{Sr as drizzleAdapter};
