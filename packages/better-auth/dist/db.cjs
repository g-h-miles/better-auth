"use strict";var U=Object.defineProperty;var ie=Object.getOwnPropertyDescriptor;var se=Object.getOwnPropertyNames;var ae=Object.prototype.hasOwnProperty;var i=(e,n)=>U(e,"name",{value:n,configurable:!0});var oe=(e,n)=>{for(var c in n)U(e,c,{get:n[c],enumerable:!0})},de=(e,n,c,d)=>{if(n&&typeof n=="object"||typeof n=="function")for(let f of se(n))!ae.call(e,f)&&f!==c&&U(e,f,{get:()=>n[f],enumerable:!(d=ie(n,f))||d.enumerable});return e};var ue=e=>de(U({},"__esModule",{value:!0}),e);var Me={};oe(Me,{convertFromDB:()=>Se,convertToDB:()=>Ue,createFieldAttribute:()=>Fe,createInternalAdapter:()=>Re,getAdapter:()=>Ne,getAuthTables:()=>k,getMigrations:()=>Pe,getSchema:()=>$,getWithHooks:()=>M,matchType:()=>re,toZodSchema:()=>Oe});module.exports=ue(Me);var V=i((e,n="ms")=>new Date(Date.now()+(n==="sec"?e*1e3:e)),"getDate");var x=require("zod"),le=require("better-call");var $e=x.z.object({id:x.z.string(),providerId:x.z.string(),accountId:x.z.string(),userId:x.z.string(),accessToken:x.z.string().nullish(),refreshToken:x.z.string().nullish(),idToken:x.z.string().nullish(),accessTokenExpiresAt:x.z.date().nullish(),refreshTokenExpiresAt:x.z.date().nullish(),scope:x.z.string().nullish(),password:x.z.string().nullish(),createdAt:x.z.date().default(()=>new Date),updatedAt:x.z.date().default(()=>new Date)}),Ke=x.z.object({id:x.z.string(),email:x.z.string().transform(e=>e.toLowerCase()),emailVerified:x.z.boolean().default(!1),name:x.z.string(),image:x.z.string().nullish(),createdAt:x.z.date().default(()=>new Date),updatedAt:x.z.date().default(()=>new Date)}),He=x.z.object({id:x.z.string(),userId:x.z.string(),expiresAt:x.z.date(),createdAt:x.z.date().default(()=>new Date),updatedAt:x.z.date().default(()=>new Date),token:x.z.string(),ipAddress:x.z.string().nullish(),userAgent:x.z.string().nullish()}),We=x.z.object({id:x.z.string(),value:x.z.string(),createdAt:x.z.date().default(()=>new Date),updatedAt:x.z.date().default(()=>new Date),expiresAt:x.z.date(),identifier:x.z.string()});function H(e,n){let c=n.fields,d={};for(let f in e){let h=c[f];if(!h){d[f]=e[f];continue}h.returned!==!1&&(d[f]=e[f])}return d}i(H,"parseOutputData");function W(e,n){let c={...n==="user"?e.user?.additionalFields:{},...n==="session"?e.session?.additionalFields:{}};for(let d of e.plugins||[])d.schema&&d.schema[n]&&(c={...c,...d.schema[n].fields});return c}i(W,"getAllFields");function P(e,n){let c=W(e,"user");return H(n,{fields:c})}i(P,"parseUserOutput");function S(e,n){let c=W(e,"session");return H(n,{fields:c})}i(S,"parseSessionOutput");function M(e,n){let c=n.hooks;async function d(l,g,m){let t=l;for(let u of c||[]){let o=u[g]?.create?.before;if(o){let s=await o(l);if(s===!1)return null;typeof s=="object"&&"data"in s&&(t=s.data)}}let r=m?await m.fn(t):null,a=!m||m.executeMainFn?await e.create({model:g,data:t}):r;for(let u of c||[]){let o=u[g]?.create?.after;o&&await o(a)}return a}i(d,"createWithHooks");async function f(l,g,m,t){let r=l;for(let o of c||[]){let s=o[m]?.update?.before;if(s){let p=await s(l);if(p===!1)return null;r=typeof p=="object"?p.data:p}}let a=t?await t.fn(r):null,u=!t||t.executeMainFn?await e.update({model:m,update:r,where:g}):a;for(let o of c||[]){let s=o[m]?.update?.after;s&&await s(u)}return u}i(f,"updateWithHooks");async function h(l,g,m,t){let r=l;for(let o of c||[]){let s=o[m]?.update?.before;if(s){let p=await s(l);if(p===!1)return null;r=typeof p=="object"?p.data:p}}let a=t?await t.fn(r):null,u=!t||t.executeMainFn?await e.updateMany({model:m,update:r,where:g}):a;for(let o of c||[]){let s=o[m]?.update?.after;s&&await s(u)}return u}return i(h,"updateManyWithHooks"),{createWithHooks:d,updateWithHooks:f,updateManyWithHooks:h}}i(M,"getWithHooks");var q=Object.create(null),D=i(e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?q:globalThis),"_getEnv"),J=new Proxy(q,{get(e,n){return D()[n]??q[n]},has(e,n){let c=D();return n in c||n in q},set(e,n,c){let d=D(!0);return d[n]=c,!0},deleteProperty(e,n){if(!n)return!1;let c=D(!0);return delete c[n],!0},ownKeys(){let e=D(!0);return Object.keys(e)}});function ce(e){return e?e!=="false":!1}i(ce,"toBoolean");var fe=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var z=fe==="test"||ce(J.TEST);function G(e,n){if(n.advanced?.ipAddress?.disableIpTracking)return null;let c="127.0.0.1";if(z)return c;let f=n.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],h=e instanceof Request?e.headers:e;for(let l of f){let g=h.get(l);if(typeof g=="string"){let m=g.split(",")[0].trim();if(m)return m}}return null}i(G,"getIp");function L(e){try{return JSON.parse(e)}catch{return null}}i(L,"safeJSONParse");var Z=require("@better-auth/utils/random");var O=i(e=>(0,Z.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32),"generateId");var we=require("zod"),be=require("better-call");var I=class extends Error{static{i(this,"BetterAuthError")}constructor(n,c){super(n),this.name="BetterAuthError",this.message=n,this.cause=c,this.stack=""}};var Ae=require("@better-auth/utils/hash"),he=require("@noble/ciphers/chacha"),_=require("@noble/ciphers/utils"),xe=require("@noble/ciphers/webcrypto");var pe=require("@noble/hashes/scrypt"),me=require("uncrypto"),ye=require("@better-auth/utils/hex");var Q=require("@better-auth/utils/random"),ge=(0,Q.createRandomStringGenerator)("a-z","0-9","A-Z","-_");var C=["info","success","warn","error","debug"];function ve(e,n){return C.indexOf(n)<=C.indexOf(e)}i(ve,"shouldPublishLog");var v={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},Te={info:v.fg.blue,success:v.fg.green,warn:v.fg.yellow,error:v.fg.red,debug:v.fg.magenta},ke=i((e,n)=>{let c=new Date().toISOString();return`${v.dim}${c}${v.reset} ${Te[e]}${e.toUpperCase()}${v.reset} ${v.bright}Better Auth${v.reset} ${n}`},"formatMessage"),j=i(e=>{let n=e?.disabled!==!0,c=e?.level??"error",d=i((f,h,l=[])=>{if(!n||!ve(c,f))return;let g=ke(f,h);if(!e||typeof e.log!="function"){f==="error"?console.error(g,...l):f==="warn"?console.warn(g,...l):console.log(g,...l);return}e.log(f==="success"?"info":f,g,...l)},"LogFunc");return Object.fromEntries(C.map(f=>[f,(...[h,...l])=>d(f,h,l)]))},"createLogger"),X=j();var Re=i((e,n)=>{let c=n.options,d=c.secondaryStorage,f=c.session?.expiresIn||60*60*24*7,{createWithHooks:h,updateWithHooks:l,updateManyWithHooks:g}=M(e,n),m=i(async t=>{await d?.set(t.token,JSON.stringify({session:t.session,user:t.user}),t.session.expiresAt?Math.floor(((t.session.expiresAt instanceof Date?t.session.expiresAt.getTime():new Date(t.session.expiresAt).getTime())-Date.now())/1e3):f)},"setSecondaryStorage");return{createOAuthUser:i(async(t,r)=>{let a=await h({createdAt:new Date,updatedAt:new Date,...t},"user"),u=await h({...r,userId:a.id||t.id,createdAt:new Date,updatedAt:new Date},"account");return{user:a,account:u}},"createOAuthUser"),createUser:i(async t=>await h({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...t,email:t.email.toLowerCase()},"user"),"createUser"),createAccount:i(async t=>await h({createdAt:new Date,updatedAt:new Date,...t},"account"),"createAccount"),listSessions:i(async t=>{if(d){let a=await d.get(`active-sessions-${t}`);if(!a)return[];let u=L(a)||[],o=Date.now(),s=u.filter(A=>A.expiresAt>o),p=[];for(let A of s){let y=await d.get(A.token);if(y){let b=JSON.parse(y),w=S(n.options,{...b.session,expiresAt:new Date(b.session.expiresAt)});p.push(w)}}return p}return await e.findMany({model:"session",where:[{field:"userId",value:t}]})},"listSessions"),listUsers:i(async(t,r,a,u)=>await e.findMany({model:"user",limit:t,offset:r,sortBy:a,where:u}),"listUsers"),deleteUser:i(async t=>{await e.deleteMany({model:"session",where:[{field:"userId",value:t}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:t}]}),await e.delete({model:"user",where:[{field:"id",value:t}]})},"deleteUser"),createSession:i(async(t,r,a,u)=>{let o=r instanceof Request?r.headers:r,{id:s,...p}=u||{},A={ipAddress:r&&G(r,n.options)||"",userAgent:o?.get("user-agent")||"",...p,expiresAt:a?V(60*60*24,"sec"):V(f,"sec"),userId:t,token:O(32),createdAt:new Date,updatedAt:new Date};return await h(A,"session",d?{fn:i(async()=>{let b=await e.findOne({model:"user",where:[{field:"id",value:t}]});d.set(A.token,JSON.stringify({session:A,user:b}),f);let w=await d.get(`active-sessions-${t}`),T=[],K=Date.now();return w&&(T=L(w)||[],T=T.filter(ne=>ne.expiresAt>K)),T.push({token:A.token,expiresAt:K+f*1e3}),await d.set(`active-sessions-${t}`,JSON.stringify(T),f),A},"fn"),executeMainFn:c.session?.storeSessionInDatabase}:void 0)},"createSession"),findSession:i(async t=>{if(d){let s=await d.get(t);if(s){let p=JSON.parse(s),A=S(n.options,{...p.session,expiresAt:new Date(p.session.expiresAt),createdAt:new Date(p.session.createdAt),updatedAt:new Date(p.session.updatedAt)}),y=P(n.options,{...p.user,createdAt:new Date(p.user.createdAt),updatedAt:new Date(p.user.updatedAt)});return{session:A,user:y}}}let r=await e.findOne({model:"session",where:[{value:t,field:"token"}]});if(!r)return null;let a=await e.findOne({model:"user",where:[{value:r.userId,field:"id"}]});if(!a)return null;let u=S(n.options,r),o=P(n.options,a);return d&&await m({token:t,user:o,session:u}),{session:u,user:o}},"findSession"),findSessions:i(async t=>{if(d){let o=[];for(let s of t){let p=await d.get(s);if(p){let A=JSON.parse(p),y={session:{...A.session,expiresAt:new Date(A.session.expiresAt)},user:{...A.user,createdAt:new Date(A.user.createdAt),updatedAt:new Date(A.user.updatedAt)}};o.push(y)}}return o}let r=await e.findMany({model:"session",where:[{field:"token",value:t,operator:"in"}]}),a=r.map(o=>o.userId);if(!a.length)return[];let u=await e.findMany({model:"user",where:[{field:"id",value:a,operator:"in"}]});return r.map(o=>{let s=u.find(p=>p.id===o.userId);return s?{session:o,user:s}:null})},"findSessions"),updateSession:i(async(t,r)=>await l(r,[{field:"token",value:t}],"session",d?{async fn(u){let o=await d.get(t),s=null;if(o){let p=JSON.parse(o);return s={...p.session,...u},await m({token:t,user:p.user,session:s}),s}else return null},executeMainFn:c.session?.storeSessionInDatabase}:void 0),"updateSession"),deleteSession:i(async t=>{if(d){await d.delete(t),c.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:t}]});return}await e.delete({model:"session",where:[{field:"token",value:t}]})},"deleteSession"),deleteAccounts:i(async t=>{await e.deleteMany({model:"account",where:[{field:"userId",value:t}]})},"deleteAccounts"),deleteSessions:i(async t=>{if(d){if(typeof t=="string"){let r=await d.get(`active-sessions-${t}`),a=r?L(r):[];if(!a)return;for(let u of a)await d.delete(u.token)}else for(let r of t)await d.get(r)&&await d.delete(r);c.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]})},"deleteSessions"),findOAuthUser:i(async(t,r,a)=>{let u=null;if(u=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]}),!u){let s=await e.findOne({model:"account",where:[{value:r,field:"accountId"},{value:a,field:"providerId"}]});return s?(u=await e.findOne({model:"user",where:[{value:s.userId,field:"id"}]}),{user:u,accounts:[s]}):null}let o=await e.findMany({model:"account",where:[{value:u.id,field:"userId"}]});return{user:u,accounts:o||[]}},"findOAuthUser"),findUserByEmail:i(async(t,r)=>{let a=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]});if(!a)return null;if(r?.includeAccounts){let u=await e.findMany({model:"account",where:[{value:a.id,field:"userId"}]});return{user:a,accounts:u}}return{user:a,accounts:[]}},"findUserByEmail"),findUserById:i(async t=>await e.findOne({model:"user",where:[{field:"id",value:t}]}),"findUserById"),linkAccount:i(async t=>await h({...t,createdAt:new Date,updatedAt:new Date},"account"),"linkAccount"),updateUser:i(async(t,r)=>await l(r,[{field:"id",value:t}],"user"),"updateUser"),updateUserByEmail:i(async(t,r)=>await l(r,[{field:"email",value:t}],"user"),"updateUserByEmail"),updatePassword:i(async(t,r)=>{await g({password:r},[{field:"userId",value:t},{field:"providerId",value:"credential"}],"account")},"updatePassword"),findAccounts:i(async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),"findAccounts"),findAccount:i(async t=>await e.findOne({model:"account",where:[{field:"accountId",value:t}]}),"findAccount"),findAccountByUserId:i(async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),"findAccountByUserId"),updateAccount:i(async(t,r)=>await l(r,[{field:"id",value:t}],"account"),"updateAccount"),createVerificationValue:i(async t=>await h({createdAt:new Date,updatedAt:new Date,...t},"verification"),"createVerificationValue"),findVerificationValue:i(async t=>(await e.findMany({model:"verification",where:[{field:"identifier",value:t}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],"findVerificationValue"),deleteVerificationValue:i(async t=>{await e.delete({model:"verification",where:[{field:"id",value:t}]})},"deleteVerificationValue"),deleteVerificationByIdentifier:i(async t=>{await e.delete({model:"verification",where:[{field:"identifier",value:t}]})},"deleteVerificationByIdentifier"),updateVerificationValue:i(async(t,r)=>await l(r,[{field:"id",value:t}],"verification"),"updateVerificationValue")}},"createInternalAdapter");var Fe=i((e,n)=>({type:e,...n}),"createFieldAttribute");var k=i(e=>{let n=e.plugins?.reduce((m,t)=>{let r=t.schema;if(!r)return m;for(let[a,u]of Object.entries(r))m[a]={fields:{...m[a]?.fields,...u.fields},modelName:u.modelName||a};return m},{}),c=e.rateLimit?.storage==="database",d={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:f,session:h,account:l,...g}=n||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:i(()=>!1,"defaultValue"),required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:i(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:i(()=>new Date,"defaultValue"),required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...f?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...h?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...l?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:i(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:i(()=>new Date,"defaultValue"),fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...g,...c?d:{}}},"getAuthTables");var F=require("zod");function Oe(e){return F.z.object({...Object.keys(e).reduce((c,d)=>{let f=e[d];if(!f)return c;if(f.type==="string[]"||f.type==="number[]")return{...c,[d]:F.z.array(f.type==="string[]"?F.z.string():F.z.number())};if(Array.isArray(f.type))return{...c,[d]:F.z.any()};let h=F.z[f.type]();return f?.required===!1&&(h=h.optional()),f?.returned===!1?c:{...c,[d]:h}},{})})}i(Oe,"toZodSchema");var N=require("kysely"),R=require("kysely");function Y(e){if(!e)return null;if("dialect"in e)return Y(e.dialect);if("createDriver"in e){if(e instanceof R.SqliteDialect)return"sqlite";if(e instanceof R.MysqlDialect)return"mysql";if(e instanceof R.PostgresDialect)return"postgres";if(e instanceof N.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}i(Y,"getDatabaseType");var B=i(async e=>{let n=e.database;if(!n)return{kysely:null,databaseType:null};if("db"in n)return{kysely:n.db,databaseType:n.type};if("dialect"in n)return{kysely:new N.Kysely({dialect:n.dialect}),databaseType:n.type};let c,d=Y(n);return"createDriver"in n&&(c=n),"aggregate"in n&&(c=new R.SqliteDialect({database:n})),"getConnection"in n&&(c=new R.MysqlDialect(n)),"connect"in n&&(c=new R.PostgresDialect({pool:n})),{kysely:c?new N.Kysely({dialect:c}):null,databaseType:d}},"createKyselyAdapter");function E(e,n,c){return c==="update"?e:e==null&&n.defaultValue?typeof n.defaultValue=="function"?n.defaultValue():n.defaultValue:e}i(E,"withApplyDefault");var De=i((e,n,c)=>{let d=k(n);function f(t,r){if(r==="id")return r;let a=d[t].fields[r];return a||console.log("Field not found",t,r),a.fieldName||r}i(f,"getField");function h(t,r,a){let{type:u="sqlite"}=c||{},o=d[r].fields[a];return o.type==="boolean"&&u==="sqlite"&&t!==null&&t!==void 0?t?1:0:o.type==="date"&&t&&t instanceof Date&&u==="sqlite"?t.toISOString():t}i(h,"transformValueToDB");function l(t,r,a){let{type:u="sqlite"}=c||{},o=d[r].fields[a];return o.type==="boolean"&&u==="sqlite"&&t!==null?t===1:o.type==="date"&&t?new Date(t):t}i(l,"transformValueFromDB");function g(t){return d[t].modelName}i(g,"getModelName");let m=n?.advanced?.generateId===!1;return{transformInput(t,r,a){let u=m||a==="update"?{}:{id:n.advanced?.generateId?n.advanced.generateId({model:r}):t.id||O()},o=d[r].fields;for(let s in o){let p=t[s];u[o[s].fieldName||s]=E(h(p,r,s),o[s],a)}return u},transformOutput(t,r,a=[]){if(!t)return null;let u=t.id?a.length===0||a.includes("id")?{id:t.id}:{}:{},o=d[r].fields;for(let s in o){if(a.length&&!a.includes(s))continue;let p=o[s];p&&(u[s]=l(t[p.fieldName||s],r,s))}return u},convertWhereClause(t,r){if(!r)return{and:null,or:null};let a={and:[],or:[]};return r.forEach(u=>{let{field:o,value:s,operator:p="=",connector:A="AND"}=u,y=f(t,o),b=i(w=>p.toLowerCase()==="in"?w(y,"in",Array.isArray(s)?s:[s]):p==="contains"?w(y,"like",`%${s}%`):p==="starts_with"?w(y,"like",`${s}%`):p==="ends_with"?w(y,"like",`%${s}`):p==="eq"?w(y,"=",s):p==="ne"?w(y,"<>",s):p==="gt"?w(y,">",s):p==="gte"?w(y,">=",s):p==="lt"?w(y,"<",s):p==="lte"?w(y,"<=",s):w(y,p,s),"expr");A==="OR"?a.or.push(b):a.and.push(b)}),{and:a.and.length?a.and:null,or:a.or.length?a.or:null}},async withReturning(t,r,a,u){let o;if(c?.type!=="mysql")o=await r.returningAll().executeTakeFirst();else{await r.execute();let s=t.id?"id":u[0].field?u[0].field:"id",p=t[s]||u[0].value;o=await e.selectFrom(g(a)).selectAll().where(f(a,s),"=",p).executeTakeFirst()}return o},getModelName:g,getField:f}},"createTransform"),ee=i((e,n)=>c=>{let{transformInput:d,withReturning:f,transformOutput:h,convertWhereClause:l,getModelName:g,getField:m}=De(e,c,n);return{id:"kysely",async create(t){let{model:r,data:a,select:u}=t,o=d(a,r,"create"),s=e.insertInto(g(r)).values(o);return h(await f(o,s,r,[]),r,u)},async findOne(t){let{model:r,where:a,select:u}=t,{and:o,or:s}=l(r,a),p=e.selectFrom(g(r)).selectAll();o&&(p=p.where(y=>y.and(o.map(b=>b(y))))),s&&(p=p.where(y=>y.or(s.map(b=>b(y)))));let A=await p.executeTakeFirst();return A?h(A,r,u):null},async findMany(t){let{model:r,where:a,limit:u,offset:o,sortBy:s}=t,{and:p,or:A}=l(r,a),y=e.selectFrom(g(r));p&&(y=y.where(w=>w.and(p.map(T=>T(w))))),A&&(y=y.where(w=>w.or(A.map(T=>T(w))))),y=y.limit(u||100),o&&(y=y.offset(o)),s&&(y=y.orderBy(m(r,s.field),s.direction));let b=await y.selectAll().execute();return b?b.map(w=>h(w,r)):[]},async update(t){let{model:r,where:a,update:u}=t,{and:o,or:s}=l(r,a),p=d(u,r,"update"),A=e.updateTable(g(r)).set(p);return o&&(A=A.where(b=>b.and(o.map(w=>w(b))))),s&&(A=A.where(b=>b.or(s.map(w=>w(b))))),await h(await f(p,A,r,a),r)},async updateMany(t){let{model:r,where:a,update:u}=t,{and:o,or:s}=l(r,a),p=d(u,r,"update"),A=e.updateTable(g(r)).set(p);return o&&(A=A.where(b=>b.and(o.map(w=>w(b))))),s&&(A=A.where(b=>b.or(s.map(w=>w(b))))),(await A.execute()).length},async delete(t){let{model:r,where:a}=t,{and:u,or:o}=l(r,a),s=e.deleteFrom(g(r));u&&(s=s.where(p=>p.and(u.map(A=>A(p))))),o&&(s=s.where(p=>p.or(o.map(A=>A(p))))),await s.execute()},async deleteMany(t){let{model:r,where:a}=t,{and:u,or:o}=l(r,a),s=e.deleteFrom(g(r));return u&&(s=s.where(p=>p.and(u.map(A=>A(p))))),o&&(s=s.where(p=>p.or(o.map(A=>A(p))))),(await s.execute()).length},options:n}},"kyselyAdapter");var Ie=i(e=>{let n=k(e);function c(d,f){return f==="id"?f:n[d].fields[f].fieldName||f}return i(c,"getField"),{transformInput(d,f,h){let l=h==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:f}):d.id||O()},g=n[f].fields;for(let m in g){let t=d[m];t===void 0&&!g[m].defaultValue||(l[g[m].fieldName||m]=E(t,g[m],h))}return l},transformOutput(d,f,h=[]){if(!d)return null;let l=d.id||d._id?h.length===0||h.includes("id")?{id:d.id}:{}:{},g=n[f].fields;for(let m in g){if(h.length&&!h.includes(m))continue;let t=g[m];t&&(l[m]=d[t.fieldName||m])}return l},convertWhereClause(d,f,h){return f.filter(l=>d.every(g=>{let{field:m,value:t,operator:r}=g,a=c(h,m);if(r==="in"){if(!Array.isArray(t))throw new Error("Value must be an array");return t.includes(l[a])}else return r==="contains"?l[a].includes(t):r==="starts_with"?l[a].startsWith(t):r==="ends_with"?l[a].endsWith(t):l[a]===t}))},getField:c}},"createTransform"),te=i(e=>n=>{let{transformInput:c,transformOutput:d,convertWhereClause:f,getField:h}=Ie(n);return{id:"memory",create:i(async({model:l,data:g})=>{let m=c(g,l,"create");return e[l].push(m),d(m,l)},"create"),findOne:i(async({model:l,where:g,select:m})=>{let t=e[l],a=f(g,t,l)[0]||null;return d(a,l,m)},"findOne"),findMany:i(async({model:l,where:g,sortBy:m,limit:t,offset:r})=>{let a=e[l];return g&&(a=f(g,a,l)),m&&(a=a.sort((u,o)=>{let s=h(l,m.field);return m.direction==="asc"?u[s]>o[s]?1:-1:u[s]<o[s]?1:-1})),r!==void 0&&(a=a.slice(r)),t!==void 0&&(a=a.slice(0,t)),a.map(u=>d(u,l))},"findMany"),update:i(async({model:l,where:g,update:m})=>{let t=e[l],r=f(g,t,l);return r.forEach(a=>{Object.assign(a,c(m,l,"update"))}),d(r[0],l)},"update"),delete:i(async({model:l,where:g})=>{let m=e[l],t=f(g,m,l);e[l]=m.filter(r=>!t.includes(r))},"delete"),deleteMany:i(async({model:l,where:g})=>{let m=e[l],t=f(g,m,l),r=0;return e[l]=m.filter(a=>t.includes(a)?(r++,!1):!t.includes(a)),r},"deleteMany"),updateMany(l){let{model:g,where:m,update:t}=l,r=e[g],a=f(m,r,g);return a.forEach(u=>{Object.assign(u,t)}),a[0]||null}}},"memoryAdapter");async function Ne(e){if(!e.database){let d=k(e),f=Object.keys(d).reduce((h,l)=>(h[l]=[],h),{});return X.warn("No database configuration provided. Using memory adapter in development"),te(f)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:n,databaseType:c}=await B(e);if(!n)throw new I("Failed to initialize database adapter");return ee(n,{type:c||"sqlite"})(e)}i(Ne,"getAdapter");function Ue(e,n){let c=n.id?{id:n.id}:{};for(let d in e){let f=e[d],h=n[d];h!==void 0&&(c[f.fieldName||d]=h)}return c}i(Ue,"convertToDB");function Se(e,n){if(!n)return null;let c={id:n.id};for(let[d,f]of Object.entries(e))c[d]=n[f.fieldName||d];return c}i(Se,"convertFromDB");function $(e){let n=k(e),c={};for(let d in n){let f=n[d],h=f.fields,l={};if(Object.entries(h).forEach(([g,m])=>{if(l[m.fieldName||g]=m,m.references){let t=n[m.references.model];t&&(l[m.fieldName||g].references={model:t.modelName,field:m.references.field})}}),c[f.modelName]){c[f.modelName].fields={...c[f.modelName].fields,...l};continue}c[f.modelName]={fields:l,order:f.order||1/0}}return c}i($,"getSchema");var qe={string:["character varying","text"],number:["int4","integer","bigint","smallint","numeric","real","double precision"],boolean:["bool","boolean"],date:["timestamp","date"]},Le={string:["varchar","text"],number:["integer","int","bigint","smallint","decimal","float","double"],boolean:["boolean","tinyint"],date:["timestamp","datetime","date"]},Be={string:["TEXT"],number:["INTEGER","REAL"],boolean:["INTEGER","BOOLEAN"],date:["DATE","INTEGER"]},Ee={string:["nvarchar","varchar"],number:["int","bigint","smallint","decimal","float","double"],boolean:["bit","boolean"],date:["datetime","date"]},Ve={postgres:qe,mysql:Le,sqlite:Be,mssql:Ee};function re(e,n,c){if(n==="string[]"||n==="number[]")return e.toLowerCase().includes("json");let d=Ve[c];return(Array.isArray(n)?d.string.map(l=>l.toLowerCase()):d[n].map(l=>l.toLowerCase())).includes(e.toLowerCase())}i(re,"matchType");async function Pe(e){let n=$(e),c=j(e.logger),{kysely:d,databaseType:f}=await B(e);f||(c.warn("Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this."),f="sqlite"),d||(c.error("Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter."),process.exit(1));let h=await d.introspection.getTables(),l=[],g=[];for(let[u,o]of Object.entries(n)){let s=h.find(A=>A.name===u);if(!s){let A=l.findIndex(w=>w.table===u),y={table:u,fields:o.fields,order:o.order||1/0},b=l.findIndex(w=>(w.order||1/0)>y.order);b===-1?A===-1?l.push(y):l[A].fields={...l[A].fields,...o.fields}:l.splice(b,0,y);continue}let p={};for(let[A,y]of Object.entries(o.fields)){let b=s.columns.find(w=>w.name===A);if(!b){p[A]=y;continue}re(b.dataType,y.type,f)||c.warn(`Field ${A} in table ${u} has a different type in the database. Expected ${y.type} but got ${b.dataType}.`)}Object.keys(p).length>0&&g.push({table:u,fields:p,order:o.order||1/0})}let m=[];function t(u){let o=u.type,s={string:{sqlite:"text",postgres:"text",mysql:u.unique?"varchar(255)":u.references?"varchar(36)":"text",mssql:"text"},boolean:{sqlite:"integer",postgres:"boolean",mysql:"boolean",mssql:"boolean"},number:{sqlite:"integer",postgres:"integer",mysql:"integer",mssql:"integer"},date:{sqlite:"date",postgres:"timestamp",mysql:"datetime",mssql:"datetime"}};return f==="sqlite"&&(o==="string[]"||o==="number[]")?"text":o==="string[]"||o==="number[]"?"jsonb":Array.isArray(o)?"text":s[o][f||"sqlite"]}if(i(t,"getType"),g.length)for(let u of g)for(let[o,s]of Object.entries(u.fields)){let p=t(s),A=d.schema.alterTable(u.table).addColumn(o,p,y=>(y=s.required!==!1?y.notNull():y,s.references&&(y=y.references(`${s.references.model}.${s.references.field}`)),s.unique&&(y=y.unique()),y));m.push(A)}if(l.length)for(let u of l){let o=d.schema.createTable(u.table).addColumn("id",f==="mysql"?"varchar(36)":"text",s=>s.primaryKey().notNull());for(let[s,p]of Object.entries(u.fields)){let A=t(p);o=o.addColumn(s,A,y=>(y=p.required!==!1?y.notNull():y,p.references&&(y=y.references(`${p.references.model}.${p.references.field}`)),p.unique&&(y=y.unique()),y))}m.push(o)}async function r(){for(let u of m)await u.execute()}i(r,"runMigrations");async function a(){return m.map(o=>o.compile().sql).join(`;

`)}return i(a,"compileMigrations"),{toBeCreated:l,toBeAdded:g,runMigrations:r,compileMigrations:a}}i(Pe,"getMigrations");0&&(module.exports={convertFromDB,convertToDB,createFieldAttribute,createInternalAdapter,getAdapter,getAuthTables,getMigrations,getSchema,getWithHooks,matchType,toZodSchema});
