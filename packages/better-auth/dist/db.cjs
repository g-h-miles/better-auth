"use strict";var B=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var ie=Object.getOwnPropertyNames;var se=Object.prototype.hasOwnProperty;var ae=(e,n)=>{for(var l in n)B(e,l,{get:n[l],enumerable:!0})},oe=(e,n,l,o)=>{if(n&&typeof n=="object"||typeof n=="function")for(let c of ie(n))!se.call(e,c)&&c!==l&&B(e,c,{get:()=>n[c],enumerable:!(o=ne(n,c))||o.enumerable});return e};var de=e=>oe(B({},"__esModule",{value:!0}),e);var Pe={};ae(Pe,{convertFromDB:()=>Ue,convertToDB:()=>Ne,createFieldAttribute:()=>Re,createInternalAdapter:()=>ke,getAdapter:()=>Ie,getAuthTables:()=>T,getMigrations:()=>Ve,getSchema:()=>j,getWithHooks:()=>P,matchType:()=>te,toZodSchema:()=>Fe});module.exports=de(Pe);var E=(e,n="ms")=>new Date(Date.now()+(n==="sec"?e*1e3:e));var h=require("zod"),ue=require("better-call"),Ce=h.z.object({id:h.z.string(),providerId:h.z.string(),accountId:h.z.string(),userId:h.z.string(),accessToken:h.z.string().nullish(),refreshToken:h.z.string().nullish(),idToken:h.z.string().nullish(),accessTokenExpiresAt:h.z.date().nullish(),refreshTokenExpiresAt:h.z.date().nullish(),scope:h.z.string().nullish(),password:h.z.string().nullish(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date)}),je=h.z.object({id:h.z.string(),email:h.z.string().transform(e=>e.toLowerCase()),emailVerified:h.z.boolean().default(!1),name:h.z.string(),image:h.z.string().nullish(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date)}),$e=h.z.object({id:h.z.string(),userId:h.z.string(),expiresAt:h.z.date(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date),token:h.z.string(),ipAddress:h.z.string().nullish(),userAgent:h.z.string().nullish()}),Ke=h.z.object({id:h.z.string(),value:h.z.string(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date),expiresAt:h.z.date(),identifier:h.z.string()});function K(e,n){let l=n.fields,o={};for(let c in e){let A=l[c];if(!A){o[c]=e[c];continue}A.returned!==!1&&(o[c]=e[c])}return o}function H(e,n){let l={...n==="user"?e.user?.additionalFields:{},...n==="session"?e.session?.additionalFields:{}};for(let o of e.plugins||[])o.schema&&o.schema[n]&&(l={...l,...o.schema[n].fields});return l}function V(e,n){let l=H(e,"user");return K(n,{fields:l})}function N(e,n){let l=H(e,"session");return K(n,{fields:l})}function P(e,n){let l=n.hooks;async function o(u,y,p){let t=u;for(let d of l||[]){let a=d[y]?.create?.before;if(a){let i=await a(u);if(i===!1)return null;typeof i=="object"&&"data"in i&&(t=i.data)}}let r=p?await p.fn(t):null,s=!p||p.executeMainFn?await e.create({model:y,data:t}):r;for(let d of l||[]){let a=d[y]?.create?.after;a&&await a(s)}return s}async function c(u,y,p,t){let r=u;for(let a of l||[]){let i=a[p]?.update?.before;if(i){let f=await i(u);if(f===!1)return null;r=typeof f=="object"?f.data:f}}let s=t?await t.fn(r):null,d=!t||t.executeMainFn?await e.update({model:p,update:r,where:y}):s;for(let a of l||[]){let i=a[p]?.update?.after;i&&await i(d)}return d}async function A(u,y,p,t){let r=u;for(let a of l||[]){let i=a[p]?.update?.before;if(i){let f=await i(u);if(f===!1)return null;r=typeof f=="object"?f.data:f}}let s=t?await t.fn(r):null,d=!t||t.executeMainFn?await e.updateMany({model:p,update:r,where:y}):s;for(let a of l||[]){let i=a[p]?.update?.after;i&&await i(d)}return d}return{createWithHooks:o,updateWithHooks:c,updateManyWithHooks:A}}var U=Object.create(null),O=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?U:globalThis),W=new Proxy(U,{get(e,n){return O()[n]??U[n]},has(e,n){let l=O();return n in l||n in U},set(e,n,l){let o=O(!0);return o[n]=l,!0},deleteProperty(e,n){if(!n)return!1;let l=O(!0);return delete l[n],!0},ownKeys(){let e=O(!0);return Object.keys(e)}});function le(e){return e?e!=="false":!1}var ce=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var J=ce==="test"||le(W.TEST);function z(e,n){if(n.advanced?.ipAddress?.disableIpTracking)return null;let l="127.0.0.1";if(J)return l;let c=n.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],A=e instanceof Request?e.headers:e;for(let u of c){let y=A.get(u);if(typeof y=="string"){let p=y.split(",")[0].trim();if(p)return p}}return null}function S(e){try{return JSON.parse(e)}catch{return null}}var G=require("@better-auth/utils/random"),F=e=>(0,G.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32);var xe=require("zod"),we=require("better-call");var D=class extends Error{constructor(n,l){super(n),this.name="BetterAuthError",this.message=n,this.cause=l,this.stack=""}};var ge=require("@better-auth/utils/hash"),Ae=require("@noble/ciphers/chacha"),M=require("@noble/ciphers/utils"),he=require("@noble/ciphers/webcrypto");var fe=require("@noble/hashes/scrypt"),pe=require("uncrypto"),me=require("@better-auth/utils/hex");var Z=require("@better-auth/utils/random"),ye=(0,Z.createRandomStringGenerator)("a-z","0-9","A-Z","-_");var _=["info","success","warn","error","debug"];function be(e,n){return _.indexOf(n)<=_.indexOf(e)}var b={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},ve={info:b.fg.blue,success:b.fg.green,warn:b.fg.yellow,error:b.fg.red,debug:b.fg.magenta},Te=(e,n)=>{let l=new Date().toISOString();return`${b.dim}${l}${b.reset} ${ve[e]}${e.toUpperCase()}${b.reset} ${b.bright}Better Auth${b.reset} ${n}`},C=e=>{let n=e?.disabled!==!0,l=e?.level??"error",o=(c,A,u=[])=>{if(!n||!be(l,c))return;let y=Te(c,A);if(!e||typeof e.log!="function"){c==="error"?console.error(y,...u):c==="warn"?console.warn(y,...u):console.log(y,...u);return}e.log(c==="success"?"info":c,y,...u)};return Object.fromEntries(_.map(c=>[c,(...[A,...u])=>o(c,A,u)]))},Q=C();var ke=(e,n)=>{let l=n.options,o=l.secondaryStorage,c=l.session?.expiresIn||60*60*24*7,{createWithHooks:A,updateWithHooks:u,updateManyWithHooks:y}=P(e,n),p=async t=>{await o?.set(t.token,JSON.stringify({session:t.session,user:t.user}),t.session.expiresAt?Math.floor(((t.session.expiresAt instanceof Date?t.session.expiresAt.getTime():new Date(t.session.expiresAt).getTime())-Date.now())/1e3):c)};return{createOAuthUser:async(t,r)=>{let s=await A({createdAt:new Date,updatedAt:new Date,...t},"user"),d=await A({...r,userId:s.id||t.id,createdAt:new Date,updatedAt:new Date},"account");return{user:s,account:d}},createUser:async t=>await A({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...t,email:t.email.toLowerCase()},"user"),createAccount:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"account"),listSessions:async t=>{if(o){let s=await o.get(`active-sessions-${t}`);if(!s)return[];let d=S(s)||[],a=Date.now(),i=d.filter(g=>g.expiresAt>a),f=[];for(let g of i){let m=await o.get(g.token);if(m){let w=JSON.parse(m),x=N(n.options,{...w.session,expiresAt:new Date(w.session.expiresAt)});f.push(x)}}return f}return await e.findMany({model:"session",where:[{field:"userId",value:t}]})},listUsers:async(t,r,s,d)=>await e.findMany({model:"user",limit:t,offset:r,sortBy:s,where:d}),deleteUser:async t=>{await e.deleteMany({model:"session",where:[{field:"userId",value:t}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:t}]}),await e.delete({model:"user",where:[{field:"id",value:t}]})},createSession:async(t,r,s,d)=>{let a=r instanceof Request?r.headers:r,{id:i,...f}=d||{},g={ipAddress:r&&z(r,n.options)||"",userAgent:a?.get("user-agent")||"",...f,expiresAt:s?E(60*60*24,"sec"):E(c,"sec"),userId:t,token:F(32),createdAt:new Date,updatedAt:new Date};return await A(g,"session",o?{fn:async()=>{let w=await e.findOne({model:"user",where:[{field:"id",value:t}]});o.set(g.token,JSON.stringify({session:g,user:w}),c);let x=await o.get(`active-sessions-${t}`),v=[],$=Date.now();return x&&(v=S(x)||[],v=v.filter(re=>re.expiresAt>$)),v.push({token:g.token,expiresAt:$+c*1e3}),await o.set(`active-sessions-${t}`,JSON.stringify(v),c),g},executeMainFn:l.session?.storeSessionInDatabase}:void 0)},findSession:async t=>{if(o){let i=await o.get(t);if(i){let f=JSON.parse(i),g=N(n.options,{...f.session,expiresAt:new Date(f.session.expiresAt),createdAt:new Date(f.session.createdAt),updatedAt:new Date(f.session.updatedAt)}),m=V(n.options,{...f.user,createdAt:new Date(f.user.createdAt),updatedAt:new Date(f.user.updatedAt)});return{session:g,user:m}}}let r=await e.findOne({model:"session",where:[{value:t,field:"token"}]});if(!r)return null;let s=await e.findOne({model:"user",where:[{value:r.userId,field:"id"}]});if(!s)return null;let d=N(n.options,r),a=V(n.options,s);return o&&await p({token:t,user:a,session:d}),{session:d,user:a}},findSessions:async t=>{if(o){let a=[];for(let i of t){let f=await o.get(i);if(f){let g=JSON.parse(f),m={session:{...g.session,expiresAt:new Date(g.session.expiresAt)},user:{...g.user,createdAt:new Date(g.user.createdAt),updatedAt:new Date(g.user.updatedAt)}};a.push(m)}}return a}let r=await e.findMany({model:"session",where:[{field:"token",value:t,operator:"in"}]}),s=r.map(a=>a.userId);if(!s.length)return[];let d=await e.findMany({model:"user",where:[{field:"id",value:s,operator:"in"}]});return r.map(a=>{let i=d.find(f=>f.id===a.userId);return i?{session:a,user:i}:null})},updateSession:async(t,r)=>await u(r,[{field:"token",value:t}],"session",o?{async fn(d){let a=await o.get(t),i=null;if(a){let f=JSON.parse(a);return i={...f.session,...d},await p({token:t,user:f.user,session:i}),i}else return null},executeMainFn:l.session?.storeSessionInDatabase}:void 0),deleteSession:async t=>{if(o){await o.delete(t),l.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:t}]});return}await e.delete({model:"session",where:[{field:"token",value:t}]})},deleteAccounts:async t=>{await e.deleteMany({model:"account",where:[{field:"userId",value:t}]})},deleteSessions:async t=>{if(o){if(typeof t=="string"){let r=await o.get(`active-sessions-${t}`),s=r?S(r):[];if(!s)return;for(let d of s)await o.delete(d.token)}else for(let r of t)await o.get(r)&&await o.delete(r);l.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]})},findOAuthUser:async(t,r,s)=>{let d=null;if(d=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]}),!d){let i=await e.findOne({model:"account",where:[{value:r,field:"accountId"},{value:s,field:"providerId"}]});return i?(d=await e.findOne({model:"user",where:[{value:i.userId,field:"id"}]}),{user:d,accounts:[i]}):null}let a=await e.findMany({model:"account",where:[{value:d.id,field:"userId"}]});return{user:d,accounts:a||[]}},findUserByEmail:async(t,r)=>{let s=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]});if(!s)return null;if(r?.includeAccounts){let d=await e.findMany({model:"account",where:[{value:s.id,field:"userId"}]});return{user:s,accounts:d}}return{user:s,accounts:[]}},findUserById:async t=>await e.findOne({model:"user",where:[{field:"id",value:t}]}),linkAccount:async t=>await A({...t,createdAt:new Date,updatedAt:new Date},"account"),updateUser:async(t,r)=>await u(r,[{field:"id",value:t}],"user"),updateUserByEmail:async(t,r)=>await u(r,[{field:"email",value:t}],"user"),updatePassword:async(t,r)=>{await y({password:r},[{field:"userId",value:t},{field:"providerId",value:"credential"}],"account")},findAccounts:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),findAccount:async t=>await e.findOne({model:"account",where:[{field:"accountId",value:t}]}),findAccountByUserId:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),updateAccount:async(t,r)=>await u(r,[{field:"id",value:t}],"account"),createVerificationValue:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"verification"),findVerificationValue:async t=>(await e.findMany({model:"verification",where:[{field:"identifier",value:t}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],deleteVerificationValue:async t=>{await e.delete({model:"verification",where:[{field:"id",value:t}]})},deleteVerificationByIdentifier:async t=>{await e.delete({model:"verification",where:[{field:"identifier",value:t}]})},updateVerificationValue:async(t,r)=>await u(r,[{field:"id",value:t}],"verification")}};var Re=(e,n)=>({type:e,...n});var T=e=>{let n=e.plugins?.reduce((p,t)=>{let r=t.schema;if(!r)return p;for(let[s,d]of Object.entries(r))p[s]={fields:{...p[s]?.fields,...d.fields},modelName:d.modelName||s};return p},{}),l=e.rateLimit?.storage==="database",o={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:c,session:A,account:u,...y}=n||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...c?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...A?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...u?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...y,...l?o:{}}};var R=require("zod");function Fe(e){return R.z.object({...Object.keys(e).reduce((l,o)=>{let c=e[o];if(!c)return l;if(c.type==="string[]"||c.type==="number[]")return{...l,[o]:R.z.array(c.type==="string[]"?R.z.string():R.z.number())};if(Array.isArray(c.type))return{...l,[o]:R.z.any()};let A=R.z[c.type]();return c?.required===!1&&(A=A.optional()),c?.returned===!1?l:{...l,[o]:A}},{})})}var I=require("kysely"),k=require("kysely");function X(e){if(!e)return null;if("dialect"in e)return X(e.dialect);if("createDriver"in e){if(e instanceof k.SqliteDialect)return"sqlite";if(e instanceof k.MysqlDialect)return"mysql";if(e instanceof k.PostgresDialect)return"postgres";if(e instanceof I.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var q=async e=>{let n=e.database;if(!n)return{kysely:null,databaseType:null};if("db"in n)return{kysely:n.db,databaseType:n.type};if("dialect"in n)return{kysely:new I.Kysely({dialect:n.dialect}),databaseType:n.type};let l,o=X(n);return"createDriver"in n&&(l=n),"aggregate"in n&&(l=new k.SqliteDialect({database:n})),"getConnection"in n&&(l=new k.MysqlDialect(n)),"connect"in n&&(l=new k.PostgresDialect({pool:n})),{kysely:l?new I.Kysely({dialect:l}):null,databaseType:o}};function L(e,n,l){return l==="update"?e:e==null&&n.defaultValue?typeof n.defaultValue=="function"?n.defaultValue():n.defaultValue:e}var Oe=(e,n,l)=>{let o=T(n);function c(t,r){if(r==="id")return r;let s=o[t].fields[r];return s||console.log("Field not found",t,r),s.fieldName||r}function A(t,r,s){let{type:d="sqlite"}=l||{},a=o[r].fields[s];return a.type==="boolean"&&d==="sqlite"&&t!==null&&t!==void 0?t?1:0:a.type==="date"&&t&&t instanceof Date&&d==="sqlite"?t.toISOString():t}function u(t,r,s){let{type:d="sqlite"}=l||{},a=o[r].fields[s];return a.type==="boolean"&&d==="sqlite"&&t!==null?t===1:a.type==="date"&&t?new Date(t):t}function y(t){return o[t].modelName}let p=n?.advanced?.generateId===!1;return{transformInput(t,r,s){let d=p||s==="update"?{}:{id:n.advanced?.generateId?n.advanced.generateId({model:r}):t.id||F()},a=o[r].fields;for(let i in a){let f=t[i];d[a[i].fieldName||i]=L(A(f,r,i),a[i],s)}return d},transformOutput(t,r,s=[]){if(!t)return null;let d=t.id?s.length===0||s.includes("id")?{id:t.id}:{}:{},a=o[r].fields;for(let i in a){if(s.length&&!s.includes(i))continue;let f=a[i];f&&(d[i]=u(t[f.fieldName||i],r,i))}return d},convertWhereClause(t,r){if(!r)return{and:null,or:null};let s={and:[],or:[]};return r.forEach(d=>{let{field:a,value:i,operator:f="=",connector:g="AND"}=d,m=c(t,a),w=x=>f.toLowerCase()==="in"?x(m,"in",Array.isArray(i)?i:[i]):f==="contains"?x(m,"like",`%${i}%`):f==="starts_with"?x(m,"like",`${i}%`):f==="ends_with"?x(m,"like",`%${i}`):f==="eq"?x(m,"=",i):f==="ne"?x(m,"<>",i):f==="gt"?x(m,">",i):f==="gte"?x(m,">=",i):f==="lt"?x(m,"<",i):f==="lte"?x(m,"<=",i):x(m,f,i);g==="OR"?s.or.push(w):s.and.push(w)}),{and:s.and.length?s.and:null,or:s.or.length?s.or:null}},async withReturning(t,r,s,d){let a;if(l?.type!=="mysql")a=await r.returningAll().executeTakeFirst();else{await r.execute();let i=t.id?"id":d[0].field?d[0].field:"id",f=t[i]||d[0].value;a=await e.selectFrom(y(s)).selectAll().where(c(s,i),"=",f).executeTakeFirst()}return a},getModelName:y,getField:c}},Y=(e,n)=>l=>{let{transformInput:o,withReturning:c,transformOutput:A,convertWhereClause:u,getModelName:y,getField:p}=Oe(e,l,n);return{id:"kysely",async create(t){let{model:r,data:s,select:d}=t,a=o(s,r,"create"),i=e.insertInto(y(r)).values(a);return A(await c(a,i,r,[]),r,d)},async findOne(t){let{model:r,where:s,select:d}=t,{and:a,or:i}=u(r,s),f=e.selectFrom(y(r)).selectAll();a&&(f=f.where(m=>m.and(a.map(w=>w(m))))),i&&(f=f.where(m=>m.or(i.map(w=>w(m)))));let g=await f.executeTakeFirst();return g?A(g,r,d):null},async findMany(t){let{model:r,where:s,limit:d,offset:a,sortBy:i}=t,{and:f,or:g}=u(r,s),m=e.selectFrom(y(r));f&&(m=m.where(x=>x.and(f.map(v=>v(x))))),g&&(m=m.where(x=>x.or(g.map(v=>v(x))))),m=m.limit(d||100),a&&(m=m.offset(a)),i&&(m=m.orderBy(p(r,i.field),i.direction));let w=await m.selectAll().execute();return w?w.map(x=>A(x,r)):[]},async update(t){let{model:r,where:s,update:d}=t,{and:a,or:i}=u(r,s),f=o(d,r,"update"),g=e.updateTable(y(r)).set(f);return a&&(g=g.where(w=>w.and(a.map(x=>x(w))))),i&&(g=g.where(w=>w.or(i.map(x=>x(w))))),await A(await c(f,g,r,s),r)},async updateMany(t){let{model:r,where:s,update:d}=t,{and:a,or:i}=u(r,s),f=o(d,r,"update"),g=e.updateTable(y(r)).set(f);return a&&(g=g.where(w=>w.and(a.map(x=>x(w))))),i&&(g=g.where(w=>w.or(i.map(x=>x(w))))),(await g.execute()).length},async delete(t){let{model:r,where:s}=t,{and:d,or:a}=u(r,s),i=e.deleteFrom(y(r));d&&(i=i.where(f=>f.and(d.map(g=>g(f))))),a&&(i=i.where(f=>f.or(a.map(g=>g(f))))),await i.execute()},async deleteMany(t){let{model:r,where:s}=t,{and:d,or:a}=u(r,s),i=e.deleteFrom(y(r));return d&&(i=i.where(f=>f.and(d.map(g=>g(f))))),a&&(i=i.where(f=>f.or(a.map(g=>g(f))))),(await i.execute()).length},options:n}};var De=e=>{let n=T(e);function l(o,c){return c==="id"?c:n[o].fields[c].fieldName||c}return{transformInput(o,c,A){let u=A==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:c}):o.id||F()},y=n[c].fields;for(let p in y){let t=o[p];t===void 0&&!y[p].defaultValue||(u[y[p].fieldName||p]=L(t,y[p],A))}return u},transformOutput(o,c,A=[]){if(!o)return null;let u=o.id||o._id?A.length===0||A.includes("id")?{id:o.id}:{}:{},y=n[c].fields;for(let p in y){if(A.length&&!A.includes(p))continue;let t=y[p];t&&(u[p]=o[t.fieldName||p])}return u},convertWhereClause(o,c,A){return c.filter(u=>o.every(y=>{let{field:p,value:t,operator:r}=y,s=l(A,p);if(r==="in"){if(!Array.isArray(t))throw new Error("Value must be an array");return t.includes(u[s])}else return r==="contains"?u[s].includes(t):r==="starts_with"?u[s].startsWith(t):r==="ends_with"?u[s].endsWith(t):u[s]===t}))},getField:l}},ee=e=>n=>{let{transformInput:l,transformOutput:o,convertWhereClause:c,getField:A}=De(n);return{id:"memory",create:async({model:u,data:y})=>{let p=l(y,u,"create");return e[u].push(p),o(p,u)},findOne:async({model:u,where:y,select:p})=>{let t=e[u],s=c(y,t,u)[0]||null;return o(s,u,p)},findMany:async({model:u,where:y,sortBy:p,limit:t,offset:r})=>{let s=e[u];return y&&(s=c(y,s,u)),p&&(s=s.sort((d,a)=>{let i=A(u,p.field);return p.direction==="asc"?d[i]>a[i]?1:-1:d[i]<a[i]?1:-1})),r!==void 0&&(s=s.slice(r)),t!==void 0&&(s=s.slice(0,t)),s.map(d=>o(d,u))},update:async({model:u,where:y,update:p})=>{let t=e[u],r=c(y,t,u);return r.forEach(s=>{Object.assign(s,l(p,u,"update"))}),o(r[0],u)},delete:async({model:u,where:y})=>{let p=e[u],t=c(y,p,u);e[u]=p.filter(r=>!t.includes(r))},deleteMany:async({model:u,where:y})=>{let p=e[u],t=c(y,p,u),r=0;return e[u]=p.filter(s=>t.includes(s)?(r++,!1):!t.includes(s)),r},updateMany(u){let{model:y,where:p,update:t}=u,r=e[y],s=c(p,r,y);return s.forEach(d=>{Object.assign(d,t)}),s[0]||null}}};async function Ie(e){if(!e.database){let o=T(e),c=Object.keys(o).reduce((A,u)=>(A[u]=[],A),{});return Q.warn("No database configuration provided. Using memory adapter in development"),ee(c)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:n,databaseType:l}=await q(e);if(!n)throw new D("Failed to initialize database adapter");return Y(n,{type:l||"sqlite"})(e)}function Ne(e,n){let l=n.id?{id:n.id}:{};for(let o in e){let c=e[o],A=n[o];A!==void 0&&(l[c.fieldName||o]=A)}return l}function Ue(e,n){if(!n)return null;let l={id:n.id};for(let[o,c]of Object.entries(e))l[o]=n[c.fieldName||o];return l}function j(e){let n=T(e),l={};for(let o in n){let c=n[o],A=c.fields,u={};if(Object.entries(A).forEach(([y,p])=>{if(u[p.fieldName||y]=p,p.references){let t=n[p.references.model];t&&(u[p.fieldName||y].references={model:t.modelName,field:p.references.field})}}),l[c.modelName]){l[c.modelName].fields={...l[c.modelName].fields,...u};continue}l[c.modelName]={fields:u,order:c.order||1/0}}return l}var Se={string:["character varying","text"],number:["int4","integer","bigint","smallint","numeric","real","double precision"],boolean:["bool","boolean"],date:["timestamp","date"]},qe={string:["varchar","text"],number:["integer","int","bigint","smallint","decimal","float","double"],boolean:["boolean","tinyint"],date:["timestamp","datetime","date"]},Le={string:["TEXT"],number:["INTEGER","REAL"],boolean:["INTEGER","BOOLEAN"],date:["DATE","INTEGER"]},Be={string:["nvarchar","varchar"],number:["int","bigint","smallint","decimal","float","double"],boolean:["bit","boolean"],date:["datetime","date"]},Ee={postgres:Se,mysql:qe,sqlite:Le,mssql:Be};function te(e,n,l){if(n==="string[]"||n==="number[]")return e.toLowerCase().includes("json");let o=Ee[l];return(Array.isArray(n)?o.string.map(u=>u.toLowerCase()):o[n].map(u=>u.toLowerCase())).includes(e.toLowerCase())}async function Ve(e){let n=j(e),l=C(e.logger),{kysely:o,databaseType:c}=await q(e);c||(l.warn("Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this."),c="sqlite"),o||(l.error("Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter."),process.exit(1));let A=await o.introspection.getTables(),u=[],y=[];for(let[d,a]of Object.entries(n)){let i=A.find(g=>g.name===d);if(!i){let g=u.findIndex(x=>x.table===d),m={table:d,fields:a.fields,order:a.order||1/0},w=u.findIndex(x=>(x.order||1/0)>m.order);w===-1?g===-1?u.push(m):u[g].fields={...u[g].fields,...a.fields}:u.splice(w,0,m);continue}let f={};for(let[g,m]of Object.entries(a.fields)){let w=i.columns.find(x=>x.name===g);if(!w){f[g]=m;continue}te(w.dataType,m.type,c)||l.warn(`Field ${g} in table ${d} has a different type in the database. Expected ${m.type} but got ${w.dataType}.`)}Object.keys(f).length>0&&y.push({table:d,fields:f,order:a.order||1/0})}let p=[];function t(d){let a=d.type,i={string:{sqlite:"text",postgres:"text",mysql:d.unique?"varchar(255)":d.references?"varchar(36)":"text",mssql:"text"},boolean:{sqlite:"integer",postgres:"boolean",mysql:"boolean",mssql:"boolean"},number:{sqlite:"integer",postgres:"integer",mysql:"integer",mssql:"integer"},date:{sqlite:"date",postgres:"timestamp",mysql:"datetime",mssql:"datetime"}};return c==="sqlite"&&(a==="string[]"||a==="number[]")?"text":a==="string[]"||a==="number[]"?"jsonb":Array.isArray(a)?"text":i[a][c||"sqlite"]}if(y.length)for(let d of y)for(let[a,i]of Object.entries(d.fields)){let f=t(i),g=o.schema.alterTable(d.table).addColumn(a,f,m=>(m=i.required!==!1?m.notNull():m,i.references&&(m=m.references(`${i.references.model}.${i.references.field}`)),i.unique&&(m=m.unique()),m));p.push(g)}if(u.length)for(let d of u){let a=o.schema.createTable(d.table).addColumn("id",c==="mysql"?"varchar(36)":"text",i=>i.primaryKey().notNull());for(let[i,f]of Object.entries(d.fields)){let g=t(f);a=a.addColumn(i,g,m=>(m=f.required!==!1?m.notNull():m,f.references&&(m=m.references(`${f.references.model}.${f.references.field}`)),f.unique&&(m=m.unique()),m))}p.push(a)}async function r(){for(let d of p)await d.execute()}async function s(){return p.map(a=>a.compile().sql).join(`;

`)}return{toBeCreated:u,toBeAdded:y,runMigrations:r,compileMigrations:s}}0&&(module.exports={convertFromDB,convertToDB,createFieldAttribute,createInternalAdapter,getAdapter,getAuthTables,getMigrations,getSchema,getWithHooks,matchType,toZodSchema});
